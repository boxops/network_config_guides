
##### ---[ Cisco_IOS with CCNA Topics ]--- #####


## Cisco Technologies Support Documentation:
https://www.cisco.com/c/en/us/tech/index.html


### OSI Model and TCP/IP Suite

# Networking models categorise and provide a structure for networking protocols and standards.
# Protocols are a set of rules defining how network devices and software should work.

## OSI (Open Systems Interconnection) model
# It is a conceptual model that categorises and standardises the different functions in a network.
# Created by the International Organisation for Standardisation (ISO).
# Functions are divided into 7 layers.
# These layers work together to make the network function.

# OSI Model Layers
# Layer 7 - Application
# Layer 6 - Presentation
# Layer 5 - Session
# Layer 4 - Transport
# Layer 3 - Network
# Layer 2 - Data Link
# Layer 1 - Physical


# Layer 7 - Application
# This layer is the closest to the end user.
# Interacts with software applications for example your web browser.
# HTTP and HTTPS are Layer 7 protocols.
# Functions of Layer 7 include:
# - Identifying communication partners
# - Synchronising communication

# The software application interacts with Layer 7 and wants to send some data to other systems.
# This data is processed through the OSI stack, each layer adding something to the original data.
# This is called encapsulation because the original data is encapsulated inside this additional information which is added on.
# By the time it reaches the physical layer, it becomes electrical signals in a wire and sent to the neighboring system.
# Then the neighbouring system performs the opposite process, the additions of each layer are stripped off until the data reaches the application layer of the neighbouring system.
# This process is called de-encapsulation as the additional information is removed as the data is processed up the stack.
# Both the encapsulation and de-encapsulation processes are examples of adjacent-layer interaction, interaction between the different layers of the OSI model.
# However, the commuincation between the application layers of the two different systems is called same-layer interaction.
# This same-layer interaction between application layers is what allows the application layer to perform its functions of identifying communication partners, synchronising communications, etc.

# Layer 6 - Presentation
# Data in the application layer is in application format.
# It needs to be translated to a different format to be sent over the network.
# The presentation layer's job is to translate between application and network formats.
# For example, encryption of data as it is sent, and dercyption of data as it is received.
# Also translates between different application layer formats.

# Layer 5 - Session
# Controls dialogues (sessions) between communicating hosts.
# Establishes, manages, and terminates connections between the local application (for example, your web browser) and the remote application (for example, YouTube).

# Network engineers do not usully work with the top 3 layers.
# Application developers work with the top layers of the OSI model to connect their applications over networks.
# The PDU (Protocol Data Unit) of the first 3 layers are called data.

# Layer 4 - Transport
# It segments and reassembles data for communications between end hosts.
# Breaks large pieces of data into smaller segments which can be more easily sent over the network and are less likely to cause transmission problems if errors occur.
# Provide host-to-host communication.
# The PDU us segment.

# Layer 3 - Network
# Provides connectivity between end hosts on different networks (ie. outside of the LAN).
# Provides path selection between source and destination.
# Routers operate at layer 3.
# The PDU is called a packet.

# Layer 2 - Data Link
# Provides node-to-node connectivity and data transfer (for example, PC to switch, switch to router, router to router).
# Defines how data is formatted for transmission over a physical medium (for example, copper UTP cables).
# Detects and (possibly) corrects Physical layer errors.
# Uses layer 2 addressing, separate from layer 3 addressing.
# Switches operate at layer 2.
# The PDU is called a frame.

# Layer 1 - Physical
# Defines physical characteristics of the medium used to transfer data between devices.
# For example, voltage levels, maximum transmission distances, physical connectors, cable specifications, etc.
# Digital bits are converted into electrical (for wired connections) or radio (for wireless connections) signals.
# Cables, pin layouts, etc. are related to the physical layer.
# The PDU is called bit.

# Acronym to remember the order of the OSI model:
# All People Seem To Need Data Processing

## OSI Model PDUs

# | PDU Name -> Encapsulation |
# | Data -> Data (no header or trailer) |
# | Segment -> Data + L4 Header (no trailer) |
# | Packet -> Data + L4 Header + L3 Header (no trailer) |
# | Frame -> Data + L4 Header + L3 Header + L2 Header + L2 Trailer


## TCP/IP Suite
# It is a conceptial model and set of commuincations protocols used in the Internet and other networks.
# Know as TCP/IP because those are two of the foundational protocols in the suite.
# Developed by the United States Department of Defense through DARPA (Defense Advanced Research Projects Agency).
# Similar structure to the OSI model, but with fewer layers.
# Note: The OSI model still influences how network engineers think and talk about networks.

# TCP/IP Suite Layers
# Layer 4 - Application (equivalent to Application, Presentation, and Session layers of the OSI model)
# Layer 3 - Transport (equivalent to the Transport layer of the OSI model)
# Layer 2 - Internet (equivalent to the Network layer of the OSI model)
# Layer 1 - Link (equivalent to Data Link and Physical layers of the OSI model)


### Interfaces and Cables

## Ethernet Standards (copper)
# | Speed | Common Name | IEEE Standard | Informal Name | Max Length |
# | 10 Mbps | Ethernet | 802.3i | 10BASE-T | 100m |
# | 100 Mbps | Fast Ethernet | 802.3u |100BASE-T | 100m |
# | 1 Gbps | Gigabit Ethernet | 802.3ab | 1000BASE-T | 100m |
# | 10 Gbps | 10 Gig Ethernet | 802.3an | 10BASE-T | 100m |

## Unshielded Twisted Pair (UTP) Cables
# 1) Full Duplex 10BASE-T and 100BASE-T use 2 pairs (4 wires)

# Straight through configuration
# Device 1 <---------------> Device 2
# 1 Transmit (Tx) <-----> 1 Receive (Rx)
# 2 Transmit (Tx) <-----> 2 Receive (Rx)
# 3 Receive (Rx) <-----> 3 Transmit (Tx)
# 4 (Not used) <-----> 4 (Not used)
# 5 (Not used) <-----> 5 (Not used)
# 6 Receive (Rx) <-----> 6 Transmit (Tx)
# 7 (Not used) <-----> 7 (Not used)
# 8 (Not used) <-----> 8 (Not used)

# Device types and pins they use to Transmit or Receive data
# | Device Type | Transmit (Tx Pins) | Receive (Rx Pins) |
# | Router | 1 and 2 | 3 and 6 |
# | Firewall | 1 and 2 | 3 and 6 |
# | PC | 1 and 2 | 3 and 6 |
# | Switch | 3 and 6 | 1 and 2 |


# 2) 1000BASE-T and 10GBASE-T use 4 pairs (8 wires)

# Each pair is bidirectional, meaning each pair is not dedicated specifically to transmitting data or receiving data.
# This is part of the reason that they can operate at much faster speeds.

# Auto-MDI-X allows devices to automatically detect which pins their neighbour is transmitting data on, and then adjust which pins they use to transmit and receive data.


## Fiber Optic Connections

# SFP (Small Form-Factor Pluggable)

# Fibre optic cable configuration
# 1 Transmit (Tx) <-----> 1 Receive (Rx)
# 2 Receive (RX) <-----> 2 Transmit (Tx)

# Layers of Fibre optic cable (from inside to outside)
# 1: The fibreglass core itself
# 2: Cladding that reflects light
# 3: A protective buffer
# 4: The outer jacket of the cable

# Types of fibre optic cables:
# 1) Multi-mode fiber
# - The core diameter is wider than single-mode fiber.
# - Allows multiple angles (modes) of light waves to enter the fiberglass core.
# - Allows longer cables than UTP, but shorter cables than single-mode fiber.
# - Cheaper than single-mode fiber (due to cheaper LED-based SFP transmitters).

# 2) Single-mode fiber
# - Core diameter is narrower than multimode fiber.
# - Light enters at a single angle (mode) from a laser-based transmitter.
# - Allows longer cables than both UTP and multimode fiber.
# - More expensive than multimode fiber (due to more expensive laster-based SFP transmitters used).

# Fiber-Optic Cable Standards
# | Informal Name | IEEE Standard | Speed | Cable Type | Max Length |
# | 1000BASE-LX | 802.3z | 1 Gbps | Multimode or Single-Mode | 550m (MM) 5km (SM) |
# | 10GBASE-SR | 802.3ae | 10 Gbps | Multimode | 400m |
# | 10GBASE-LR | 802.3ae | 10 Gbps | Single-Mode | 10km |
# | 10GBASE-ER | 802.3ae | 10 Gbps | Single-Mode | 30km |

## UTP vs Fiber-Optic Cabling
# UTP
# - Lower cost than fiber optic.
# - Shorter maximum distance than fiber optic (~100m).
# - Can be vulnerable to EMI (Electromagnetic interference).
# - RJ45 ports used with UTP are cheaper than SFP ports.
# - Emit (leak) a faint signal outside of the cable, which can be copied (security risk).

# Fiber-Optic
# - Higher cost than UTP.
# - Longer Maximum distance than UTP.
# - No vulnerability to EMI.
# - SFP ports are more expensive than RJ45 ports (single-mode is more expensive than multimode).
# - Does not emit any signal outside of the cable (no security risk).


### Ethernet LAN Switching

## Ethernet frame fields (26 bytes total with header + trailer)
# 1) Ethernet header:
# - Preamble (7 bytes or 56 bits). Allows devices to synchronise their receiver clocks
# - Start Frame Delimiter (SFD) (1 byte of 8 bits). Marks the end of the preamble, and the beginning of the rest of the frame.
# - Destination (6 byte or 48 bit MAC address). Indicate the device that is receiving the frame.
# - Source (6 byte or 48 bit MAC address). Indicate the device that is sending the frame.
# - Type (or Length) (2 bytes or 16 bits). A value of 1500 or less indicates the Length. A value of 1536 or greater indicates the type of the encapsulated packet.

# 2) Ethernet trailer:
# - Frame Check Sequence (FCS) (4 bytes or 32 bits). Detects corrupted data by running a CRC (Cyclic Redundancy Check) algorithm over the received data.

## MAC Address
# 6 byte or 48 bit in length physical address assigned to the device when it is made.
# It is globally unique.
# The first 3 bytes are the OUI (Organisationally Unique Identifier), which is assigned to the company making the device.
# The last 3 bytes are unique to the device itself.
# Written as 12 hexadecimal characters.

show mac address-table

# Aging: If the switch does not get any traffic from a MAC address for 5 minutes, it will remove the entry from the MAC address table.

# Manually remove all entries in the MAC address table
clear mac address-table dynamic

# Manually remove a specific MAC address
clear mac address-table dynamic address 0c2f.b011.9d00
clear mac address-table dynamic interface G0/0


## ARP (Address Resolution Protocol)
# ARP is used to discover the layer 2 address (MAC address) of a known layer 3 address (IP address).
# Consists of two messages:
# - ARP Request. It is broadcast and sent to all hosts on the network.
# - ARP Reply. It is unicast and only sent to one host (the host that sent the request).


### IP Addressing

# Free CCNA | IPv4 Addressing (Part 1) | Day 7 | CCNA 200-301 Complete Course
# https://www.youtube.com/watch?v=3ROdsfEUuhs&list=PLxbwE86jKRgMpuZuLBivzlM8s2Dk5lXBQ&index=13


### Switch Interfaces

## Half duplex:
# - The device cannot send and receive data at the same time.
# - If it is receiving a frame, it must wait before sending a frame.
# - Devices attached to a hub must operate in half duplex.

# Full duplex:
# - The device can send and receive data at the same time. It does not have to wait.

## Speed/Duplex Autonegotiation
# Interfaces that can run at different speeds (10/100 or 10/100/1000) have default settings of speed auto and duplex auto.
# Interfaces advertise their capabilities to the neighbouring device, and they negotiate the best speed and duplex settings they are both capable of.

# What if autonegotiation is disabled on the device connected to the switch?
# SPEED: 
# - The switch will try to sense the speed that the other device is operating at.
# - If it fails to sense the speed, it will use the slowest supported speed (ie. 10 Mbps on a 10/100/1000 interface)
# DUPLEX:
# - If the speed is 10 or 100 Mbps, the switch will use half duplex.
# - If the speed is 1000 Mbps or greater, the switch will use full duplex.


## Manually configure speed and duplex

# SW1
int f0/1
description ## to R1 ##
speed 100
duplex full
# If the other end is set to duplex auto, then the link will be half duplex.
# This is because the other device cannot detect the duplex and speed settings.


### Subnetting

## Classless Inter-Domain Routing (CIDR) Notations Table

# CIDR prefix length	Dotted Decimal Netmask	Number of Usable IPs	
# /1	128.0.0.0	2,147,483,646	
# /2	192.0.0.0	1,073,741,822	
# /3	224.0.0.0	536,870,910	
# /4	240.0.0.0	268,435,454	
# /5	248.0.0.0	134,217,726	
# /6	252.0.0.0	67,108,862	
# /7	254.0.0.0	33,554,430	
# /8	255.0.0.0	16,777,214	
			
# /9	255.128.0.0	8,388,606	
# /10	255.192.0.0	4,194,302	
# /11	255.224.0.0	2,097,150	
# /12	255.240.0.0	1,048,574	
# /13	255.248.0.0	524,286	
# /14	255.252.0.0	262,142	
# /15	255.254.0.0	131,070	
# /16	255.255.0.0	65,534	
			
# /17	255.255.128.0	32,766	
# /18	255.255.192.0	16,382	
# /19	255.255.224.0	8,190	
# /20	255.255.240.0	4,094	
# /21	255.255.248.0	2,046	
# /22	255.255.252.0	1,022	
# /23	255.255.254.0	510	
# /24	255.255.255.0	254	
			
# /25	255.255.255.128	126	
# /26	255.255.255.192	62	
# /27	255.255.255.224	30	
# /28	255.255.255.240	14	
# /29	255.255.255.248	6	
# /30	255.255.255.252	2	
# /31	255.255.255.254	0	
# /32	255.255.255.255	1	


## Quiz
# PC1 has an IP address of 10.217.182.223/11
# Identify the following for PC1's subnet:
# 1) Network address:
# 2) Broadcast address:
# 3) First usable address:
# 4) Last usable address:
# 5) Number of usable host addresses:

# 10.217.182.223
# 00001010.11011001.10110110.11011111

# 1) To find the network address, change all of the host bits to 0.
# 00001010.11000000.00000000.00000000
# 10.192.0.0

# 2) Change all the host bits to 1, and you will get the broadcast address.
# 00001010.11011111.11111111.11111111
# 10.223.255.255

# 3) Add 1 to the network address, and you get the first usable address.
# 10.192.0.1

# 4) Subtract 1 from the broadcast address and you get the last usable address.
# 10.223.255.254

# 5) Determine the number of host addresses by counting the number of host bits, and raise 2 to the power of the host bits.
# 21 host bits = 2 on the power of 21 - 2 = 2097150 hosts per subnet


# Variable-Length Subnet Masks (VLSM)
# VLSM is the process of creating subnets of different sizes, to make your use of network addresses more efficient.

# VLSM Steps:
# 1) Assign the largest subnet at the start of the address space.
# 2) Assign the second-largest subnet after it.
# 3) Repeat the process until all subnets have been assigned.

# Example
# Subnet: 192.168.1.0/24
# Tokyo LAN A: 110 hosts
# Tokyo LAN B: 8 hosts
# Toronto LAN A: 29 hosts
# Toronto LAN B: 45 hosts
# Point-to-point connection: 2 hosts

# Tokyo LAN A
# - Network address: 192.168.1.0/25
# - Broadcast address: 192.168.1.127/25
# - First usable address: 192.168.1.1/25
# - Last usable address: 192.168.1.126/25
# - Number of usable host addresses: 126

# Tokyo LAN B
# - Network address: 192.168.1.224/28
# - Broadcast address: 192.168.1.239/28
# - First usable address: 192.168.1.225/28
# - Last usable address: 192.168.1.238/28
# - Number of usable host addresses: 14

# Toronto LAN A
# - Network address: 192.168.1.192/27
# - Broadcast address: 192.168.1.223/27
# - First usable address: 192.168.1.193/27
# - Last usable address: 192.168.1.222/27
# - Number of usable host addresses: 30

# Toronto LAN B
# - Network address: 192.168.1.128/26
# - Broadcast address: 192.168.1.191/26
# - First usable address: 192.168.1.129/26
# - Last usable address: 192.168.1.190/26
# - Number of usable host addresses: 62

# Point-to-point connection
# - Network address: 192.168.1.240/30
# - Broadcast address: 192.168.1.243/30
# - First usable address: 192.168.1.241/30
# - Last usable address: 192.168.1.242/30
# - Number of usable host addresses: 2


### VLANs

# VLANs are configured on switches on a per-interface basis.
# Logically separate end hosts at Layer 2.
# Switches do not forward traffic directly between hosts in different VLANs.
# VLANs 1, 1002-1005 exist by default and cannot be deleted.
# An access port is a switchport which belongs to a single VLAN, and usually connects to end hosts like PCs.
# Switchports carry multiple VLANs are called trunk ports.

## Trunk Ports
# In a small network with few VLANs, it is possible to use a separate interface for each VLAN when connecting switches to switches, and switches to routers.
# However, when the number of VLANs increases, this is not viable. It will result in wasted interfaces and often routers will not have enough interfaces for each VLAN.
# You can use trunk ports to carry traffic from multiple VLANs over a single interface.

## VLAN Tagging
# Switches will tag all frames that they send over a trunk link.
# This allows the receiving switch to know which VLAN the frame belongs to.
# Trunk ports = tagged ports
# Access ports = untagged ports

# There are two main trunking protocols:
# - ISL (Inter-Switch Link)
# - IEEE 802.1Q (or dot1q)
# ISL is an old Cisco proprietary protocol created before the industry standard IEEE 802.1Q.
# IEEE 802.1Q is an industry standard protocol created by the IEEE (Institute of Electrical and Electronics Engineers).
# You will probably NEVER use ISL in the real world. Even modern Cisco equipment does not support it.
# The dot1q tag is inserted into the Ethernet header between the Source and the Type/Length fields.
# The tag is 4 bytes (32 bits) in length.
# The tag consists of two main fields:
# - Tag Protocol Identifier (TPID) (2 bytes or 16 bits). Always set to 0x8100. This indicates that the frame is 802.1Q-tagged.
# - Tag Control Information (TCI).
# The TCI consists of three sub-fields:
# - Priority Code Point (PCP) is Used for Class of Service (CoS), which prioritises important traffic in congested networks.
# - Drop Eligible Indicator (DEI) (1 bit) isused to indicate frames that can be dropped if the network is congested.
# - VLAN ID (VID) identifies the VLAN the frame belongs to. 12 bits = 4096 total VLANs (2^12), range of 0 - 4095
# VLANs 0 and 4095 are reserved and cannot be used.
# The actual range of VLANs is 1 - 4094.

## VLAN Ranges
# The range of VLANs (1 - 4094) is divided into two sections:
# - Normal VLANs: 1 - 1005
# - Extended VLANs: 1006 - 4094
# Some older devices cannot use the extended VLAN range, however, it is safe to expect that modern switches will support the extended VLAN range.

## Native VLAN
# 802.1Q has a feature called the native VLAN. (ISL does not have this feature)
# The native VLAN is VLAN 1 by default on all trunk ports, however, this can be manually configured on each trunk port.
# The switch does not add an 802.1Q tag to frames in the native VLAN.
# When a switch receives an untagged frame on a trunk port, it assumes the frame belongs to the native VLAN.
# ! It is very important that the native VLAN matches !
# Switches will still forward traffic if there is a native VLAN mismatch, but problems will occur.














## VLAN Access Port Configuration
# SW1
int range g1/0-3
switchport mode access
switchport access vlan 10
int range g2/0-3
switchport mode access
switchport access vlan 20
int range g3/0-3
switchport mode access
switchport access vlan 30
exit
vlan 10
name Engineering
vlan 20
name HR
vlan 30
name Sales

do show vlan brief


## VLAN Trunk Port Configuration
# SW1
int g0/0
switchport trunk encapsulation dot1q
switchport mode trunk
# Set allowed VLANs on the trunk interface
switchport trunk allowed vlan 10,30
# (Optional) Add allowed VLANs to the trunk interface
switchport trunk allowed vlan add 20
# (Optional) Remove VLANs from the trunk interface
switchport trunk allowed vlan remove 20

do show interfaces trunk

# For security purposes, it is best to change the native VLAN to a unused VLAN. (Make sure the native VLAN matches on between switches).
switchport trunk native vlan 1001

# This commands only shows the access ports assigned to each VLAN. NOT the trunk ports that allow each VLAN.
do show vlan brief


## Router on a Stick (ROAS)
# ROAS is used to route between multiple VLANs using a single interface on the router and switch.
# The switch interface is configured as a regular trunk.
# The router interface is configured using subinterfaces. You configure the VLAN tag and IP address on each subinterface.
# The router will behave as if frames arriving with a certain VLAN tag have arrived on the subinterface configured with that VLAN tag.
# The router will tag frames sent out of each subinterface with the VLAN tag configured on the subinterface.


# ROAS Configuration

# On R1
int g0/0.10
encapsulation dot1Q 10
ip address 10.0.0.62 255.255.255.192

int g0/0.20
encapsulation dot1Q 20
ip address 10.0.0.216 255.255.255.192

# On SW1
int g0/0
switchport mode trunk
exit
vlan 10
name VLAN-A
vlan 20
name VLAN-B
int f0/1
switchport mode access
switchport access vlan 10
exit
int f0/2
switchport mode access
switchport access vlan 20
exit

show vlans


## Native VLAN on a router (ROAS)

# The native VLAN feature does have one benefit.
# Because frames in the native VLAN are not tagged, it is more efficient, each frame is smaller so it allows the device to send more frames per second.

# There are 2 methods of configuring the native VLAn on a router:
# 1) Use the command on the router subinterface:
int g0/0.10
encapsulation dot1q [vlan-id] native
# 2) Configure the IP address for the native VLAN on the router's physical interface (the encapsulation dot1q vlan-id native command is not necessary)
no int g0/0.10
int g0/0
ip address 192.168.1.62 255.255.255.192


## Layer 3 (Multilayer) Switches
# A multilayer switch is capable of both switching and routing.
# It is Layer 3 aware.
# You can assign IP addresses to its interfaces, like a router.
# You can create virtual interfaces for each VLAN, and assign IP addresses to those interfaces.
# You can configure routes on it, just like a router.
# It can be used for inter-VLAN routing.
# In large networks a multilayer switch is the preferred method of inter-VLAN routing.

## Inter-VLAN Routing via SVI (Switch Virtual Interface)
# SVIs are the virtual interfaces you can assign IP addresses to in a multilayer switch.
# Configure each PC to use the SVI (NOT the router) as their gateway address.
# To send traffic to different subnets/VLANs, the PCs will send traffic to the switch, and the switch will route the traffic.


## Migrate from ROAS routing to SVI routing

# R1
no interface g0/0.10
no interface g0/0.20
no interface g0/0.30
# Reset G0/0 interface to its default settings
default interface g0/0
int g0/0
ip address 192.168.1.194 255.255.255.252

do show ip int brief

# SW1
default int g0/1
# Enable Layer 3 routing
ip routing
int g0/1
# Configure the switch interface as a routed port
no switchport
ip address 192.168.1.193 2555.255.255.252
# Default route pointing to R1
ip route 0.0.0.0 0.0.0.0 192.168.1.194

do show ip int brief
do show int status

# SW2
# SVI configuration
int vlan 10
ip address 192.168.1.62 255.255.255.192
no sh
int vlan 20
ip address 192.168.1.126 255.255.255.192
no sh
int vlan 30
ip address 192.168.1.190 255.255.255.192
no sh


## Conditions required for an SVI to be UP/UP:
# 1) The VLAN must exist on the switch.
# 2) The switch must have at least one access port in the VLAN in an up/up state, and/or one trunk port that allows the VLAN that is in an up/up state.
# 3) The VLAN must not be shutdown (you can use the shutdown command to disable a VLAN).


### DTP / VTP (Removed from the CCNA exam topics)

# DTP (Dynamic Trunking Protocol) is a Cisco proprietary protocol that allows Cisco switches to dynamically determine their interface status (access or trunk) without manual configuration.
# DTP is enabled by default on all Cisco switch interfaces.
# So far, we have been manually configuring switchports using these commands:
switchport mode access
switchport mode trunk
# For security purposes, manual configuration is recommended.
# DTP should be disabled on all switchports.

## DTP Configuration
switchport mode dynamic [auto|desirable]

# A switchport in dynamic desirable mode will actively try to form a trunk with other Cisco switches.
# It will form a trunk if connected to another switchport in the following modes:
switchport mode trunk
switchport mode dynamic desirable
switchport mode dynamic auto

show int g0/0 switchport

# A switchport in dynamic auto mode will NOT actively try to form a trunk with other Cisco switches, however, it will form a trunk if the switch connected to it is actively trying to form a trunk.
# It will form a trunk with a switchport in the following modes:
switchport mode trunk
switchport mode dynamic desirable


## Chart Summarising the Resulting Operation Mode of DTP
# | Administrative Mode | Trunk | Dynamic Desirable | Access | Dynamic Auto |
# ---------------------------------------------------------------------------
# | Trunk | Trunk | Trunk | X | Trunk |
# | Dynamic Desirable | Trunk | Trunk | Access | Trunk |
# | Access | X | Access | Access | Access |
# | Dynamic Auto | Trunk | Trunk | Access | Access |


# DTP will not form a trunk with a router, PC, etc. The switchport will be in access mode.
# The default administrative mode on older switches is:
switchport mode dynamic desirable
# The default administrative mode on newer switches is:
switchport mode dynamic auto
# Disable DTP negotiation on an interface:
int g0/0
switchport nonegotiate
# Configuring an access port with switchport mode access also disables DTP negotiation on an interface.

# Switches that support both 802.1Q and ISL trunk encapsulations can use DTP to negotiate the encapsulation they will use.
# This negotiation is enabled by default, as the default trunk encapsulation mode is:
switchport trunk encapsulation negotiate
# For DTP, ISL is favored over 802.1Q, so if both switches support ISL, then it will be selected.
# DTP frames are sent in VLAN1 when using ISL, or in the native VLAN when using 802.1Q (the default native VLAn is VLAN1, however).


## VTP (VLAN Trunking Protocol)

# VTP allows you to configure VLANs on a central VTP server switch, and other switches (VTP clients) will synchronise their VLAN database to the server.
# It is designed for large networks with many VLANs, so that you do not have to configure each VLAN on every switch.
# It is rarely used, and it is recommended that you do NOT use it.
# There are three VTP versions: 1, 2, and 3.
# There are three VTP modes: server, client, and transparent.
# Cisco switches operate in VTP server mode by default.

# VTP Servers:
# - Can add/modify/delete VLANs.
# - Store the VLAN database in non-volatile RAM (NVRAM).
# - Will increase the revision number every time a VLAN is added/modified/deleted/
# - Will advertise the latest version of the VLAN database on trunk interfaces, and the VTP clients will synchronise their VLAn database to it.
# - VTP servers also function as VTP clients, therefore, a VTP server will synchronise to another VTP server with a higher revision number.

# VTP Clients:
# - Cannot add/modify/delete VLANs.
# - Do not store the VLAN database in NVRAM. (in VTPv3, they do)
# - Will synchronise their VLAN database to the server with the highest revision number in their VTP domain.
# - Will advertise their VLAN database, and forward VTP advertisements to other clients over their trunk ports.

# VTPv1/v2 do not support the extended VLAN range (1006-4094). Only VTPv3 supports them.
# If a switch with no VTP domain (domain null) receives a VTP advertisement with a VTP domain name, it will automatically join that VTP domain.
# If a switch receives a VTP advertisement in the same VTP domain with a higher revision number, it will update its VLAN database to match.

# One danger of VTP:
# If you connect an old switch with a higher revision number to your network (and the VTP domain name matches), all switches in the domain will sync their VLAN database to that switch.

# VTP Transparent mode:
# - Does not participate in the VTP domain (does not synch its VLAN database).
# - Maintains its own VLAN database in NVRAM. It can add/modify/delete VLANs, but they will not be advertised to other switches.
# - Will forward VTP advertisements that are in the same domain as it.

# Changing the VTP domain to an unused domain will reset the revision number to 0.
# Changing the VTP mode to transparent will also reset the revision number to 0.
# Changing the VTP version increases the revision number, and advertisements with this new revision number will be sent.
# Other servers and clients will then sync and start operating in version 2 as well.

# VTPv2 is not much different than VTPv1.
# The major difference is that VTPv2 introduces support for Token Ring VLANs.
# If you use Token Ring VLANs, you must enable VTPv2. Otherwise, there is no reason to use VTPv2.


### Spanning Tree Protocol

## Network Redundancy
# Redundancy is an essential part of network design.
# Modern network are expected to run 24/7/365. Even a short downtime can be disastrous for a business.
# If one network component fails, you must ensure that other components will take over with little or no downtime.
# As much as possible, you must implement redundancy at every possible point in the network.

## Broadcast Storms
# The Ethernet header does not have a Time-to-Live (TTL) field. Broadcast frames will loop around the network indefinitely.
# If enough of these looped broadcasts accumulate in the network, the network will be too congested for legitimate traffic to use the network.
# This is called a broadcast storm.

## MAC Address Flapping
# Network congestion is not the only problem.
# Each time a frame arrives on a switchport, the switch uses the source MAC address field to learn the MAC address and update its MAC address table.
# When frames with the same source MAC address repeatedly arrive on different interfaces, the switch is continuously updating the interface in its MAC address table.
# This is know as MAC address flapping.

## Spanning Tree Protocol (STP)
# Classic Spanning Tree Protocol is IEEE 802.1D.
# Switches from ALL vendors run STP by default.
# STP prevents Layer 2 loops by placing redundant ports in a blocking state, essentially disabling the interface.
# These interfaces act as backups that can enter a forwarding state if an active (currently forwarding) interface fails.
# Interfaces in a forwarding state behave normally. They send and receive all normal traffic.
# Interfaces in a blocking state only send or receive STP messages (called BPDUs = Bridge Protocol Data Units).

# Spanning Tree Protocol still uses the term 'bridge'. 
# However, when we use the term bridge, we really mean switch. Bridges are not used in modern networks.

# By selecting which ports are forwarding and which ports are blocking, STP creates a single path to/from each point in the network.
# This prevents Layer 2 loops.
# There is a set process that STP uses to determine which ports should be forwarding and which should be blocking.
# STP-enabled switches send/receive Hello BPDUs out of all interfaces, the default timer is 2 seconds (the switch will send a Hello BPDU out of every interface, once every 2 seconds).
# If a switch receives a Hello BPDU on an interface, it knows that interface is connected to another switch (routers, PCs, etc. do not use STP, so they do not send Hello BPDUs).

# Switches use one field in the STP BPDU, the Bridge ID field, to elect a root bridge for the network.
# The switch with the lowest Bridge ID becomes the root bridge.
# ALL ports on the root bridge are put in a forwarding state, and other swithces in the topology must have a path to reach the root bridge.

# The default bridge priority is 32768 on all switches, so by default the MAC address is used as the tie-breaker (lowest MAC address becomes the root bridge).
# The Bridge Priority is compared first. If they tie, the MAC address is then compared.



## Spanning Tree Protocol Priorities (Important!)
# Step 1. Determine the root switch:
# - Lowest bridge priority
# - Tie breaker: The lowest root bridge ID (lowest MAC address) will determine the root switch if there are multiple switches with the same priority.
# All ports on the root bridge are designated ports (forwarding state).

# Step 2. Determine the root ports on switches:
# All non-root switches have a root port which is the best port to use to get to the root switch.
# - Lowest path cost to the root bridge - Favors the upstream switch with the least cost to root
# - Tie breaker 1: The neighbor with the lowest priority wins.
# - Tie breaker 2: The neighbor with the lowest bridge ID (lowest MAC address) wins. Does not work if there are multiple links to the same switch.
# - Tie breaker 3: Lowest neighbor port priority wins. (128 by default on all ports)
# - Tie breaker 4: Lowest neighbor interface number wins.

# Step 2. Determine the designated ports on switches:
# Designated ports are the best (closest) ports to use to get to the route switch when you are on that segment.
# - Lowest path cost to the root bridge
# - Tie breaker 1: The neighbor with the lowest priority wins.
# - Tie breaker 2: The neighbor with the lowest bridge ID (lowest MAC address) wins. Does not work if there are multiple links to the same switch.
# - Tie breaker 3: Lowest neighbor port priority wins. (128 by default on all ports)
# - Tie breaker 4: Lowest neighbor interface number wins.

# Step 3. Determine the blocked ports on switches:
# All the remaining ports will be blocking (become an alternate port).



# The Bridge Priority has been updated to be made of two parts:
# - The bridge priority, which is 4 bits
# - The the extended system ID which is just the VLAN ID, which is 12 bits.
# Cisco switches use a version of STP called PVST (Per-VLAN Spanning Tree).
# PVST runs a separate STP instance in each VLAN, so in each VLAN different instances can be forwarding/blocking.
# One interface could be forwarding in VLAN1, but blocking in VLAN2, for example.
# By adding the VLAN ID into the bridge priority, the switch will have a different bridge ID in each VLAN.

# In the default VLAN of 1, the default bridge priority is actually 32769 (32768 + 1).
# If you want to change the switch's bridge priority (without changing VLAN numbers), what is the minimum unit of increase/decrease?
# The bridge priority + extended system ID is a single field of the bridge ID, however the extended system ID is set and cannot be changed (because it is determined by the VLAN ID).
# Therefore, you can only change the total bridge priority (bridge priority + extended system ID) in units of 4096, the value of the least significant bit of the bridge priority.
# 16384 + 8192 + 4096 + 1 = 28673

# The STP bridge priority can only be changed in units of 4096.
# The valid values you can configure are:
# 0, 4096, 8192, 12288, 16384, 20480, 24576, 28672, 32768, 36864, 40960, 45056, 49152, 53248, 57344, 61440.
# The Extended System ID will then be added to this number to make the total bridge priority.


## STP Election Process
# 1) One switch with the lowest bridge ID is elected as the root bridge. All ports on the root bridge are designated ports (forwarding state).
# Root bridge selection:
# 1 - Lowest bridge ID (lowest MAC address)

# 2) Each remaining switch will select ONE of its interfaces to be its root port. 
# The interface with the lowest root cost will be the root port. 
# Root ports are also in a forwarding state.
# Ports across from the root port are always designated ports.
# The root cost is the total cost of the outgoing interfaces along the path to the root bridge.
# The root bridge has a cost of 0 on all its interfaces.
# Root port selection:
# 1: Lowest root cost
# 2: Lowest neighbor bridge ID (lowest MAC address)
# 3: Lowest neighbor port ID (STP Port ID = port priority (default 128) + port number)
# - The neighbor switch's port ID is used to break the tie, not the local switch's port ID.
# Note: Every collision domain on a switch has a single STP designated port.

# 3) Each remaining collision domain will select ONE interface to be a designated port (forwarding state).
# The other port in the collision domain will be non-designated (blocking).
# Designated port selection:
# 1: Interface on switch with lowest root cost
# 2: Interface on switch with lowest bridge ID
# The other interface will be a non-designated port, in a blocking state.

## STP Path Costs
# | Speed | STP Cost |
# --------------------
# | 10 Mbps | 100 |
# | 100 Mbps | 19 |
# | 1 Gbps | 4 |
# | 10 Gbps | 2 |

## Spanning Tree Port States
# Root/Designated ports remain stable in a Forwarding state.
# Non-designated ports remain stable in a Blocking state.
# Listening and Learning are transitional states which are passed through when an interface is activated, or when a Blocking port must transition to a Forwarding state due to a change in the network topology.

# | STP Port State | Stable/Transitional |
# ----------------------------------------
# | Blocking | Stable |
# | Listening | Transitional |
# | Learning | Transitional |
# | Forwarding | Stable |

## STP Blocking State
# Non-designated ports are in a Blocking state.
# Interfaces in a Blocking state:
# - are effectively disabled to prevent loops.
# - do not send/receive regular network traffic.
# - receive STP BPDUs.
# - do NOT forward STP BPDUs.
# - do NOT learn MAC addresses.

## STP Listening State
# After the Blocking state, interfaces with the Designated or Root role enter the Listening state.
# Only Designated or Root ports enter the Listening state (Non-designated ports are always Blocking).
# The Listening state is 15 seconds long by default. This is determined by the Forward delay timer.
# An interface in Listening state:
# - ONLY forwards/receives STP BPDUs.
# - does NOT send/receive regular traffic.
# - does NOT learn MAC addresses from regular traffic that arrives on the interface.

## STP Learning State
# After the Listening state, a Designated or Root port will enter the Learning state.
# The Learning state is 15 seconds long by default. This is determined by the Forward delay timer (the same timer is used for both the Listening and Learning states).
# An interface in the Learning state:
# - ONLY sends/receives STP BPDUs.
# - does NOT send/receive regular traffic.
# - learns MAC addresses from regular traffic that arrives on the interface.

## STP Forwarding State
# Root and Designated ports are in a Forwarding state.
# A port in the Forwarding state:
# - operate as normal.
# - sends/receives BPDUs.
# - sends/receives normal traffic.
# - learns MAC addresses.

## Spanning Tree Port States Table
# | STP Port State | Send/Receive BPDUs | Frame forwarding (regular traffic) | MAC address learning | Stable/Transitional |
# | ----------------------------------------------------------------------------------------------------------------------|
# | Blocking | NO/YES | NO | NO | Stable |
# | Listening | YES/YES | NO | NO | Transitional |
# | Learning | YES/YES | NO | YES | Transitional |
# | Forwarding | YES/YES | YES | YES | Stable |
# | Disabled | NO/NO | NO | NO | Stable |

## Spanning Tree Timers
# | STP Timer | Purpose | Duration |
# |--------------------------------|
# | Hello | How often the root bridge sends hello BPDUs | 2 sec |
# | Forward delay | How long the switch will stay in the Listening and Learning states (each state is 15 seconds = total 30 seconds) | 15 sec |
# | Max Age | How long an interface will wait after ceasing to receive Hello BPDUs to change the STP topology. | 20 sec (10* hello) |

# If another BPDU is received before the max age timer counts down to 0, the time will reset to 20 seconds and no changes will occur.
# If another BPDU is not received, the max age timer counts down to 0 and the switch will reevaluate its STP choices, including root bridge, and local root, designated, and non-designated ports.
# If a non-designated port is selected to become a designated or root port, it will transition from the blocking state to the listening state (15 seconds), learning state (15 seconds), and then finally the forwarding state.
# So, it can take a total of 50 seconds for a blocking interface to transition to forwarding.
# These timers and transitional states are to make sure that loops are not accidentally created by an interface moving to forwarding state too soon.
# A forwarding interface can move directly to a blocking state (there is no worry about creating a loop by blocking an interface).
# A blocking interface cannot move directly to forwarding state. It must go through the listening and learning states.

# Regular STP uses a destination MAC address of 0180.c200.0000
# PVST+ uses a destination MAC address of 0100.0ccc.cccd

# The STP timers on the root bridge will determine the STP timers for the entire network.

## Spanning Tree Optional Features (STP Toolkit)
# Portfast can be enabled on interfaces which are connected to end hosts.
# These are designated ports in a forwarding state.
# Portfast allows a port to move immediately to the Forwarding state, bypassing Listening and Learning.
# If used, it must be enabled only on ports connected to end hosts.
# If enabled on a port connected to another switch, it could cause a Layer 2 loop.

# Enable portfast on a single interface:
interface g0/1
spanning-tree portfast

# You can also enable portast on all access ports (not trunk ports) with the following command:
spanning-tree portfast default

# BPDU Guard
# If an interface with BPDU Guard enabled receives a BPDU from another switch, the interface will be shut down to prevent a loop from forming.

Enable BPDU Guard on a single interface:
interface g0/1
spanning-tree bpduguard enable

# You can also enable BPDU Guard on all Portfast-enabled interfaces with the following command:
spanning-tree portfast bpduguard default

# Root Guard
# If you enabled root guard on an interface, even if it receives a superior BPDU (lower bridge ID) on that interface, the switch will not accept the new switch as the root bridge. The interface will be disabled.

# Loop Guard
# If you enable loop guard on an interface, even if the interface stops receiving BPDUs, it will not start forwarding. The interface will be disabled.

## Configure the Spanning Tree mode
# Enable the classic version of STP
spanning-tree mode pvst
# Enable rapid STP (enabled by default)
spanning-tree mode rapid-pvst

## Configure the Primary Root Bridge
spanning-tree vlan 1 root primary
do show spanning-tree

## Configure the Secondary Root Bridge
spanning-tree vlan 1 root secondary
do show spanning-tree

# The spanning-tree vlan [vlan-number] root primary command sets the STP priority to 24576.
# If another switch already has a priority lower than 24576, it sets this switch's priority to 4096 less than the other switch's priority.

## Configure STP Port Settings
# Change the cost
spanning-tree vlan 1 cost 200
# Change the port priority
spanning-tree vlan 1 port-priority 32


## Spanning Tree Versions - Industry Standards (IEEE)
# 1) Spanning Tree Protocol (802.1D)
# - The original STP
# - All VLANs share one STP instance.
# - Therefore, cannot load balance.

# 2) Rapid Spanning Tree Protocol (802.1w)
# - Much faster at converging/adapting to network changes than 802.1D
# - All VLANs share one STP instance.
# - Therefore, cannot load balance.

# 3) Multiple Spanning Tree Protocol (802.1s)
# - Uses modified RSTP mechanics.
# - Can group multiple VLANs into instances (ie. VLANs 1-5 in instance 1, VLANs 6-10 in instance 2) to perform load balancing.

## Spanning Tree Versions - Cisco Standards
# 1) Per-VLAN Spanning Tree Plus (PVST+)
# - Cisco's upgrade to 802.1D
# - Each VLAN has its own STP instance.
# - Can load balance by blocking different ports in each VLAN.

# 2) Rapid Per-VLAN Spanning Tree Plus (Rapid PVST+)
# - Cisco's upgrade to 802.1w
# - Each VLAN has its own STP instance.
# - Can load balance by blocking different ports in each VLAN.

## Similarities between STP and RSTP:
# - RSTP serves the same purpose as STP, blocking specific ports to prevent layer 2 loops.
# - RSTP elects a root bridge with the same rules as STP.
# - RST elects root ports with the same rules as STP.
# - RSTP elects designated ports with the same rules as STP.

## RSTP Port Cost Update
# | Speed | STP Cost | RSTP Cost |
# |------------------------------|
# | 10 Mbps | 100 | 2000000 |
# | 100 Mbps | 19 | 200000 |
# | 1 Gbps | 4 | 20000 |
# | 10 Gbps | 2 | 2000 |
# | 100 Gbps | X | 200 |
# | 1 Tbps | X | 20 |

## RSTP Port States
# | STP Port State | Send/Receive BPDUs | Frame forwarding (regular traffic) | MAC address learning | Stable/Transitional |
# |-----------------------------------------------------------------------------------------------------------------------|
# | Discarding | NO/YES | NO | NO | Stable |
# | Learning | YES/YES | NO | YES | Transitional |
# | Forwarding | YES/YES | YES | YES | Stable |

# If a port is administratively disabled (shutdown command) = discarding state.
# If a port is enabled but blocking traffic to prevent Layer 2 loops = discarding state.

## RSTP Port Roles
# The root port role remains unchanged in RSTP.
# - The port that is closest to the root bridge becomes the root port for the switch.
# - The root bridge is the only switch that does not have a root port.
# The designated port role remains unchanged in RSTP.
# - The port on a segment (collision domain) that sends the best BPDU is that segment's designated port (only one per segment)
# The non-designated port role is split into two separate roles in RSTP:
# - the alternate port role
# - the backup port role

## RSTP Alternate Port Role
# The RSTP alternate port role is a discarding port that receives a superior BPDU from another switch.
# This is the same as what you have learned about blocking ports in classic STP.
# Functions as a backup to the root port.
# If the root port fails, the switch can immediately move its best alternate port to forwarding.
# This immediate move to forwarding state functions like a classic STP optional feature called UplinkFast.
# - Because it is built into RSTP, you do not need to activate UplinkFast when using RSTP/Rapid PVST+.

## RSTP BackboneFast Functionality
# Another STP optional feature that was built into RSTP is BackboneFast.
# BackboneFast allows a swtich to expire the made age timers on its interface and rapidly forward the superior BPDUs to the neighboring switches.
# This functionality is built into RSTP, so it does not need to be configured.

## RSTP Backup Port Role
# The RSTP backup port role is a discarding port that receives a superior BPDU from another interface on the same switch.
# This only happens when two interfaces are connected to the same collision domain (via a hub).
# Hubs are not used in modern networks, so you will probably not encounter an RSTP backup port.
# Function as a backup for a designated port.
# The interface with the lowest port ID will be selected as the designated port, and the other will be the backup port.

## RSTP Timers
# All switches running Rapid STP send their own BPDUs every hello time (2 seconds).
# Switches age the BPDU information much more quickly.
# In classic STP, a switch waits 10 hello intervals (20 seconds).
# In Rapid STP, a switch considers a neighbor lost if it misses 3 BPDUs (6 seconds).
# It will then flush all MAC addresses learned on that interface.

## RSTP Link Types
# RSTP distinguishes between three different link types:
# - Edge: a port that is connected to an end host. Moves directly to forwarding without negotiation. Edge ports are the same as Portfast.
# - Point-to-point: a direct connection between two switches. They function in full-duplex and it is automatically detected.
# - Shared: a connection to a hub. Must operate in half-duplex mode and it is automatically detected.


### Dynamic Routing

# Network route: A route to a network/subnet (mask length less than /32).
# Host route: A route to a specific host (/32 mask).

# Routers can use dynamic routing protocols to advertise information about the routes they know to other routers.
# They form adjacencies / neighbor relationships / neighborships with adjacent routers to exchange this information.
# If multiple routes to a destination are learned, the router determines which route is superior and adds it to the routing table.
# It uses the metric of the route to decide which is superior (lower metric = superior).

## Types of Dynamic Routing Protocols
# Dynamic routing protocols can be divided into two main categories:
# 1) IGP (Interior Gateway Protocol) is used to share routes within a single Autonomus System (AS), which is a single organisation (ie. company).
# Algorithm Types: 
# Distance Vector: 
# - RIP (Routing Information Protocol)
# - EIGRP (Enhanced Interior Gateway Routing Protocol)
# Link State:
# - OSPF (Open Shortest Path First)
# - IS-IS (Intermediate System to Intermediate System)

# 2) EGP (Exterior Gateway Protocol) is used to share routes between different autonomus systems.
# Algorithm Type:
# Path Vector:
# - BGP (Border Gateway Protocol)


## Distance Vector Routing Protocols
# Distance vector protocols were invented before link state protocols.
# Early examples are RIPv1 and Cisco's proprietary protocol IGRP (which was updated to EIGRP).
# Distance vector protocols operate by sending the following to their directly connected neighbors:
# - their known destination networks
# - their metric to reach their know destination networks

# This method of sharing route information is of ten called routing by rumour.
# This is because the router does not know about the network beyond its neighbors.
# It only knows the information that its neighbors tell it.
# The reason for the name ‘distance vector’ is because the routers only learn the ‘distance’, which is the metric, and the ‘vector’, which is the direction to send the traffic, the next-hop router, of each route.

## Link State Routing Protocols
# When using a link state routing protocol, every router creates a connectivity map of the network.
# To allow this, each router advertises information about its interfaces (connected networks) to its neighbors.
# These advertisements are passed along to other routers, until all routers in the network develop the same map of the network.
# Each router independently uses this map to calculate the best routes to each destination.
# Link state protocols use more resources (CPU) on the router, because more information is shared.
# However, link state protocols tend to be faster in reacting to changes in the network than distance vector protocols.

## Dynamic Routing Protocol Metrics
# | IGP | Metric | Explanation |
# |----------------------------|
# | RIP | Hop count | Each router in the path counts as one hop. The total metric is the total number of hops to the destination. Links of all speeds are equal. |
# | EIGRP | Metric based on bandwidth and delay | Complex formula that can take into account many values. By default, the bandwidth of the slowest link in the route and the total delay of all links in the route are used. |
# | OSPF | Cost | The cost of each link is calculated based on bandwidth. The total metric is the total cost of each link in the route. | 
# | IS-IS | Cost | The total metric is the total cost of each link in the route. The cost of each link is not automatically calculated by default. All links have a cost of 10 by default. |

## Administrative Distance
# In most cases a company will only use a single IGP, usually OSPF or EIGRP.
# However, in some cases they might use two. For example, if two companies connect their networks to share information, two different routing protocols might be in use.
# Metric is used to compare routes learned via the same routing protocol.
# Different routing protocols use totally different metrics, so they cannot be compared.
# For example, an OSPF route to 192.168.4.0/24 might have a metric of 30, while an EIGRP route to the same destination might have a metric of 33280.
# The administrative distance (AD) is used to determine which routing protocol is preferred.
# A lower AD is preferred, and indicates that the routing protocol is considered more trustworthy (more likely to select good routes).

## Administrative Distances of Common Types of Routing Protocols
# | Route protocol/type | AD |
# |--------------------------|
# | Directly connected | 0 |
# | Static | 1 |
# | External BGP (eBGP) | 20 |
# | EIGRP | 90 |
# | IGRP | 100 |
# | OSPF | 110 |
# | IS-IS | 115 |
# | RIP | 120 |
# | EIGRP (external) | 170 |
# | Internal BGP (iBGP) | 200 |
# | Unusable route | 255 |

# If the AD is 255, the router does not believe the source of that route and does not install the route in the routing table.

# Metric is used to compare routes leared from the same routing protocol.
# However, before comparing metrics, AD is used to select the best route.

# If there are multiple entries to the same destination, then the most specific match (longest prefix match) will be selected.


### RIP and EIGRP

## RIP (Routing Information Protocol - industry standard)
# Distance vector IGP (uses routing-by-rumour logic to learn/share routes)
# Uses hop count as its metric. One router = one hop (bandwidth is irrelevant)
# The maximum hop count is 15 (anything more than that is considered unreachable)
# Has three versions:
# - RIPv1 and RIPv2, used for IPv4
# - RIPng (RIP Next Generation), used for IPv6
# Uses two message types:
# - Request: To ask RIP-enabled neighbor routers to send their routing table
# - Response: To send the local router's routing table to neighboring routers
# By default, RIP-enabled routers will share their routing table every 30 seconds

# RIPv1
# - Only advertises classful addresses (Class A, Class B, Class C)
# - Does not support VLSM, CIDR
# - Does not include subnet mask information in advertisements (Response messages)
# 10.1.1.0/24 will become 10.0.0.0 (Class A address, so assumed to be /8)
# 172.16.192.0/18 will become 182.16.0.0 (Class B address, so assumed to be /16)
# 192.168.1.4/30 will become 192.168.1.0 (Class C address, so assumed to be /24)
# - Messages are broadcast to 255.255.255.255

# RIPv2
# - Supports VLSM, CIDR
# - Includes subnet mask information in advertisements
# - Messages are multicast to 244.0.0.9

# RIP Configuration
# R1
router rip
version 2
no auto-summary
network 10.0.0.0
network 172.16.0.0
# The passive interface command tells the router to stop sending RIP advertisements out of the specified interface.
passive-interface g0/2
exit
# Gateway of last resort
# ip route [remote-network-address] [remote-wildcard] [neighbor-interface-address]
ip route 0.0.0.0 0.0.0.0 203.0.113.2
# Advertise a default route into RIP
default-information originate

do show ip protocols


# The RIP network command is classful, it will automatically convert to classful networks.
# For example, even if you enter the command 'network 10.0.12.0', it will be converted to 'network 10.0.0.0' (a Class A network).
# There is no need to enter the network mask.

# The network command tells the rotuer to:
# - Look for interfaces with an IP address that is in the specified range
# - Active RIP on the interfaces that fall in the range
# - Form adjacencies with connected RIP neighbors
# - Advertise the network prefix of the interface (NOT the prefix in the network command)
# The OSPF and EIGRP network commands operate in the same way.

# The network command does not tell the router which networks to advertise. It tells the router which interfacves to activate RIP on , and then the router will advertise the network prefix of those interfaces.

## EIGRP (Enhanced Interior Gateway Routing Protocol)
# Was Cisco proprietary, but Cisco has now published it openly so other vendors can implement it on their equipment.
# Considered an advanced/hybrid distance vector routing protocol.
# Much faster than RIP in reacting to changes in the network.
# Does not have the 15 hop-count limit of RIP.
# Sends messages using multicast address 224.0.0.10.
# Is the only IGP that can perform unequal-cost load-balancing (by default it performs ECMP (Equal-Cost Multi-Path ) load-balancing over 4 paths like RIP).

# EIGRP Configuration
# R1
# The AS number must match between routers, or they will not form an adjacency and share route information.
# router eigrp [AS]
router eigrp 1
no auto-summary
passive-interface g0/2
# The network command will assume a classful address if you do not specify the mask.
network 10.0.0.0
# network [network-address] [wildcard-mask]
network 172.16.1.0 0.0.0.15

# A wildcard mask is an inverted subnet mask.

## Wildcard mask summarisation:
# R1 G0/1 IP:
# 172.20.20.17
# 10101100.00010100.00010100.00010001
# R1 G0/2 IP:
# 172.26.20.12
# 10101100.00011010.00010100.00001100
# EIGRP network command ():
# 10000000.00000000.00000000.00000000
# 128.0.0.0
# Wildcard mask:
# 01111111.11111111.11111111.11111111
# 127.255.255.255

# 0 in the wildcard mask must match
# 1 in the wildcard mask must match


# Router ID priority:
# 1) Manual configuration: eigrp router-id [router-id]
# 2) Highest IP address on a loopback interface
# 3) Highest IP address on a physical interface


### OSPF (Open Shortest Path First)
# When using a link state routing protocol, every router creates a connectivity map of the network.
# To allow this, each router advertises information about its interfaces (connected network) to its neighbors. 
# These advertisemetns are passed along to other routers, until all routers in the network develop the same map of the network.
# Each router independently uses this map to calculate the best routers to each destination.
# Link state protocols use more resources (CPU) on the router, because more information is shared.
# However, link state protocols tend to be faster in reacting to changes in the network that distance vector protocols.

# OSPF uses the Shortest Path First algorithm of Dutch computer scientist Edsger Dijkstra (aka Dijkstra's algorithm).
# Three versions:
# - OSPFv1 (1989): OLD, not in use anymore
# - OSPFv2 (1998): used for IPv4
# - OSPFv3 (2008): Used for IPv6 (can also be used for IPv4, but usually v2 is used)
# Routers store information about the network in LSAs (Link State Advertisements), which are organised in a structure called the LSDB (Link State Database).
# Routers will flood LSAs until all routers in the OSPF area develop the same map of the network (LSDB).

## LSA Flooding
# 1) OSPF is enabled on a router interface.
# 2) The router creates an LSA to tell its neighbors about the network.
# 3) The LSA is flooded throughout the network until all routers have received it.
# 4) This results in all routers sharing the same LSDB.
# 5) Each router then uses the SPF algorithm to calculate its best route to the network.
# Each LSA has an aging timer (30 min by default). The LSA will be flooded again after the timer expires.

## OSPF Areas
# OSPF uses areas to divide up the network.
# Small networks can be single-area without any negative effects on performance.
# In larger networks, a single-area design can have negative effects:
# - The SPF algorithm takes more time to calculate routes
# - The SPF algorithm requires exponentially more processing power on the routers
# - The larger LSDB takes up more memory on the routers
# - Any small change in the network causes every router to flood LSAs and run the SPF algorithm again.
# By dividing a large OSPF network into several smaller areas, you can avoid the above negative effects.

# An area is a set of routers and links that share the same LSDB.
# The backbone area (area 0) is an area that all other areas must connect to.
# Routers with all interfaces in the same area are called internal routers.

# ABRs (Area Border Routers) are routers with interfaces in multiple areas.
# ABRs maintain a separate LSDB for each area they are connected to.
# It is recommended that you connect an ABR to a maximum of 2 areas.
# Connecting an ABR to 3+ areas can overburden the router.

# Backbone routers are connected to the backbone area (area 0).

# An intra-area route is a route to a destination inside the same OSPF area.
# An interarea route is a route to a destination in a different OSPF area.

# An Autonomus System Boundary Router (ASBR) is an OSPF router that connects the OSPF network to an external network.
# The 'default-information originate' command makes a router an ASBR.

# OSPF areas should be contiguous.
# All OSPF areas must have at least one ABR connected to the backbone area.
# OSPF interfaces in the same subnet must be in the same area.

## Basic OSPF Configuration
# R1
# The process ID is locally significant. Routers with different process IDs can become OSPF neighbors.
# router ospf [process-id]
router ospf 1
# The network command requires an area.
network 10.0.12.0 0.0.0.3 area 0
network 10.0.13.0 0.0.0.3 area 0
network 172.16.1.0 0.0.0.15 area 0
# Stop sending OSPF hello messages out of the interface
passive-interface g0/1
exit
# Advertise a default route into OSPF
ip route 0.0.0.0 0.0.0.0 203.0.113.2
router ospf 1
default-information originate

show ip protocols
show ip ospf neighbor

# Changing the router ID requires the OSPF process to be cleared.
router-id 1.1.1.1
exit
clear ip osfp process


## Route summarisation
# Activate OSPF networks with a single command:
# 10.0.12.1/28
# 00001010.00000000.0000110|0.00000001
# 10.0.13.1/26
# 00001010.00000000.0000110|1.00000001
# 8 + 8 + 7 identical octets = 23 is the summary subnet mask
# network 10.0.12.0 0.0.1.255 area 0

## OSPF Cost
# OSPF's metric is called cost.
# It is automatically calculated based on the bandwidth (speed) of the interface.
# It is calculated by dividing a reference bandwidth value by the interface's bandwidth.
# The default reference bandwidth is 100 Mbps.
# - Reference: 100 Mbps / Interface: 10 Mbps = cost of 10
# - Reference: 100 Mbps / Interface: 100 Mbps = cost of 1
# - Reference: 100 Mbps / Interface: 1000 Mbps = cost of 1?
# - Reference: 100 Mbps / Interface: 10000 Mbps = cost of 1?
# All values less than 1 will be converted to 1.
# Therefore FastEthernet, GigabitEthernet, 10 GigabitEthernet, etc. are equal and all have a cost of 1 by default.

# You can (and should) change the reference bandwidth (default is 100) with this command:
auto-cost reference-bandwidth [megabits-per-second]
# 100000/100 = cost of 1000 for FastEthernet
# 100000/1000 = cost of 100 for GigabitEthernet

# You should configure a reference bandwidth greater than the fastest links in your network (to allow for future upgrades).
# You should configure the same reference bandwidth on all OSPF routers in the network.

# The OSPF cost to a destination is the total cost of the outgoing/exit interfaces.
# Loopback interfaces have a cost of 1.
# For example, 100 (R1 G1/0) + 1 (R2 L0) = 101

# Manually configure the OSPF cost of an interface:
interface g0/0
ip ospf cost 10000

# One more option to change the OSPF cost of an interface is to change the bandwidth of the interface with the bandwidth command.
# The formula to calculate OSPF cost is reference bandwidth / interface bandwidth.
# Although the bandwidth matches the interface speed by default, changing the interface bandwidth does not actually change the speed at which the interface operates.
# The bandwidth is just a value that is used to calculate OSPF cost, EIGRP metric, etc.
# To change the speed at which the interface operates, use the speed command.
# Because the bandwidth value is used in other calculations, it is not recommended to change this value to alter the interface's OSPF cost.
# It is recommended that you change the reference bandwidth, and then use the 'ip ospf cost' command to change the cost of individual interfaces if you want.

# Three ways to modify the OSPF cost:
# 1) Change the reference bandwidth
auto-cost reference-bandwidth [megabits-per-second]
# 2) Manual configuration
interface g0/1
ip ospf cost [cost]
# 3) Change the interface bandwidth
interface g0/1
bandwidth [kilobits-per-second]

# Look up OSPF cost of an interface:
show ip ospf interface f0/1


## OSPF Neighbors
# Making sure that routers successfully become OSPF neighbors is the main task in configuring and troubleshooting OSPF.
# Once routers become neighbors, they automatically do the work of sharing network information, calculating routes, etc.
# When OSPF is activated on an interface, the router starts sending OSPF hello messages out of the interface at regular intervals (determined by the hello timer).
# These are used to introduce the router to potential OSPF neighbors.
# The default hello timer is 10 seconds on an Ethernet connection.
# Hello messages are multicast to 224.0.05 (multicast address for all OSPF routers).

## OSPF Neighbor States

# | R1 |-G0/0-<---10.0.12.0/30--->-G0/0-| R2 |

# OSPF Neighbor States - Down State
# Let's assume OSPF is already activated on R2's G0/0 interface.
# Then OSPF is activated on R1's G0/0 interface.
# It sends an OSPF hello message to 224.0.0.5.
# There are more fields in the hello message, but two important ones are R1's router ID and the neighbor's router ID.
# However, R1 does not know about R2 yet, so the neighbor router ID field is 0.0.0.0.
# R1 does not know about any OSPF neighbors yet, so the current neighbor state is Down.
# This is the first OSPF neighbor state.

# OSPF Neighbor States - Init State
# When R2 receives the Hello packet, it will add an entry for R1 to its OSPF neighbor table.
# In R2's neighbor table, the relationship with R1 is now in the Init state.
# Note that R1 still does not know about R2, so it will have no entries in its OSPF neighbor table.
# The Init state means that a Hello packet was received, but R2's own router ID is not in the Hello packet.
# R2's router ID is 2.2.2.2, but the neighbor router ID in R1's Hello packet is 0.0.0.0.

# OSPF Neighbor States - 2-way State
# R2 will send a Hello packet containing the RID of both routers.
# R1 will insert R2 into its OSPF neighbor table in the 2-way state.
# Then, R1 will send another Hello message, this time containing R2's router ID.
# Now both routers are in the 2-way state.
# The 2-way state means the router has received a Hello packet with its own router ID in it.
# If both routers reach the 2-way state, it means that all of the conditions have been met for them to become OSPF neighbors.
# They are now ready to share LSAs to build a common LSDB.
# On the other hand, if they fail to reach this 2-way state, you know that you have to troubleshoot and find what's stopping them from reaching it.
# In some network types, a DR (Designated Router) and BDR (Backup Designated Router) will be elected at this point.
# At this point, the routers are already OSPF neighbors.
# Over the next few neighbor states they will share LSAs and form a full OSPF adjacency.

# OSPF Neighbor States - Exstart State
# The two rotuers will now prepare to exchange information about their LSDB.
# Before that, they have to choose which one will start the exchange.
# So they will decide which one will be the Main router and which will be the Replica router.
# Note that these are different than the DR and BDR.
# This Main/Replica relationship is only needed for this initial exchange of LSDB information.
# They decide which will be the Main and which will be the Replica in the exstart state.
# The router with the higher router ID will become the Main and initiate the exchange.
# The router with the lower router ID will become the Replica.
# To decide the Main and Replica, they exchange DBD (Database Description) packets.
# The exstart state is just to prepare for the next state.
# R1 sends a DBD packet claiming to be the Main.
# However, R2 corrects R1, as R2 has the higher router ID, and says that it will be the Main.
# In the Exchange state, the rotuers exchange DBDs which contain a list of the LSAs in their LSDB.
# These DBDs do not include detailed information about the LSAs, just basic information telling their neighbor what LSAs they have.
# The routers are telling each other, 'I have these LSAs', but they are not sending the LSAs yet.
# The routers compare the information in the DBD they received to the information in their own LSDB to determine their neighbor.

# OSPF Neighbor States - Loading State
# In the Loading state, routers send Link State Request (LSR) messages to request that their neighbors send them any LSAs they do not have.
# In the Exchange state, they exchanged DBD packets, so they know which LSAs their neighbors are holding.
# These LSRs are used to request any missing LSAs to make sure each router has the same LSAs.
# Then the LSAs themselves are sent in Link State Update, LSU messages.
# R2 sends R1 the requested LSAs in an LSU.
# R1 will also do the same for R2.
# Finally, the routers send LSAck messages, another kind of OSPF message to acknowledge that they received the LSAs.
# Now the loading state is complete, and the routers have the same LSDB.

# OSPF Neighbor States - Full State
# In the full state, the routers have a full OSPF adjacency and identical LSDBs.
# They continue to send and listen for Hello packets, once every 10 seconds by default to maintain the neighbor adjacency.
# To maintain the adjacency, another timer called the Dead timer is used.
# Every time a Hello packet is received, the Dead timer, which is 40 seconds by default, is reset.
# However, if the Dead timer counts down to 0 and no Hello message is received, the neighbor is removed.
# If the neighbors remain up, the routers will continue to share LSAs as the network changes to make sure each router has a complete and accurate map of the network.
# This is the main advantage of dynamic routing protocols, the routers automatically react to changes in the network and add, remove, or change routes as necessary.

## OSPF States in the Correct Order:
# 1) Down
# 2) Init
# 3) 2-way
# 4) Exstart
# 5) Exchange
# 6) Loading
# 7) Full


## OSFP Show Commands
# Shows Neighbor ID, Priority, State, Dead Time, Address, and Interface.
show ip ospf neighbor
# Show OSPF details on a specific interface
show ip ospf interface g0/0
# Activate OSPF on an interface
int g0/0
ip ospf [process-id] area [area-number]
# Configure All passive interfaces on OSPF
router ospf 1
passive-interface default
# Then configure specific interfaces as active
no passive-interface [interface-id]
# If you configure OSPF directly on the interfaces, you will see slightly different output from 'show ip protcols' command.
# The routing for networks section is empty, and instead the interfaces you activated OSPF on are displayed at section 'Routing on Interfaces Configured Explicitly'.
show ip protocols

## OSPF Loopback Interfaces
# A loopback interface is a virtual interface in the router.
# It is always up/up (unless you manually shut it down).
# It is not dependent on a physical interface.
# It provides a consistent IP address that can be used to reach/identify the router.

## OSPF Network Types
# The OSPF network type refers to the type of connection between OSPF neighbors (Ethernet, etc.)
# There are three main OSPF network types:
# - Broadcast: Enabled by default in Ethernet and FDDI (Fiber Distributed Data Interfaces)
# - Point-to-point: Enabled by default on PPP (Point-to-Point Protocol) and HDLC (High-Level Data Link Control) interfaces.
# - Non-broadcast: Enabled by default on Frame Relay and X.25 interfaces.

## OSPF Broadcast Network Type
# Enabled on Ethernet and FDDI interfaces by default.
# Routers dynamically discover neighbors by sending/listening for OSPF Hello messages using multicast address 224.0.0.5.
# A DR (Designated Router) and BDR (Backup Designated Router) must be elected on each subnet (only DR if there are no OSPF neighbors).
# Routers that are not the DR or BDR become the DROther.

## The OSPF DR/BDR election order of priority:
# 1) Highest OSPF interface priority
# 2) Highest OSPF Router ID
# First place becomes the DR for the subnet, second place becomes the BDR.
# The default OSPF interface priority is 1 on all interfaces.

# Change the OSPF priority
int g0/0
ip ospf priority 255
# If you set the priority to 0, the router cannot be the DR/BDR for the subnet.
# The DR/BDR election is non-preemptive. Once the DR/BDR are selected, they will keep their role until OSPF is reset, the interface is shut down, etc.
# Reset the OSPF process (This is a bad idea to do in a live network!):
clear ip ospf process

show ip ospf neighbor
# When the DR goes down, the BDR becomes the new DR. Then an election is held for the next BDR.
# DROthers will only move to the FULL state with the DR and BDR.
# DROthers will remain in the 2-way state.
# The neighbor state with other DROthers will be 2-way.

# In the broadcast network type, routers will only form a full OSPF adjacency with the DR and BDR of the segment.
# Therefore, routers only exchange LSAs with the DR and BDR. DROthers will not exchange LSAs with each other.
# All routers will still have the same LSDB, but this reduces the amount of LSAs flooding the network.
# Messages to the DR/BDR are multicast using address 224.0.0.6.

## OSPF Point-to-Point Network Type
# Enabled on serial interfaces using the PPP or HDLC encapsulations by default.
# Routers dynamically discover neighbors by sending/listening for OSPF Hello messages using multicast address 224.0.0.5.
# A DR and BDR are not elected.
# These encapsulations are used for point-to-point connections.
# The two routers will form a Full adjacency with each other.

# Configure the OSPF Network Type:
int g0/1
ip ospf network broadcast
ip ospf network non-broadcast
ip ospf network point-to-multipoint
ip ospf network point-to-point

## OSPF Neighbour Requirements
# 1. Area must match
# 2. Area must be in the same subnet
# 3. OSPF process must not be sutdown
# 4. OSPF Router IDs must be unique
# 5. Hello and Dead timers must match
# 6. Autohentication settings must match
# 7. IP MTU settings must match
# 8. OSPF Network Type must match

## OSPF Types of LSA
# Type 1 (Router LSA)
# - Every OSPF router generates this type of LSA.
# - It identifies the router using its router ID.
# - It also lists networks attached to the rotuer's OSPF-activated interfaces.
# Type 2 (Network LSA)
# - Generated by the DR of each 'multi-access' network (ie. the broadcast network type).
# - Lists the routers which are attached to the multi-access network.
# Type 5 (AS External LSA)
# - Generated by ASBRs to describe routes to destinations outside of the AS (OSPF domain).

## OSPF Configuration Examples
# R1
# The AS number must match between routers, or they will not form an adjacency and share route information.
# router eigrp [AS]
router eigrp 1
router-id 1.1.1.1
no auto-summary
passive-interface g0/2
# The network command will assume a classful address if you do not specify the mask.
network 10.0.0.0
# network [network-address] [wildcard-mask]
network 172.16.1.0 0.0.0.15

# Shutdown the OSPF process
router ospf 1
shutdown
# Configure OSPF Hello and Dead timers (they must match)
ip ospf hello interval 5
ip ospf dead-interval 20
# Configure OSPF authentication
ip ospf authentication-key ccna
ip ospf authentication
# Configure OSPF IP MTU (settings must match)
ip mtu 1400


### First Hop Redundancy Protocols (FHRP)

# A FHRP is a computer networking protocol which is designed to protect the default gateway used on a subnetwork by allowing two or more routers to provide backup for that address.
# In the event of failure of an active router, the backup router will take over the address, usually within a few seconds.

## FHRP Functionality
# A virtual IP is configured on the two routers, and a virtual MAC is generated for the virtual IP (each FHRP uses a different format for the virtual MAC).
# An active router and a standby router are elected. (different FHRPs use different terms)
# End hosts in the network are configured to use the virtual IP as their default gateway.
# The active router replies to ARP requests using the virtual MAC address, so traffic destined for other networks will be sent to it.
# If the active router fails, the standby becomes the next active router.
# The new active router will send gratuitous ARP messages so that switches will update their MAC address tables. It now functions as the default gateway.
# If the old active router comes back online, by default it will not take back its role as the active router. It will become the standby router.
# You can configure preemption, so that the old active router does take back its old role.

## HSRP (Hot Standby Router Protocol)
# Cisco proprietary.
# An active and standby router are elected.
# There are two versions: version 1 and version 2.
# Version 2 adds IPv6 support and increases the number of groups that can be configured.
# Multicast IPv4 address:
# - v1 = 224.0.0.2
# - v2 = 224.0.0.102
# Virtual MAC address:
# - v1 = 0000.0c07.acXX (XX = HSRP group number)
# - v2 = 0000.0c9f.fXXX (XXX = HSRP group number)
# In a situation with multiple subnets/VLANs, you can configure a different active router in each subnet/VLAN to load balance.

## VRRP (Virtual Router Redundancy Protocol)
# Open standard.
# A master and backup router are elected.
# Multicast IPv4 address: 224.0.0.18
# Virtual MAC address: 0000.5e00.01XX (XX = VRRP group number in hexadecimal)
# In a situation with multiple subnets/VLANs, you can configure a different master router in each subnet/VLAN to load balance.

## GLBP (Gateway Load Balancing Protocol)
# Cisco proprietary.
# Load balances among multiple routers within a single subnet.
# An AVG (Active Virtual Gateway) is elected.
# Up to four AVFs (Active Virtual Forwarders) are assigned by the AVG (the AVG itself can be an AVF, too).
# Each AVF acts as the default gateway for a portion of the hosts in the subnet.
# Multicast IPv4 address: 224.0.0.102.
# Virtual MAC address: 0007.b400.XXYY (XX = GLBP group number, YY = AVF number)

## HSRP Configuration
# R1
interface g0/0
standby version 2
standby 1 ip 172.16.0.254
standby 1 priority 200
standby 1 preempt

# R2
interface g0/0
standby version 2
standby 1 ip 172.16.0.254
standby 1 priority 50
standby 1 preempt

show standby


### Free CCNA | STP & FHRP Synchronization | Day 52 Lab | CCNA 200-301 Complete Course
# (Good LAN design principle)

## HSRP and STP synchronizaion means that the HSRP active should be the STP root bridge, and the HSRP standby should be the STP secondary root bridge.
# Why should the HSRP active and the STP root be synchronized or aligned?
# It is to ensure that traffic from the end hosts frollows the most direct path to the default gateway.
# If the HSRP active router is not the STP root, then traffic from PC1 to DSW1 might not take the direct path to DSW1, it might take a longer path.
# This is not a disaster, but obviously not ideal.
# Because STP works by finding the shortest path to the root, ensuring that the HSRP active router is synchronized with the STP root means that traffic will follow the most efficient path.
# In this lab, we will make DSW1 the HSRP active and STP root for VLAN 10, and make DSW2 the HSRP active and STP root for VLAN20.

# DSW1
conf t
spanning-tree vlan 10 root primary
spanning-tree vlan 20 root secondary

do show span vlan 10
do show span vlan 20

int vlan 10
standby version 2
standby 10 ip 10.0.10.254
standby 10 priority 105
standby 10 preempt

int vlan 20
standby version 2
standby 20 ip 10.0.10.254
standby 20 priority 95
standby 20 preempt
end

# DSW2
conf t
spanning-tree vlan 10 root secondary
spanning-tree vlan 20 root primary

do show span vlan 10
do show span vlan 20

int vlan 10
standby version 2
standby 10 ip 10.0.10.254
standby 10 priority 95
standby 10 preempt

int vlan 20
standby version 2
standby 20 ip 10.0.10.254
standby 20 priority 105
standby 20 preempt
end

show standby brief


### Static Routing

# ip route [ remote-network ] [ remote-network-subnet ] [ next-hop-address ]
ip route 10.1.1.0 255.255.255.0 10.1.2.1


### Floating Static Routes

# A floating static route will be inactive (not in the routing table) unless the route learned by the dynamic routing protocol is removed (for example, the remote router stops advertising it for some reason, or an interface failure causes an adjacency with a neighbor to be lost).
# ip route [ remote-network ] [ remote-network-subnet ] [ next-hop-address ] [administrative-distance-metric]


### IPv6

## Hexadecimal Review
# Binary / Base 2 / 0b - 0, 1
# Decimal / Base 10 / 0d - 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
# Hexadecimal / Base 16 / 0x - 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F

## Binary to Hexadecimal Conversion
# 0b11011011 = 0x??

# Split the number into 4-bit groups and convert each 4-bit group to decimal.
# 0b1101 = 0d13
# 0b1011 = 0d11

# Convert the decimal numbers to hexadecimal.
# 0d13 = 0xD
# 0d11 = 0xB

# 0b11011011 = 0xDB

## Hexadecimal to Binary Conversion
# Convert hexadecimal to decimal, then to binary.

# 0xEC = 0b??

# 0xE = 0d14
# 0xC = 0d12

# 0d14 = 0b1110
# 0d12 = 0b1100

# 0xEC = 0b11101100

## Why IPv6?
# The main reason is that there simply are not enough IPv4 addresses available.
# There are 4,294,967,296 (2^32) IPv4 addresses available.
# When IPv4 was being designed 30 years ago, the creators had no idea the Internet would be as large as it is today.
# VLSM, private IPv4 addresses, and NAT have been used to conserve the use of IPv4 address space.
# Those are short-term solutions.
# The long-term solution is IPv6.
# IPv4 address assignments are controlled by IANA (Internet Assigned Numbers Authority).
# IANA distributes IPv4 address space to various RIRs (Regional Internet Registries), which then assign them to companies that need them.

# An IPv6 address is 128 bits.
# Example:
# 2001:0DB8:5917:EABD:6562:17EA:C92D:59BD

## Shortening (abbreviating) IPv6 Addresses
# 1) Leading 0s (zeros) can be removed.
# Leading zeros are any zeros at the beginning of any of the quartets of 4 hexadecimal digits.
# 2001:0DB8:000A:001B:20A1:0020:0080:34BD
# 2001:DB8:A:1B:20A1:20:80:34BD

# 2) Consecutive quartets of all zeros can be replaced with a double colon (::).
# 2001:0DB8:0000:0000:0000:0000:0080:34DB
# 2001:0DB8::0080:34DB

# Combine both 1 and 2 methods:
# 2001:DB8::80:34DB

# Consecutive quartets of zeros can only be abbreviated once in an IPv6 address.
# 2001:0000:0000:0000:20A1:0000:0000:34DB
# 2001::20A1:0:0:34BD

## Expanding Shortened IPv6 Addresses
# Put leading zeros where needed (all quartets should have 4 hexadecimal characters).
# FE80::2:0:0:FB38
# The full address should be 8 quartets.
# FE80:0000:0000:0000:0002:0000:0000:FBE8

## Finding the IPv6 prefix (global unicast addresses)
# Typically, an enterprise requesting IPv6 addresses from their ISP will receive a /48 block.
# Typically, IPv6 subnets use a /64 prefix length.
# That means an enterprise has 16 bits to use to make subnets.
# The remaining 64 bits can be used for hosts.

# Example:
# 2001:0DB8:8B00:0001:0000:0000:0000:0001/64

# 48-bit global routing prefix assigned by the ISP:
# 2001:0DB8:8B00
# 16-bit subnet identifier, used by the enterprise to make various subnets:
# 0001
# 64-bit interface identifier, the host portion of the address
# 0000:0000:0000:0001

## Finding the IPv6 Prefix
# 300D:00F2:0B34:2100:0000:0000:1200:0001/56
# Find where the network portion ends, and change all digits after it to 0.
# 56 is a multiple of 4 (the first 56 bits of the IPv6 address)
# 300D:00F2:0B34:21
# 300D:00F2:0B34:2100::/56

# 2001:0DB8:8D00:0001:FB89:017B:0020:0011/93
# 92 bits
# 2001:0DB8:8D00:0001:FB89:017
# Need to split the 'B' to get the 93 bits.
# 0xB = 0d1011
# Only the first bit is part of the network portion of the address.
# Change all of the other bits to 0.
# 0d1000
# Change it back to decimal and then hexadecimal
# 0d1000 = 0d8 = 0x8
# The network prefix becomes:
# 2001:0DB8:8D00:0001:FB89:0178::/93

## Configuring IPv6 Addresses
# Allow the router to perform IPv6 routing
# R1
ipv6 unicast-routing
int g0/0
ipv6 address 2001:db8:0:0::1/64
no shutdown
int g0/1
ipv6 address 2001:db8:0:1::1/64
no shutdown
int g0/2
ipv6 address 2001:0db8:0000:0002:0000:0000:0000:0001/64
no shutdown
exit

show ipv6 interface brief
# Link-Local addresses are automatically configured on an interface when IPv6 is enabled on the interface.

## Configuring IPv6 Addresses (EUI-64)
# EUI stands for Extended Unique Identifier.
# (Modified) EUI-64 is a method of converting a MAC address (48 bits) into a 64-bit interface identifier.
# This interface identifier can then become the host portion of a /64 IPv6 address.

# How to convert the MAC address:
# 1) Divide the MAC address in half:
# 1234 5678 90AB -> 1234 56 | 78 90AB
# 2) Insert FFFE in the middle:
# 1234 56FF FE78 90AB
# 3) Invert the 7th bit:
# 1[2]34 (2 = 0010)
# Inverted 7th bit = 0000
# Becomes:
# 1034 56FF FE78 90AB

# Practice:
# 782B CBAC 0867 = 7A2B CBFF FEAC 0867
# 0200 4C4F 4F50 = 0000 4CFF FE4F 4F50
# 0050 56C0 0001 = 0250 56FF FEC0 0001
# 00FF 6BA6 F456 = 02FF 6BFF FEA6 F456
# 96AB 6D6B 98AE = 94AB 6FFF FE6B 98AE

## Configure an EUI-64 IPv6 Address on an Interface
int g0/0
# This tells the router to use this prefix plus the EUI-64 interface number to generate an IPv6 address.
ipv6 address 2001:db8::/64 eui-64
no shutdown

# Why invert the 7th bit?
# MAC addresses can be divided into two types:
# - UAA (Universal Administered Address)
# -- Uniquely assigned to the device by the manufacturer.
# - LAA (Locally Administered Address)
# -- Manually assigned by an admin (with the mac-address command on the interface) or protocol. Does not have to be globally unique.
# You can identify a UAA or LAA by the 7th bit of the MAC address, called the U/L bit (Universal/Local bit):
# - U/L bit set to 0 = UAA
# - U/L bit set to 1 = LAA
# In the context of IPv6 addresses/EUI-64, the meaning of the U/L bit is reversed:
# - U/L bit set to 0 = The MAC address the EUI-64 interface ID was made from was an LAA.
# - U/L bit set to 1 = The MAC address the EUI-64 interface ID was made from was an UAA.

## Global Unicast Addresses
# Global unicast IPv6 addresses are public addresses which can be used over the Internet.
# Must register to use them. Because they are public addresses, it is expected that they are globally unique.
# Originally defined as the 2000::/3 block (2000:: to 3FFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF).
# Now defined as all addresses which are not reserved for other purposes.

# Example:
# 2001:0DB8:8B00:0001:0000:0000:0000:0001/64
# 48-bit global routing prefix assigned by the ISP:
# 2001:0DB8:8B00
# 16-bit subnet identifier used by the enterprise to make various subnets:
# 0001
# 64-bit indeterface identifier, the host portion of the address:
# 0000:0000:0000:0001/64

## Unique Local Addresses
# Unique local IPv6 addresses are private addresses which cannot be used over the Internet.
# You do not need to register to use them. They can be used freely within internal networks and do not need to be globally unique.
# Cannot be routed over the Internet.
# Uses the address block FC00::/7 (FC00:: to FDFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF).
# However, a later update requires the 8th bit to be set to 1, so the first two digits must be FD.
# The global ID should be unique so that addresses do not overlap when companies merge.

# Example:
# FD45:93AC:8A8F:0001:0000:0000:0000:0001/64
# Indicates a unique local address:
# FD
# 40-bit global ID, which should be randomly generated:
# 45:93AC:8A8F
# 16-bit subnet identifier, used by the enterprise to make various subnets:
# 0001
# 64-bit interface identifier, the host portion of the address:
# 0000:0000:0000:0001/64

## Link Local Addresses
# Link-local IPv6 addresses are automatically generated on IPv6-enabled interfaces.
# Use command R1(config-if)# ipv6 enable on an interface to enable IPv6 on an interface.
# Uses the address block FE80::/10 (FE80:: to FEBF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF).
# However, the standard states that the 54 bits after FE80/10 should be all 0.
# So you will not see link local addresses beginning with FE9, FEA, or FEB. Only FE8.
# The interface ID is generated using EUI-64 rules.
# Link-local means that these addresses are used for communication within a single link (subnet).
# Routers will not route packets with a link-local destination IPv6 address.
# Common uses of link-local addresses:
# - routing protocol peerings (OSPFv3 uses link-local addresses for neighbor adjacencies).
# - next-hop addresses for static routes
# - Neighbor Discovery Protocol (NDP, IPv6's replacement for ARP) uses link-local addresses to function.

## Multicast Addresses
# Unicast addresses are one-to-one.
# - One source to one destination.
# Broadcast addresses are one-to-all.
# - One source to all destinations (within the subnet).
# Multicast addresses are one-to-many.
# - One source to multiple destinations (that have joined the specific multicast group).
# IPv6 uses range FF00::/8 for multicast. (FF00:: to FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF:FFFF).
# IPv6 does not use broadcast (there is no broadcast address in IPv6!).

# Multicast Address Table for Routing Protocols
# | Purpose | IPv6 Address | IPv4 Address |
# |---------------------------------------|
# | All nodes/hosts | FF02::1 | 224.0.0.1 |
# | All routers | FF02::2 | 224.0.0.2 |
# | All OSPF routers | FF02::5 | 224.0.0.5 |
# | All OSPF DRs/BDRs | FF02::6 | 224.0.0.6 |
# | All RIP routers | FF02::9 | 224.0.0.9 |
# | All EIGRP routers | FF02::A | 224.0.0.10 |

## Multicast Address Scopes
# IPv6 defines multiple multicast scopes which indicate how far the packet should be forwarded.
# The addresses in the previous slide all use the link-local scope (FF02), which stays in the local subnet.
# IPv6 multicast scopes:
# - Interface-local (FF01): The packet does not leave the lcoal device. Can be used to send traffic to a service within the local device.
# - Link-local (FF02): The packet remains in the local subnet. Routers will not route the packet between subnets.
# - Site-local (FF05): The packet can be forwarded by routers. Should be limited to a single physical location (not forwarded over a WAN).
# - Organisation-local (FF08): Wider in scope than site-local (an entire company/organisation).
# - Global (FF0E): No boundaries. Possible to be routed over the Internet.































### Standard ACL

# access-list number { deny | permit } ip wildcard-mask
access-list 1 deny 1.1.1.1 0.0.0.0
access-list 1 deny 1.1.1.1
access-list 1 deny host 1.1.1.1
access-list 1 permit any
access-list 1 permit 0.0.0.0 255.255.255.255
access-list 1 remark ## BLOCK PERSON FROM ACCOUNTING ##

show access-lists
show ip access-lists

# Permit a single host from a subnet
access-list 1 permit 192.168.1.1
access-list 1 deny 192.168.1.0 0.0.0.255
interface g0/1
ip access-group 1 out

# Named ACL
ip access-list standard { acl-name }
[ entry number ] { deny | permit } ip wildcard-mask


### Better ACL Config

# Standard ACL
# Numbered ACL Ranges: 100-199, 2000-2699

ip access-list standard 1
# or
ip access-list standard BLOCK_PC1
deny 192.168.1.1
permit any
do show access list
# delete an entry
no 30

# insert a new entry by specifying the sequence number
30 deny 192.168.2.0 0.0.0.255

# resequence ACLs
# ip access-list resequence [acl-id] [starting-seq-num] [increment]
# [starting-seq-num] = change the sequence number of the first entry to 10
# [increment] = add 10 for every entry after that
ip access-list resequence 1 10 10

# NOTE - When configuring or editing numbered ACLs from global config mode,
# you cannot delete individual entries, you can only delete the entire ACL!


### Extended ACLs

# Extendend Numbered ACL
# access-list [number] (permit | deny) [protocol] [src-ip] [dest-ip]

# Extended Named ACL
# ip access-list extended (name | number)
# [seq-num] (permit | deny) [protocol] [src-ip] [dest-ip]
ip acccess-list extended DENY_VLAN10
deny tcp any 10.0.0.0 0.0.0.255

# examples
# allow all traffic
permit ip any any
# prevent 10.0.0.0/16 from sending UDP traffic to 192.168.1.1/32
deny udp 10.0.0.0 0.0.255.255 host 192.168.1.1
# prevent 172.16.1.1/32 from pinging hosts in 192.168.0.0/24
deny icmp host 172.16.1.1 192.168.0.0 0.0.0.255
# When matching TCP or UDP, you can optionally specify the source and/or destination port numbers to match
deny tcp [src-ip] eq [src-port-num] [dest-ip]
deny tcp 10.1.1.1 eq 80 10.2.2.2
# eq 80 = equal to port 80
# gt 80 = greater than 80 (<81)
# lt 80 = less than 80 (>79)
# neq 80 = NOT 80
# range 80 100 = port from 80 to port 100

# After the destination IP address and/or port numbers, there are more options you can use to match
# ack = match TCP ACK flag
# fin = match TCP FIN flag
# syn = match TCP SYN flag
# ttl = match packets with a specific TTL value
# dscp = match packets with a specific DSCP value

# examples
# allow traffic from 10.0.0.0/16 to access the server at 2.2.2.2/32 using HTTPS
permit tcp 10.0.0.0 0.0.255.255 2.2.2.2 0.0.0.0 eq 443
# prevent all hosts using source UDP port numbers from 20000 to 30000 from accessing the server at 3.3.3.3/32
deny udp any range 20000 30000 host 3.3.3.3
# allow hosts in 172.16.1.0/24 using a TCP source port greater than 9999 to access all TCP ports on server 4.4.4.4/32 except port 23
permit tcp 172.16.1.0 0.0.0.255 gt 9999 host 4.4.4.4 neq 23

# Applying Extended ACLs to interfaces
# Note - Extended ACLs should be applied as close to the soruce as possible to limit how far the packets travel in the network before being denied. Standard ACLs are less specific, so if they are applied close to the source there is a risk of blocking more than intended.

interface g0/1
ip access-group HTTP_SRV1 in

# Prevent R1 from forwarding OSPF packets out of G0/2
ip access-list extended 112
deny 89 any any
permit ip any any
interface g0/2
ip access-group 112 out


### Etherchannel

# LACP SW1
int range g0/1-2
channel-group 1 mode active
exit
int po1
switchport trunk encapsulation dot1q
switchport mode trunk

# LACP SW2
int range g0/3-4
channel-group 1 mode active
exit
int po1
switchport trunk encapsulation dot1q
switchport mode trunk

# Static Etherchannel
# DSW1
int range g0/1-2
no switchport
channel-group 2 mode on
int po2
ip add 10.0.0.1 255.255.255.252

# DSW2
int range g0/1-2
no switchport
channel-group 2 mode on
int po2
ip add 10.0.0.2 255.255.255.252

show etherchannel summary

# Etherchannel load-balance
port-channel load-balance src-dst-ip

show etherchannel load-balance


### CDP

# Enable / disable CDP globally
[no] cdp run

# Enable / disable CDP on specirfic interfaces
interface g0/1
[no] cdp enable

# Configure the CDP timer
cdp timer (seconds)

# Configure the CDP holdtime
cdp holdtime (seconds)

# Enable / disable CDPv2
[no] cdp advertise-v2

# CDP show commands
show cdp
show cdp traffic
show cdp interface
show cdp  neighbours
show cdp detail
show cdp entry (name)


### LLDP

# Enable / disable LLDP
[no] lldp run

# Enable / disable LLDP on specirfic interfaces (tx)
int g0/1
[no] lldp transmit

# Enable / disable LLDP on specirfic interfaces (rx)
int g0/1
[no] lldp receive

# Configure the LLDP timer
lldp timer (seconds)

# Configure the LLDP holdtime
lldp holdtime (seconds)

# Configure the LLDP reinit timer
lldp reinit (seconds)

# LLDP show commands
show lldp
show lldp traffic
show lldp interface
show lldp  neighbours
show lldp detail
show lldp entry (name)


### NTP

# The most important reason to have accurate time on a device
# is to have accurate logs for troubleshooting.

show clock
show clock detail
show calendar

# Manual clock configuration (Internal clocks will drift, so it is not ideal)
clock set 14:30:00 27 July 2022
clock timezone GMT 0
ntp update-calendar

# Configure NTP servers
ntp server 216.239.35.0
ntp server 216.239.35.4
ntp server 216.239.35.8
ntp server 216.239.35.12

show ntp status
show ntp associations

# NTP authentication

# R1
ntp authenticate
ntp authentication-key 1 md5 myCiscoLab
ntp trusted-key 1

# R2
ntp authenticate
ntp authentication-key 1 md5 myCiscoLab
ntp trusted-key 1
ntp server 10.0.12.1 key 1
ntp peer 10.0.23.2 key 1

# R3
ntp authenticate
ntp authentication-key 1 md5 myCiscoLab
ntp trusted-key 1
ntp server 10.0.12.1 key 1
ntp peer 10.0.23.1 key 1


### DHCP

# Configure a router to act as a DHCP Server

ip dhcp excluded-address 192.168.1.1 192.168.1.10
ip dhcp pool LAB_POOL
network 192.168.1.0 255.255.255.0
dns-server 8.8.8.8
domain-name cisco.com
default-router 192.168.1.1
# lease [days] [hours] [minutes]
lease 0 5 30
# lease infinite

show ip dhcp binding
show ip dhcp server statistics

# Configure a router to act as a DHCP Relay Agent

interface g0/1
ip helper-address 192.168.10.10

show ip interface g0/1

# Configure a router to be a DHCP Client

interface g0/1
ip address dhcp

sh ip interface g0/1


### SNMP

http://oid-info.com/

# SNMP Agent port = UDP 161
# SNMP Manager port = UDP 162

## SNMP Read Messages
# Messages sent by the NMS to read information from the managed devices.

# Get - A request sent from the manager to the agent to retrieve the value of a variable (OID), or multiple variables.
# The agent will send a Response message with the current value of each variable.

# GetNext - A request sent from the manager to the agent to discover the available variables on the MIB.

# GetBulk - A more efficient version of the GetNext message (introduced in SNMPv2).

## SNMP Write Messages
# Messages sent by the NMS to change information on the managed devices.

# Set - A request sent from the manager to the agent to change the value of one or more variables.
# The agent will send a Response message with the new values.

## SNMP Notification
# Messages sent by the managed devices to alert the NMS of a particular event.

# Trap - A notification sent from the agent to the manager. 
# The manager does not send a Response message to acknowledge that it received the Trap, so these messages are unreliable.

# Inform - A notification message that is acknowledged with a Response message.
# Originally used for communications between managers, but later updates allow agents to send Inform messages to managers too.

## SNMP Response
# Messages sent in response to a previous message/request.


## SNMPv2c Configuration

snmp-server contact example@google.com
snmp-server location "Rack B1"
snmp-server community CCNA1 ro
snmp-server community CCNA2 rw
# Specify the address of the NMS (version and which community string to use)
snmp-server host 192.168.1.1 version 2c CCNA1
# Traps will be sent if an interface goes up or down
snmp-server enable traps snmp linkdown linkup
# Traps will be sent if configuration changes are made
snmp-server enable traps config

show snmp community
show snmp contact
show snmp host
show snmp location


## SNMPv3 Configuration

Username: UserJustMe
Authentication Password: AuthPass1
Privacy Password: PrivPass2
View Name: ViewDefault
Group Name: GrpMonitoring

# IOS & IOS-XE
snmp-server view ViewDefault iso included
snmp-server group GrpMonitoring v3 priv read ViewDefault
snmp-server user UserJustMe GrpMonitoring v3 auth sha AuthPass1 priv aes 128 PrivPass2

# IOS-XR
snmp-server view ViewDefault iso included 
snmp-server group GrpMonitoring v3 priv read ViewDefault
snmp-server user UserJustMe GrpMonitoring v3 auth sha AuthPass1 priv aes 128 PrivPass2

# Nexus Switch (OS-NX)
snmp-server user UserJustMe network-admin v3 auth sha AuthPass1 priv aes-128 PrivPass2

# ASA firewall
snmp-server group GrpMonitoring v3 priv
snmp-server user UserJustMe GrpMonitoring v3 auth sha AuthPass1 priv aes 128 PrivPass2
snmp-server host mgmt 10.1.1.161 version 3 UserJustMe

# Testing SNMPv3 configuration with Net-SNMP
# apt-get install snmp
snmpwalk -v3 -l authPriv -u UserJustMe -a SHA -A AuthPass1 -x AES -X PrivPass2 10.7.1.9:161 sysDescr


### Syslog

# Syslog server port (listen) = UDP 514

# seq:time stamp: %facility-severity-MNEMONIC:description
# [sequence number]:[timestamp]: %[which process]-[severity number]-[short message]:[detailed information]

# Examples
# *Feb 11 03:02:55.304: %LINK-3-UPDOWN: Interface GigabitEthernet0/0, changed state to up
# *Feb 11 03:02:55.304: %OSPF-5-ADJCHG: Process 1, Nbr 192.168.1.2 on GigabitEthernet0/0 from LOADING to FULL, Loading Done
# *Feb 11 03:02:55.304: %SYS-5-CONFIG_I: Configured from console by admin on console
# *Feb 11 03:02:55.304: %SYS-6-CLOCKUPDATE: System clock has been updated from 07:27:23 UTC Thu Feb 11 2021 to 16:27:23 JST Thu Feb 11 2021, configured from console by admin on console.

# Syslog severity levels
# Level - Keyword - Description
# 0 - Emergency - System is unusable
# 1 - Alert - Action must be taken immediately
# 2 - Critical - Critical conditions
# 3 - Error - Error conditions
# 4 - Warning - Warning conditions
# 5 - Notice - Normal but significant conditions
# 6 - Informational - Informational messages
# 7 - Debugging - Debug-level messages

# Memorize the severity levels
# Every Awesome Cisco Engineer Will Need Icecream Daily

## Syslog Logging Locations

# Console line: Syslog messages will be displayed in the CLI when connected to the device via the console port. All messages are displayed by default.

# VTY lines: Syslog messages will be displayed in the CLI when connected to the device via Telnet or SSH. Disabled by default.

# Buffer: Syslog messages will be saved to RAM. All messages will be displayed by default.

# External server: You can configure the device to send Syslog messages to an external server.


## Syslog Configuration

# Enable console logging for the Informational severity and higher
logging console 6
# Enable logging for the Informational severity and higher
logging monitor informational
# Logging buffered [size] [level name or number]
logging buffered 8192 6
# Logging to an external server
logging 192.168.1.100
# Or: logging host 192.168.1.100
# Logging trap [level name or number]
logging trap debugging

# Enable Syslog messages when using Telnet or SSH
terminal monitor

# Print a new line when the typing is interrupted by a Syslog message (more user friendly)
line console 0
logging synchronous

# Enable timestamps for Syslog messages
service timestamp log datetime
service sequence-numbers


### Console, Telnet, and SSH (local and remote connections)

## Configure a password on the console
line console 0
password ccna
# Require the user to enter the console password
login

## Configure a username and password on the console
username admin secret ccna
line console 0
# Require a user to login using the configured usernames on the device
login local
# Log the user out after a certain time of inactivity: exec-timeout [minutes] [seconds]
exec-timeout 3 30

## Configure the Switch Virtual Interface (SVI) on a Layer 2 switch for remote connectivity
interface vlan1
ip address 192.168.1.253 255.255.255.0
no shutdown
exit
ip default-gateway 192.168.1.254

## Teletype Network (Telnet) Configuration
# If an enable password or secret is not configured, you won't be able to access priviledged exec mode when connecting via Telnet
enable secret ccna
username admin secret ccna
# Optional. Limit which devices can connect
access-list 1 permit host 192.168.2.1
# There are 16 Virtual Teletype (vty) lines available for up to 16 users
line vty 0 15
login local
# Time out after 5 mins
exec-timeout 5 0
# Allow telnet connections
transport input telnet
# Apply the ACL to the vty lines
access-class 1 in

# Connect via Telnet
telnet [ip-address]

## SSH Configuration
# Hostname and DNS domain name must be defined first
hostname R1
ip domain name cisco.com
# Generate RSA keys
crypto key generate rsa modulus 2048

enable secret ccna
username admin secret ccna
# Optional. Limit which devices can connect
access-list 1 permit host 192.168.2.1
ip ssh version 2
line vty 0 15
login local
# Time out after 5 mins
exec-timeout 5 0
# Allow SSH connections
transport input ssh
# Apply the ACL to the vty lines
access-class 1 in

# Connect via SSH
ssh -l [username] [ip-address]
ssh [username]@[ip-address]


### FTP and TFTP (File Transfer Protocol and Trivial File Transfer Protocol)

TFTP server port listen = UDP 69
FTP control port = TCP 21
FTP data port = TCP 20

# FTPS (FTP over SSL/TLS) is an upgrade to FTP.
# SFTP (SSH File Transfer Protocol) is a different protocol to FTP.

# FTP is more compex than TFTP and allows not only file transfers, but clients can also navigate file directories, add and remove directories, list files, etc.

# In FTP active mode, the server initiates the data connection.
# In FTP passive mode, the client initiates the data connection, which is often necessary when the client is behind a firewall that could block the incoming connection from the server.

## IOS File Systems
show file systems

## Upgrading Cisco IOS
# View the current IOS version
show version
# View the contents of flash
show flash
# Copy the file using TFTP
# copy [source] [destination]
copy tftp: flash:
192.168.1.1
c2900-universalk9-mz.SPA.155-3.M4a.bin

# View the copied file
show flash

# Load and replace the file with the old one
conf t
boot system flash:c2900-universalk9-mz.SPA.155-3.M4a.bin
exit
write memory
reload

# Delete a file in flash
delete flash:c2900-universalk9-mz.SPA.151-4.M4.bin

## FTP copying files to a server
# An FTP username and password must be configured
ip ftp username cisco
ip ftp password cisco
exit
copy ftp: flash:
192.168.1.1
c2900-universalk9-mz.SPA.155-3.M4a.bin

## Password Recovery for the 2900 Integrated Services Router
https://www.cisco.com/c/en/us/support/docs/routers/2800-series-integrated-services-routers/112033-c2900-password-recovery-00.html

# Step-by-Step Procedure
# Perform these steps in order to recover your password:

# 1. Either switch off or shut down the router.
# 2. Remove the compact flash that is on the rear of the router. This image shows the rear of the 2951 router:
# 3. Switch on the router.
# 4. Once the router is on Rommon mode, reinsert the compact flash.
# 5. Type confreg 0x2142 at the rommon 1> prompt in order to boot from Flash.
# This step bypasses the startup configuration where the passwords are stored.
# 6. Type reset at the rommon 2> prompt.
# The router reboots, but ignores the saved configuration.
# 7. Type no after each setup question, or press Ctrl-C in order to skip the initial setup procedure.
# 8. Type enable at the Router> prompt.
# You are in enable mode and should see the Router# prompt.
# 9. Type configure memory or copy startup-config running-config in order to copy the nonvolatile RAM (NVRAM) into memory.
# Warning:  Do not enter copy running-config startup-config or write. These commands erase your startup configuration.
# 10. Issue the show running-config command.
# The show running-config command shows the configuration of the router. In this configuration, the shutdown command appears under all interfaces, which indicates all interfaces are currently shut down. In addition, the passwords (enable password, enable secret, vty, and console passwords) are in either an encrypted or unencrypted format. You can reuse unencrypted passwords. You must change encrypted passwords to a new password.
# 11. Type configure terminal.
# The hostname(config)# prompt appears.
# 12. Type enable secret <password> in order to change the enable secret password. For example:
# hostname(config)#enable secret cisco
# 13. Issue the no shutdown command on every interface that you use.
# If you issue a show ip interface brief command, every interface that you want to use should display up up.
# 14. Type config-register <configuration_register_setting> . Where <configuration_register_setting> is either the value you recorded in step 2 or 0x2102 . For example:
# hostname(config)#config-register 0x2102
# 15. Press Ctrl-z or end in order to leave the configuration mode.
# The hostname# prompt appears.
# 16. Type write memory or copy running-config startup-config in order to commit the changes.


### NAT

# RFC 1918 private IPv4 ranges (cannot be used over the Internet):
# Class A - 10.0.0.0/8 (10.0.0.0 to 10.255.255.255)
# Class B - 172.16.0.0/12 (172.16.0.0 to 172.31.255.255)
# Class C - 192.168.0.0/16 (192.168.0.0 to 192.168.255.255)

## Static NAT

# Involves statically configuring one-to-one mappings of private IP addresses to public IP addresses.
# Inside Local IP address is mapped to an inside global IP address. The IP configured on the host. Usually a private IP address.
# Inside Global IP address is the IP address of the inside host after NAT. Usually a public IP address.
# Outside Local is the IP address of the outside host from the perspective of the local network.
# Outside Global is the IP address of the outside host from the perspective of the outside network.

# Inside / OUtside = Location of the host
# Local / Global = Perspective

# One-to-one mapping allows external hosts to access the internal host via the inside global address.


## Static NAT Configuration

# Define inside interfaces connected to the internal network
int g0/1
ip nat inside
exit
# Define outside interfaces connected to the external network
int g0/0
ip nat outside
exit
# Configure the one-to-one IP address mappings
# ip nat inside source static [inside-local-ip] [inside-global-ip]
ip nat inside source static 192.168.0.167 100.0.0.1
# The following command will be rejected as a static entry already exists
ip nat inside source static 192.168.0.168 100.0.0.1

show ip nat translations
# Clear the dynamic IP translations only (static IP translations will remain)
clear ip nat translation *
show ip nat statistics


## Dynamic NAT

# The router dynamically maps inside local addresses to inside global addresses as needed.

# An ACL is used to identify which traffic should be translated.
# If the source IP is permitted by the ACL, then it will be translated.
# If the source IP is denied by the ACL, then it will NOT be translated (traffic will not be dropped).

# A NAT pool is used to determine the available inside global addresses.

# The mappings are still one-to-one (one inside local IP address per inside global IP address).

# If there aren't enough inside global IP addresses available (all are currently being used), it is called 'NAT pool exhaustion'.
# If a packet from another inside host arrives and needs NAT but there are no available addresses, the router will drop the packet.
# The host will be unable to access outside networks until one of the inside global IP addresses becomes available.
# Dynamic NAT entries will time out automatically if not used, or you can clear them manually.


## Dynamic NAT Configuration

# Define inside interfaces connected to the internal network
int g0/1
ip nat inside
exit
# Define outside interfaces connected to the external network
int g0/0
ip nat outside
exit

# Define the traffic that should be translated, permitted by the ACL
acccess-list 1 permit 192.168.0.0 0.0.0.255

# Define the pool of inside global IP addresses (instead of prefix-length 24, you can use netmask 255.255.255.0)
ip nat pool POOL1 100.0.0.0 100.0.0.255 prefix-length 24

# Configure dynamic NAT by mapping the ACL to the pool
ip nat inside source list 1 pool POOL1

# Clear NAT table. Only dynamic NAT translations will be cleared (static NAT entries will remain)
show ip nat translations

show ip nat statistics
# UDP and ICMP mappings are cleared about 1 minute later (statistics show as extended entries)
# The original dynamic mappings will be cleared after 24 hours (statistics show as dynamic entries)


## Dynamic PAT

# Port Address Translation (aka NAT overload) translates both the IP address and the port number (if necessary).
# By using a unique port number for each communication flow, a single public IP address can be used by many different internal hosts.
# Port numbers are 16 bits = over 65000 available port numbers.

# Inside local addresses (private IP on hosts) are translated to inside global (the public IP on the external interface)

# The router will keep track of which inside local address is using which inside global address and port.

# Because many inside hosts can share a single public IP, PAT is very useful for preserving public IP addresses, and it is used in networks all over the world.


## Configure PAT (pool)

# Define inside interfaces connected to the internal network
int g0/1
ip nat inside
exit
# Define outside interfaces connected to the external network
int g0/0
ip nat outside
exit

# Define the traffic that should be translated, permitted by the ACL
acccess-list 1 permit 192.168.0.0 0.0.0.255

# Define the pool of inside global IP addresses (instead of prefix-length 24, you can use netmask 255.255.255.0)
ip nat pool POOL1 100.0.0.0 100.0.0.255 prefix-length 24

# Configure PAT by mapping the ACL to the pool and using the overload keyword at the end
ip nat inside source list 1 pool POOL1 overload

show ip nat translations


## Configure PAT (interface)

# Define inside interfaces connected to the internal network
int g0/1
ip nat inside
exit
# Define outside interfaces connected to the external network
int g0/0
ip nat outside
exit

# Define the traffic that should be translated, permitted by the ACL
acccess-list 1 permit 192.168.0.0 0.0.0.255

# Configure PAT by mapping the ACL to the interface and enabling overload
ip nat inside source list 1 interface g0/0 overload

show ip nat translations


### Quality of Service (QoS) and Power over Ethernet (PoE)

## IP Phones
# Traditional phones operate over the Public Switched Telephone Network (PSTN).
# Sometimes this is called Plain Old Telephone Service (POTS).
# IP phones use Voice over IP (VoIP) technologies to enable phone calls over an IP network, such as the Internet.
# IP phones are connected to a switch just like any other end host.

# IP phones have an internal 3-port switch.
# 1 port is the uplink to the external switch
# 1 port is the downlink to the Procedure
# 1 port conencts internally to the phone itself

# This allows the PC and the IP phone to share a single switch port. Traffic from the PC passes through the IP phone to the switch.
# It is recommended to separate voice traffic (from the IP phone) and data traffic (from the PC) by placing them in separate VLANs.
# This can be accomplished using a voice VLAN
# Traffic from the PC will be untagged, but traffic from the phone will be tagged with a VLAN ID.

## Configure a switchport for IP phone and PC setup
interface g0/0
switchport mode access
switchport access vlan 10
switchport voice vlan 11

show interfaces g0/0 switchport

## Power over Ethernet (PoE)
# PoE allows Power Sourcing Equipment (PSE) to provide Powered Devices (PD) over an Ethernet cable.
# Typically the PSE is a switch and the PDs are IP phones, IP cameras, Wireless Access Points (WAPS), etc.
# The PSE receives AC power from the outlet, converts it to DC power, and supplies that DC power to the PDs.
# The same cables are also used to transmit data.
# Too much electrical current can damage electrical devices.
# PoE has a process to determine if a connected device needs power, and how much power it needs.
# When a device is connected to a PoE-enabled port, the PSE (switch) sends low power signals, monitors the response, and determines how much power the PD needs.
# If the device needs power, the PSE supplies the power to allow the PD to boot.
# The PSE continues to monitor the PD and supply the required amount of power (but not too much).

# Power policing can be configured to prevent a PD from taking too much power.
# Configure power policing with the default settings: disabled the port and send a Syslog message if a PD draws too much power.
power inline police 
# Equivalent to:
power inline police action err-disable
# The interface will be put in an error-disabled state and can be re-enabled with the shutdown command followed by the no shutdown command.
# The following command does not shut down the interface if the PD draws too much power. It will restart the interface and send a Syslog message.
power inline police action log

show power inline police g0/0

## PoE Standards

# Name | Standard | Watts | Powered Wire Pairs
# Cisco Inline Power (ILP) | Made by Cisco, not standard | 7 | 2
# PoE (Type 1) | 802.3af | 15 | 2
# PoE+ (Type 2) | 802.3.at | 30 | 2
# UPoE (Type 3) | 802.3.bt | 60 | 4
# UPoE+ (Type 4) | 802.3.bt | 100 | 4


## Quality of Service (QoS)
# Voice traffic and data traffic used to use entirely separate networks.
# Voice traffic used the PSTN
# Data traffic used the IP network (enterprise WAN, Internet, etc)

# QoS wasn't necessary as the different kinds of traffic didn't compete for bandwidth.

# Modern networks are typically converged networks in which IP phones, video traffic, regular data traffic, etc all share the same IP network.
# This enable  cost savings as well as more advanced features for voice and video traffic, for examples integrations with collaboration software (Cisco WebEx, Microsoft Teams, etc).
# However, the kinds of traffic now have to compete for bandwidth.
# QoS is a set of tools used by network devices to apply different treatment to different packets.

# QoS is used to manage the following characteristics of network traffic:
1) Bandwidth
# The overall capacity of the link, measured in bits per second (Kbps, Mbps, Gbps, etc)
# QoS tools allow you to reserve a certain amount of a link's bandwidth for specific kinds of traffic.
# For example: 20% voice traffic, 30% for specific kinds of data traffic, leaving 50% for all other traffic.
2) Delay
# The amount of time it takes traffic to go from source to destination = one-way delay
# The amount of time it takes traffic to go from source to destination and return = two-way delay
3) Jitter
# The variation in one-way delay between packets sent by the same application
# IP phones have a jitter buffer to provide a fixed delay to audio packets
4) Loss
# The percentage of packets sent that do not reach their destination
# Can be caused by faulty cables
# Can also be caused whe na device's packet queues get full and the device starts discarding packets.

# The following standards are recommended for acceptable interactive audio (ie. phone call) quality:
# One-way delay: 150 ms or less
# Jitter: 30 ms or less
# Loss: 1% or less

# If the standards are not met, there could be a noticable reduction in the quality of the phone call.

## QoS Queuing
# If a network device receives messages faster than it can forward them out of the appropriate interface, the messages are placed in a queue.
# By default, queued messages will be forwarded in a First In First Out (FIFO) manner.
# Messages will be sent in the order they are received.
# If the queue is full, new packets will be dropped. This is called tail drop.
# Tail drop is harmful because it can lead to TCP global synchronizaion.

# Review of the TCP sliding window:
# Hosts using TCP use the sliding window to increase / decrease the rate at which they send traffic as needed.
# When a packet is dropped, it will be re-transmitted.
# When a drop occurs, the sender will reduce the rate it sends traffic.
# It will then gradually increase the rate again.

# When the queue fills up and tail drop occurs, all TCP hosts sending traffic will slow down the rate at which they send traffic.
# They will all then increase the rate at which they send traffic, which rapidly leads to more congestion, dropped packets, and the process repeats again.

# Network congestion -> Tail drop -> Global TCP window size decrease -> Network underutilized -> Global TCP window size increase

# A solution to prevent tail drop and TCP global synchronizaion is Random Early Detection (RED).
# When the amount of traffic in the queue reaches a certain threshold, the device will start randomly dropping packets from select TCP flows.
# Those TCP flows that dropped packets will reduce the rate at which traffic is sent, but you will avoid global TCP synchronizaion, in which ALL TCP flows reduce and then increase the rate of transmission at the same time in waves.
# In standard RED, all kinds of traffic are treated the same.
# An improved version, Weighted Random Early Detection (WRED), allows you to control which packets are dropped depending on the traffic class.


## QoS Classification
# The purpose of QoS is to give certain kinds of network traffic priority over others during congestion.
# Classification organises network traffic (packets) into traffic classes (categories).
# Classification is fundamental to QoS. To give priority to certain types of traffic, you have to identify which types of traffic to give priority to.

# There are many methods of classifying traffic. Some examples:
# An ACL. Traffic which is permitted by the ACL will be given certain treatment, other traffic will not.
# Network Based Application Recognition (NBAR) performs a deep packet inspection, looking beyond the Layer 3 and Layer 4 information up to Layer 7 to identify the specific kind of traffic.
# In the Layer 2 and Layer 3 headers there are specific fields used for this purpose.

# The Priority Code Point (PCP) field of the 802.1Q tag (in the Ethernet header) can be used to indentify high / low priority traffic. Only when there is a dot1q tag.

# The Differentiated Services Code Point (DSCP) field of the IP header can also be used to identify high / low priority traffic.

# PCP is also known as Class of Service (CoS). Its use is defined by IEEE 802.1p
# 3 bits = 8 possible values (2^3 = 8)

# PCP Value | Traffic Types
# 0 | Best effort (default)
# 1 | Background
# 2 | Excellent effort
# 3 | Critical applications
# 4 | Video
# 5 | Voice
# 6 | Internetwork control
# 7 | Network control

# Best effort delivery means there is no guarantee that data is delivered or that it meets any QoS standard. This is regular traffic, not high priority.
# IP phones mark call signalling traffic (used to establish calls) as PCP3. They mark the actual voice traffic as PCP5.

# Because PCP is found in the dot1q header, it can only be used over the following connections:
# Trunk links
# Access links with a voice VLAN

## IP Precedence (IPP) sets the most significant 3 bits of the TOS field; and is used to indicate the priority of packets in IPv4.
# Standard IPP markings are similar to PCP:
# 6 and 7 are reserved for network control traffic (ie. OSPF messages between routers)
# 5 = voice
# 4 = video
# 3 = voice signalling
# 0 = best effort

# With 6 and 7 reserved, 6 possible values remain
# Although 6 values is sufficient for many networks, the QoS requirements of some networks demand more flexibility.

## Differentiated Services Code Point (DSCP)
# RFC 2474 (1998) defines the DSCP field, and other DiffServ RFCs elaborate on its use.

# With IPP updated to DSCP, new standard markings had to be decided upon.
# By having generally agreed upon standard markings for different kinds of traffic, QoS design and implementation is simplified, QoS works better between ISPs and enterprises, among other benefits.

# You should be aware of the following standard markings:
# Default Forwarding (DF) - best effort traffic. The DSCP value for DF is 0.
# Expedited Forwarding (EF) - low loss / latency / jitter traffic (usually voice). The DSCP value for EF is 46. 
# Assured Forwarding (AF) - A set of 12 standard values. 
# Class Selector (CS) - A set of 8 standard values, provides backward compability with IPP

## Calculate AF values
# Defines 4 traffic classes. All packets in a class have the same priority. 
# Within each class, there are three levels of drop precedence. 
# Higher drop precedence = more likely to drop the packet during congestion.

# AF table
# | Class || Drop Precedence || 0 |
# | 4 | 2 | 1 || 2 | 1 || 0 |
# AF + Class + Drop Precedence

# DSCP table
# | 32 | 16 | 8 || 4 | 2 || 1 |
# DSCP + Binary addition

# Examples
# | 0 | 0 | 1 || 0 | 1 || 0 |
# = AF11
# = DSCP 10

# | 0 | 0 | 1 || 1 | 0 || 0 |
# = AF12
# = DSCP 12

# | 0 | 1 | 0 || 1 | 1 || 0 |
# = AF23
# = DSCP 22

# | 0 | 1 | 1 || 1 | 0 || 0 |
# = AF32
# = DSCP 28

# | 1 | 0 | 0 || 1 | 1 || 0 |
# = AF43
# = DSCP 38

# Formula to convert from AF value to decimal DSCP value:
# Class = X
# Drop Precedence = Y
# 8X + 2Y

# Example
# AF43
# DSCP = (8 x 4) + (2 x 3) = 32 + 6 = 38

## Summary of AF values

#                     Lowest drop precedence ----> Highest drop precedence
# Highest priority 
#                 ^   AF41 (34)   AF42 (36)   AF43 (38)
#                 |   AF31 (26)   AF32 (28)   AF33 (30)
#                 |   AF21 (18)   AF22 (20)   AF23 (22)
#                 |   AF11 (10)   AF12 (12)   AF13 (14)
# Lowest priority

# Traffic marked with AF41 gets the best treatment as it has the highest priority class and the lowest drop precedence
# Traffic marked with AF13 gets the worst treatment as it has the lowest priority class and the highest drop precedence

## Class Selector (CS)
# CS defines eight DSCP values for backward compability with IPP.
# Three bits that were added for DSCP are set to 0, and the original IPP bits are used to make 8 values.

# CS table
# | Decimal values || 0 | 0 | 0 |
# | 4 | 2 | 1 || 0 | 0 | 0 |
# IPP: 0 1 2 3 4 5 6 7
# CS: CS0 CS1 CS2 CS3 CS4 CS5 CS6 CS7
# DSCP is 8 x CS number
# DSCP: 0 8 16 24 32 40 48 56

## RFC 4954 (Standard Recommendations)
# RFC 4954 was developed with the help of Cisco to bring all of these values together and standardize their use.
# The RFC offers many specific recommendations, but here are a few key ones:

# Voice traffic: EF (Expedited Forwarding)
# Interactive video: AF4x
# Streaming video: AF3x
# High priority data: AF2x
# Best effort: DF

## Trust Boundaries
# The trust boundary of a network defines where devices trust and don't trust the QoS markings of received messages.
# If the markings are trusted, the device will forward the message without changeing the markings.
# If the markings aren't trusted, the device will change the markings according to the configured policy.

# If an IP phone is connected to the switch port, it is recommended to move the trust boundary to the IP phones.
# This is done via configuration on the switch port connected to the IP phone.
# If a user marks their PC's traffic with a high priority, the marking will be changed (not trusted).

## Queuing and Congestion Management
# When a network device receives traffic at a faster rate than it can forward the traffic out of the appropriate interface, packets are placed in that interface's queue as they wait to be forwarded.
# When the queue becomes full, packets that don't fit in the queue are dropped (tail drop).
# RED and WRED drop packets early to avoid tail drop.

# An essential part of QoS is the use of multiple queues.
# This is where classification plays a role. The device can match traffic based on various factors (for example the DSCP marking in the IP header) and then place it in the appropriate queue.
# However, the device is only able to forward one frame out if an interface at once, so a scheduler is used to decide which queue traffic is forwarded from next.
# Prioritization allows the scheduler to give certain queues more priority than others.

# Process:
# Ingress traffic (routing, etc.) -> Classification -> Queuing -> Scheduling -> Transmission

# A common scheduling method is weighted round robin.
# Round robin = packets are taken from each queue in order, cyclically
# Weighted = more data is taken from high priority queues each time the scheduler reaches that queue

# Class-Based Weighted Fair Queuing (CBWFQ) is a popular method of scheduling, using a weighted round-robin scheduler while guaranteeing each queue a certain percentage of the interface's bandwidth during congestion.

# Round-robin scheduling is not ideal for voice and video traffic. Even if the voice and video traffic receives a guaranteed minimum amount of bandwidth, round-robin can add delay and jitter because even the high priority queues have to wait their turn in the scheduler.
# To resolve this, we can configure Low Latency Queuing (LLQ) that designates one (or more) queues as strict priority queues.
# This means that if there is traffic in the queue, the scheduler will always take the next packet from that queue until it is empty.
# This is very effective for reducing the delay and jitter of voice and video traffic.

# However, it has the downsite of potentially starving other queues if there is always traffic in the designated strict priority queue.
# Policing can control the amount of traffic allowed in the strict priority queue so that it can't take all of the link's bandwidth.

## Shaping and Policing
# Traffic shaping and policing are both used to control the rate of traffic.

# Shaping buffers traffic in a queue if the traffic rate goes over the configured rate.

# Policing drops the traffic if the traffic rate goes over the configured rate.
# Policing also has the option of re-marking the traffic instead of dropping it.
# Burst traffic over the configured rate is allowed for a short period of time.
# This accomodates data applications which typically are bursty in nature. Instead of a constant stream of data, they send data in bursts.
# The amound of burst traffic allowed is configurable.

# In both cases, classification can be used to allow for different rates for different kinds of traffic.


## QoS Configuration

# Free CCNA | QoS | Day 47 Lab | CCNA 200-301 Complete Course

# R1
configure terminal
# Identify traffic in a QoS configuration, we use class-map [name-matching-traffic]
class-map HTTPS_MAP
match protocol https
exit
class-map HTTP_MAP
match protocol http
exit
class-map ICMP_MAP
match protocol icmp
exit

show run | section class-map

# Specify what kind of treatment we want to give to each kind of traffic
policy-map G0/0/0_OUT
# Mark any https traffic
class HTTPS_MAP
# Decide what to do with traffic that matches this class map
set ip dscp AF31
# Give HTTPS a priority queue with at least 10% of the link's bandwidth during periods of congestion
priority percent 10
exit
class HTTP_MAP
set ip dscp af32
bandwidth percent 10
exit
class ICMP_MAP
set ip dhcp cs2
bandwidth percent 5
exit
exit

show run | section policy-map

# Apply the policy map using a service policy
interface G0/0/0
service-policy output G0/0/0_OUT
end

show run


### Security Fundamentals

# CIA Triad

# Confidentiality
# Only authorised users should be able to access data.
# Some information / data is public and can be accessed by anyone, some are secret and should only be accessed by specific people.

# Integrity
# Data should not be tampered with (modified) by Unauthorised users.
# Data should be correct and authentic.

# Availability
# The networks / systems should be operational and accessible to authorised users.

# Attackers can threaten the confidentiality, integrity, and availability of an enterise's system and information.

# A vulnerability is any potential weakness that can compromise the CIA of a system / info.
# A potential weakness is not a problem on its own.

# An exploit is something that can potentially be used to exploit the vulnerability.
# Something that can potentially be used as an exploit isn't a problem in it's own.

# A threat is the potential of a vulnerability to be exploited.
# A hacker exploiting a vulnerability in your system is a threat.

# A mitigation technique is something that can protect against threats.
# Should be implemented everywhere where a vulnerability can be exploited: client devices, servers, switches, routers, firewalls, etc.

## Types of Attacks

# Denial-of-Service (DoS) attacks
# One common DoS attack is the TCP SYN flood.
# TCP three-way handshake: SYN | SYN-ACK | X ACK
# The attacker sends countless TCP SYN messages to the target.
# The target sends a SYN-ACK message in response to each SYN it receives.
# The attacker never replies with the final ACK of the TCP three-way handshake.
# The incomplete connections fill up the target's TCP connection table.
# The attacker continues sending SYN messages.
# The target is no longer able to make legitimate TCP connections.

# The attacker likely spoofs their IP address so traffic from the target to the attacker will never reach.

# Distributed Denial-of-Service (DDoS) attack
# In a DDoS attack, the attacker infects many target computers with malware and uses them to initiate a DoS attack, for example a TCP SYN flood attack.
# This group of infected computers is called a botnet.

# Spoofing attacks
# To spoof an address is to use a fake source address (IP or MAC address)
# Numerous attacks involve spoofing, it's not a single kind of attack.
# An example is a DHCP exhaustion attack.
# An attacker uses spoofed MAC addresses to flood DHCP Discover messages.
# The target server's DHCP pool becomes full, resulting in a DoS to other devices.

# Reflection and Amplification attacks
# In a reflection attack, the attacker sends traffic to a reflector, and spoofs the source address of its packets using the target's IP address.
# The reflector (ie. a DNS server) sends the reply to the target's IP address.
# If the amount of traffic sent to the target is large enough, this can result in a DoS.
# A reflection attack becomes an amplification attack when the amount of traffic snet by the attacker is small, but it triggers a large amount of traffic to be sent from the reflector to the target.
# e.g. 
# https://www.cloudflare.com/learning/ddos/dns-amplification-ddos-attack
# https://www.cloudflare.com/learning/ddos/ntp-amplification-ddos-attack


# Man-in-the-middle (MITM) attack
# In PC1's ARP table, the entry for 10.0.0.1 will have the attacker's MAC address.
# When PC1 tries to send traffic to SRV1, it will be forwarded to the attacker instead.
# The attacker can inspect the messages, and then forward them on to SRV1.
# The attacker can also modify the messages before forwarding them to SRV1.
# This compromises the Confidentiality and Integrity of communications between PC1 and SRV1.

# Reconnaissance attacks
# These attacks are not attacks themselves, but they are used to gather information about a target which can be used for a future attack.
# This is often publicly available information.
# ie. nslookup to learn the IP address of a site.
# or a WHOIS query to learn email addresses, phone numbers, physical addresses, etc.
# https://lookup.icann.org/lookup

# Malware
# Malicious software refers to a variety of harmful programs that can infect a computer.
# Viruses infect other software (a host program). The virus spreads as the software is shared by users. Typically they corrupt or modify files on the target computer.
# Worms do not require a host program. They are standalone malware and they are able to spread on their own, without user interaction. The spread of worms can congest the network, but the payload of a worm can cause additional harm to target devices.
# Trojan Horses are harmful software that is disguised as legitimate software. They are spread through user interaction such as opening email attachments, or downloading a file from the Internet.

# Social Engineering attacks
# These attacks target the most vulnerable part of any system - people.
# They involve psychological manipulation to make the target reveal confidential information or perform some action.
# Phishing typically invilves fraudulent emails that appear to come from a legitimate business (Amazon, bank, credit card company, etc) and contain links to a fraudulent website that seems legitimate.
# Users are told to login to the fraudulent website, providing their login credentials to the attacker.
# Sprear phishing is a more targeted form of phishing, ie. aimed at employees of a certain company.
# Whaling is phishing targeted at high-profile individuals, ie. a company president.
# Vishing (voice phishing) is phishing performed over the phone.
# Smishing (SMS phishing) is phishing using SMS text messages.
# Watering hole attacks compromise sites that the target victim frequently visits. If a malicious link is placed on a website the target trusts, they might not hesitate to click it.
# Tailgating attacks involve entering restricted, secured areas by simply walking in behind an authorised person as they enter.
# Often the target will hold the door open for the attacker to be polite, assuming the attacker is also authorised to enter.

# Password-related attacks
# Most systems use a username / password combination to authenticate users.
# The username is often simple / easy to guess (for example the user's email address), and the strength and secrecy of the password is relied on to provide the necessary security.
# Attackers can learn a user's passwords via multiple methods:
# Guessing
# Dictionary attack: A program runs through a dictionary of list of common words / passwords to find the target's password.
# Brute force attack: A program tries every possible combination of letters, numbers, and special characters to find the target's password.
# Strong passwords should contain:
# at LEAST 8 characters (preferably more)
# a mixture of UPPERCASE and lowercase letters
# a mixture of letters and numbers
# one or more special characters (# @ ! ? etc.)
# passwords should be changed regularly

# Multi-factor authentication
# This involves providing more than just a username / password to prove your identity.
# It usually involves providing two of the following (two-factor authentication):
# Something you know: a username / password combination, a PIN, etc.
# Something you have: pressing a notification that appears on your phone, a badge that is scanned, etc.
# Something you are: biometrics such as a face scan, palm scan, fingerprint scan, retuna scan, etc.
# Requiring multiple factors of authentication greatly increases the security. Even if an attacker learns the target's password (something you know), they won't be able to login to the target's account.

# Digital certificates
# They are another form of atuhentication used to prove the identity of the holder of the certificate.
# They are used for websites to verify that the website being accessed is legitimate.
# Entities that want a certificate to prove their identity send a Certificate Signing Request (CSR) to a Certificate Authority (CA), which will generate and sign the certificate.

# Controlling and monitoring users with AAA
# AAA (triple-A) stands for Authentication, Authorisation, and Accounting.
# It is a framework for controlling and monitor users of a computer system (ie. a network).
# Authentication is the process of verifying a user's identity.
# Authorisation os the process of granting the user the appropriate access and permissions.
# Granting the user access to some files / services, restricting access to other files / services is authorisation.
# Accounting is the process of recording the user's activities on the system.
# Logging when a user makes a change to a file is accounting.
# Enterprises typically use a AAA server to provide AAA services.
# AAA servers usually support the following two AAA protocols:
# RADIUS: an open standard protocol, uses UDP ports 1812 and 1813.
# TACACS+: a Cisco propriety protocol, uses TCP port 49

# Security Program Elements
# User awareness programs are designed to make employees aware of potential security threats and risks.
# For example, a company might send out fales phishing emails to make employees click a link and sign in with their login credentials.
# Although the emails are harmless, employees who fall for the false emails will be informed that it is part of a user awareness program and they should be more careful about phishing emails.
# User training programs are more formal than user awareness programs.
# For example, dedicated training sessions which educate users on the corporate security policies, how to create strong passwords, and how to avoid potential threats.
# Physical access control protects equipment and data from potential attackers by only allowing authorised users into protected areas such as network closets or data center floors.
# Multifactor locks can protect access to restricted areas.
# ie. a door that requires users to swipe a badge and scan their fingerprint to enter.
# Permissions of the badge can easily be changed, for example permissions can be removed when an employee leaves the company.


### Port Security

# Port security is a security feature of Cisco switches.
# It allows you to controlwhich source MAC addresses are allowed to enter the switchport.
# If an unauthorised source MAC address enters the port, an action will be taken.
# The default action is to place the interface in an err-disabled state.

# When you enable port security on an interface with the default settings, one MAC address is allowed.
# You can configure the allowed MAC address manually.
# If you do not configure it manually, the switch will allow the first rouce MAC address that enters the interface.
# You can change the maximum number of MAC addresses allowed.

## Why port security?
# Port security allows network admins to control which devices are allowed to access the network.
# However, MAC address spoofing is a simple task.
# It's easy to configure a device to send frames with a different soruce MAC address.
# Rather than manually specifying the MAC addresses allowed on each port, port security's ability to limit the number of MAC addresses allowed on an interface is more useful.
# Think of the DHCP starvation attack.
# The attacker spoofed thousands of fake MAC addresses
# The DHCP server assigned IP addresses to these fake MAC addresses, exhausing the DHCP pool
# The switch's MAC address table can also become full due to such an attack
# Limiting the number of MAC addresses on an interface can protect agains those attacks.#

## Basic Port security configuration
interface g0/1
switchport port-security
# The command can be rejected if it is a dynamic port
do show int g0/1 switchport
# Port security can be enabled on access ports or trunk ports, but they must be statically configured as access or trunk.
switchport mode access
do show int g0/1 switchport
switchport port-security
# The command works so port security is now enabled on G0/1

show port-security interface g0/1

# If a port was shut down due to unauthorised devices connected, then re-enable it:
shutdown
no shutdown

# Errdisabled interfaces will not be automatically recovered
# Show errdisable reasons that can be enabled
show errdisable recovery

# Every 5 minutes (by default), all err-disabled interfaces will be re-enabled if err-disable recovery has been enabled for the cause of the interface's disablement.
# Enable err-disable recovery for port security violations
errdisable recovery cause psecure-violation
# Shorten the timer of the recovery
errdisable recovery interval 180

# ! ErrDisable Recovery is useless if you don't remove the device that caused the interface to enter the err-disabled state!
# Disconnect the unauthorised device, and either manually re-enable the interface, or let err-disable recovery do it for you automatically.
# What if you don't disconnect the unauthorised device?
# If you manually configured the MAC address, then the interface will become disabled again when it receives another frame from the unauthorised device.
# If you let the switch dynamically learn the previous secure MAC address, it is cleared when the interface is disabled. When the interface is re-enabled, the unauthorised device's MAC address might become the new secure MAC address on the interface, which is not a good situation.
# Remember to disconnect the unauthorised device.

## Port Security Violation Modes

# Shutdown 
# It shuts down the port by placing it in an err-disabled state.
# Generates a Syslog and/or SNMP message when the interface is disabled.
# The violation counter is set to 1 when the interface is disabled.

# Restrict
# The switch discards traffic from unauthorised MAC addresses.
# The interface is NOT disabled.
# Generates a Syslog and/or SNMP message each time an unauthorised MAC is detected.
# The violation counter is incremented by 1 for each unauthorised frame.

# Port Security Violation Mode: Restrict configuration
switchport port-security
switchport port-security mac-address 000a.000a.000a
switchport port-security violation restrict

# Protect
# The switch discards traffic from unauthorised MAC addresses.
# The interface is NOT disabled.
# It does NOT generate Syslog/SNMP messages for unauthorised traffic.
# It does NOT increment the violation counter.

# Port Security Violation Mode: Protect configuration
switchport port-security
switchport port-security mac-address 000a.000a.000a
switchport port-security violation protect

## Secure MAC address aging
# By default, secure MAC addresess will not age out (Aging Time: 0 mins).
# Can be configured with:
switchport port-security aging time [minutes]
# If the aging time is configured, the default aging type becomes Absolute.
# Absolute: After the secure MAC address is learned, the aging timer starts and the MAC is removed after the timer expires, even if the switch continues receiving frames from that source MAC address.
# Inactivity: After the secure MAC address is learned, the aging timer starts but it reset every time a frame from that source MAC address is received on the interface.
# Aging type is configured with:
switchport port-security aging type {absolute | inactivity}
# Secure Static MAC aging (addresses configured with 'switchport port-security mac-address x.x.x') is disabled by default.
# Can be enabled with:
switchport port-security aging static
# The statically assigned MAC address will be removed from the running-config and the MAC address table.
# Example configuration
switchport port-security aging time 30
switchport port-security aging type inactivity
switchport port-security aging static

## Sticky Secure MAC addresses
# Sticky secure MAC address learning can be enabled with the following command:
switchport port-security mac-address sticky
# When enabled, dynamically-learned secure MAC addresses will be added to the running config like this:
switchport port-security  mac-address sticky [mac-address]
# The sticky secure MAC addresses will NEVER age out.
# You need to save the running-config to the startup-config to make them truly permanent (or else they will not be kept if the switch restarts).
# When you issue the 'switchport port-security mac-address sticky' command, all current dynamically-learned secure MAC addresses will be converted to sticky secure MAc addresses.
# If you issue the 'no switchport port-security mac-address sticky' command, all current sticky secure MAC addresses will be converted to regular dynamically-learned secure MAC addresses.

# Sticky Secure MAC address configuration
switchport port-security
switchport port-security mac-address sticky
do show running-config interface g0/1
# Sticky MAC addresses are a way of configuring static secure MAC addresses without having to manually configure them.

## MAC Address Table
# Secure MAC addresses will be added to the MAC address table like any other MAC address.
# Sticky and Static secure MAC addresses will have a type of STATIC.
# Dynamically-learned secure MAC addresses will have a type of DYNAMIC.
# You can view all secure MAC addresses with:
show mac address-table secure

## Free CCNA | Port Security | Day 49 Lab | CCNA 200-301 Complete Course

# SW1 Config
conf t
int range f0/1-3
switchport mode access
switchport port-security
switchport port-security aging time 60

# SW2 Config
conf t
int g0/1
switchport mode access
switchport port-security
switchport port-security violation restrict
switchport port-security maximum 4
switchport port-security mac-address sticky

show port-sec int g0/1
show run
show mac address-table
show port-sec


### DHCP Snooping

# DHCP snooping is a security feature of switches that is used to filter DHCP messages received on untrusted ports.
# DHCP snooping only filters DHCP messages. Non-DHCP messages aren't affected.
# All ports are untrusted by default.
# Usually, uplink ports are configured as trusted ports, and downlink ports remain untrusted.

## DHCP Starvation
# An example of a DHCP-based attack is a DHCP starvation attack.
# An attacker uses spoofed MAC addresses to flood DHCP Discover messages.
# The target server's DHCP pool becomes full, resulting in a DoS to other devices.

## DHCP Poisoning (Man-in-the-Middle)
# Similar to ARP Poisoning, DHCP Poisoning can be used to perrform a Man-in-the-Middle attack.
# A spurious DHCP server replies to clients' DHCP Discover messages and assigns them IP addresses, but makes the client use the spurious server's IP as the default gateway.
# This will cause the client to send traffic to the attacker instead of the legitimate default gateway.
# The attacker can then examine / modify the traffic before forwarding it to the legitimate default gateway.

## DHCP Messages
# When DHCP Snooping filters messages, it differentiates between DHCP Server messages and DHCP Client messages.
# Messages sent by DHCP Servers:
# OFFER
# ACK
# NAK = Opposite of ACK, used to decline a client's REQUEST
# Messages sent by DHCP Clients:
# DISCOVER
# REQUEST
# RELEASE = Used to tell the server that the client no longer needs its IP address
# DECLINE = Used to decline the IP address offered by a DHCP server

## DHCP Snooping Operations
# If a DHCP message is received on a trusted port, forward it as normal without inspection.
# If a DHCP message is received on an untrusted port, inspect it and act as follows:
# If it is a DHCP Server message, discard it.
# If it is a DHCP Client message, perform the following checks:
# DISCOVER / REQUEST messages: Check if the frame's source MAC address and the DHCP message's CHADDR fields match. Match = forward, mismatch = discard
# RELEASE / DECLINE messages: Check if the packet's source IP address and the receiving interface match the entry in the DHCP Snooping Binding Table. Match = forward, mismatch = discard
# When a client successfully leases an IP address from a server, create a new entry in the DHCP Snooping Binding Table.

## DHCP Snooping Configuration

# SW2 - Distribution Layer
ip dhcp snooping
ip dhcp snooping vlan 1
no ip dhcp snooping information option
# Specify which ports to trust (interface pointing toward the DHCP server)
interface g0/0
ip dhcp snooping trust

# SW1 - Access Layer
ip dhcp snooping
ip dhcp snooping vlan 1
no ip dhcp snooping information option
# Specify which ports to trust (interface pointing toward the DHCP server)
interface g0/0
ip dhcp snooping trust

show ip dhcp snooping binding
# RELEASE / DECLINE messages will be checked to make sure their IP address / interface ID match the entry in the DHCP snooping table.

## DHCP SNooping Rate-Limiting
# DHCP snooping can limit the rate at which DHCP messages are allowed to enter an interface.
# If the rate of DHCP messages crosses the configured limit, the interface is err-disabled.
# Like with Port Security, the interface can be manually re-enabled, or automatically re-enabled with errdisable recovery.

# DHCP SNooping Rate-Limiting Configuration example
int r g0/1-3
ip dhcp snooping limit rate 1
# If the interfaces receive more than one DHCP message per second, it will be disabled (this is too low for a real network).

# Enable error disabled recovery for DHCP rate limiting
errdisable recovery cause dhcp-rate-limit

## DHCP Option 82 (Information Option)
# Option 82, also known as the DHCP relay agent information option is one of many DHCP options.
# It provides additional information about which DHCP relay agent received the client's message, on which interface, in which VLAN, etc.
# DHCP relay agents can add Option 82 to messages they forward to the remote DHCP server.
# With DHCP snooping enabled, by default Cisco switches will add Option 82 to DHCP messages they receive from clients, even if the switch isn't acting as a DHCP relay agent.
# By default, Cisco switches will drop DHCP messages with Option 82 that are received on an untrusted port.
no ip dhcp snooping information option

## Free CCNA | DHCP Snooping | Day 50 Lab | CCNA 200-301 Complete Course
# R1
conf t
ip dhcp excluded-address 192.168.1.1 192.168.1.9
ip dhcp pool POOL1
network 192.168.1.0 255.255.255.0
default-router 192.168.1.1

# SW1
conf t
ip dhcp snooping
ip dhcp snooping vlan 1
int g0/2
ip dhcp snooping trust
exit
no ip dhcp snooping information option

# SW2
conf t
ip dhcp snooping
ip dhcp snooping vlan 1
int g0/1
ip dhcp snooping trust
exit
no ip dhcp snooping information option


### Dynamic ARP Inspection

## ARP Review
# ARP is used to learn the MAC address of another device with a known IP address.
# For example, a PC will use ARP to learn the MAC address of its default gateway to communicate with external networks.
# Typically it is a tow message exchange: request and reply

## Gratuitous ARP
# A gratuitous ARP message is an ARP reply that is sent without receiving an ARP request.
# It is sent to the broadcast MAC address.
# It allows other devices to learn the MAC address of the sending device without having to send ARP requests.
# Some devices automatically send GARP messages when an interface is enabled, IP address is changed, MAC address is changed, etc.

## Dynamic ARP Inspection
# DAI is a security feature of switches that is used to filter ARP messages received on untrusted ports.
# DAI only filters ARP messages. Non-ARP messages aren't affected.
# All ports are untrusted by default.
# Typically, all ports connected to other network devices (switches, routers) should be configured as trusted, while interfaces connected to end hosts should remain untrusted.

## ARP Poisoning (Man-in-the-Middle)
# Similar to DHCP poisoning, ARP poisoning involves an attacker manipulating target's ARP tables so traffic is sent ot the attacker.
# To do this, the attacker can send gratuitous ARP messages using another device's IP address.
# Other devices in the network will receive the GARP and update their ARP tables, causing them to send traffic to the attacker instaed of the legitimate destination.

## Dynamic ARP Inspection Operations
# DAI inspects the sender MAC and sender IP fields of ARP messages received on untrusted ports and checks that there is a matching entry in the DHCP snooping binding table.
# If there is a matching entry, the ARP message is forwarded normally.
# If there isn't a matching entry, the ARP message is discarded.
# DAI doesn't inspect messages received on trusted ports. They are forwarded as normal.
# ARP ACLs can be manually configured to map IP address / MAC addresses for DAI to check.
# Useful for hosts that don't use DHCP.
# DAI can be configured to perform more in-depth checks also, but these are optional.
# like DHCP snooping, DAI also supports rate-limiting to prevent attackes from overwhelming the switch with ARP messages.
# DHCP snooping and DAi both require work from the switch's CPU.
# Even if the attacker's messages are blocked, they can overload the switch CPU with ARP messages.

## DAI Configuration
# SW1
ip arp inspection vlan 1
int r g0/0-1
ip arp inspection trust

# DHCP snooping requires two commands to enable it:
ip dhcp snooping
ip dhcp snooping vlan [vlan-number]
# DAI only requires one:
ip arp inspection vlan [vlan-number]

show ip arp inspection interfaces

# DAI rate limiting is enabled on untrusted ports by default with a rate of 15 packets per second.
# It is disabled on trusted ports by default.
# DHCP snooping rate limiting is disabled on all interfaces by default.
# DHCP snooping rate limiting is configured like this: [x packets per second]
# The DAI burst interval allows you to configure rate limiting like this: [x packets per y seconds]

## DAI Rate Limiting Configuration
# SW1
int r g0/1-2
ip arp inspection limit rate 25 burst interval 2
# The burst interval is optional. If you don't specify it, the default is 1 second.
int r g0/3
ip arp inspection limit rate 10
# If ARP messages are received faster than the specified rate, the interface will be err-disabled.
# It can be re-enabled in two ways:
# 1. [shutdown] and [no shutdown]
# 2. [errdisable recovery cause arp-inspection]

show ip arp inspection interfaces

## DAI Optional Checks
ip arp inspection validate [dst-mac]
ip arp inspection validate [ip]
ip arp inspection validate [src-mac]

# dst-mac: Enables validation of the destination MAC address in the Ethernet header agains the target MAC address in the ARP body for ARP responses. The device classifies packets with different MAC addresses as invalid and drops them.
# ip: Enables validation of the ARP body for invalid and unexpected IP addresses. Addresses include 0.0.0.0, 255.255.255.255, and all IP multicast addresses.
# The device checks the sender IP addresses in all ARP requests and responses and checks the target IP addresses only in ARP responses.
# src-mac: Enables validation of the source MAC address in the Ethernet header against the sender MAC address in the ARP body for ARP requests and responses.
# The devices classifies packets with different MAC addresses as invalid and drops them.

show run | include validate

# You must enter all of the validation checks you want in a single command. Specify one, two, or all three. The order isn't significant.
ip arp inspection validate src-mac dst-mac ip

## ARP ACLs
arp access-list ARP-ACL-1
permit ip host 192.168.1.100 mac host 0c29.2f1e.7700
exit
# Apply the ACL
ip arp inspection filter ARP-ACL-1 vlan 1
# The IP is forwarded even though there is no entry in the DHCP snooping binding table.

show ip arp inspection

## Free CCNA | Dynamic ARP Inspection | Day 51 Lab | CCNA 200-301 Complete Course
# R1
conf t
ip dhcp excluded-address 192.168.1.1 192.168.1.9
ip dhcp pool POOL1
network 192.168.1.0. 255.255.255.0
default-router 192.168.1.1

# SW1
conf t
# Enables command globally
ip dhcp snooping
# Also needs to be enabled per VLAN
ip dhcp snooping vlan 1
no ip dhcp snooping information option
int g0/2
ip dhcp snooping trust
exit
ip arp inspection vlan 1
ip arp inspection validate dst-mac ip src-mac
int r g0/1-2
ip arp inspection trust
end

# SW2
conf t
ip dhcp snooping
ip dhcp snooping vlan 1
no ip dhcp snooping information option
int g0/1
ip dhcp snooping trust
exit
ip arp inspection vlan 1
ip arp inspection validate dst-mac ip src-mac
int g0/1
ip arp inspection trust
end

show run
show ip arp inspection interfaces


### WAN Architectures

# WAN stands for Wide Area Network. A WAN is a network that extends over a large geographic area.
# WANs are used to connect geographically separate LANs.
# Although the Internet itself can be considered a WAN, the term WAN is typically used to refer to an enterprise's private connections that connect their offices, data centres, and other sites together.
# Over public / shared networks like the Internet, Virtual Private Networks (VPNs) can be used to create private WAN connections.
# There have been many different WAN technologies over the years. Depending on the location, some will be available and some will not be.
# Technologies which are considered legacy (old) in one country might still be used in other countries.

## Multi Protocol Label Switching (MPLS)
# Similar to the Internet, service provider's MPLS networks are shared infrastucture because many customer enterprises connect to and share the same infrastucture to make WAN connections.
# However, the label switching in the name of MPLS allows VPNs to be created over the MPLS infrastucture through the use of labels.
# Some important terms:
# CE router = Customer Edge router
# PE router = Provider Edge router
# P router = Provider core router
# When the PE routers receive frames from the CE routers, they add a label to the frame.
# These labels are used to make forwarding decisions within the service provider network, not the destination IP.

## Layer 3 MPLS VPN
# The CE routers do not use MPLS, it is only used by the PE/P routers.
# When using a Layer 3 MPLS VPN, the CE and PE routers peer using OSPF, for example, to share routing information.

## Layer 2 MPLS VPN
# When using a Layer 2 MPLS VPN, the CE and PE routers do not form peerings.
# The service provider network is entirely transparent to the CE routers.
# In effect, it is like the two CE routers are directly connected.
# If a routing protocol is used, the two CE routers will peer directly with each other.

# Many different technologies can be used to connect to a service provider's MPLS network for WAN service.
# Ethernet (Fiber)
# LTE (4G/5G)
# CATV (Cable TV)
# Serial

## Internet Connections
# There are countless ways for an enterprise to connect to the Internet.
# For example, private WAN technologies such as leased lines and MPLS VPNs can be used to connect to a service provider's Internet infrastucture.
# In addition, technologies such as CATV and DSL commonly used by consumers (home Internet access) can also be used by an Enterprise.
# These days, for both enterprise and consumer Internet access, fibre optic Ethernet connections are growing in popularity due to the high speeds they provide over long distances.

## Digital Subscriber Line (DSL)
# DSL provides Internet connectivity to customers over phone lines, and can share the same phone line that is already installed in most homes.
# A DSL modem (modulator-demodulator) is required to convert data into a format suitable to be sent over the phone lines.
# The modem might be a separate device, or it might be incorporated into the home router.

## Cable Internet
# Cable Internet provides Internet access via the same CATV (Cable Television) lines used for TV service.
# Like DSL, a cable modem is required to convert data into a format suitable to be sent over the CATV cables.
# Like a DSL modem, this can be a separate device or built into the home router.

## Redundant Internet Connections
# Single Homed = 1 connection to 1 ISP
# Dual Homed = 2 connections to 1 ISP
# Multihomed = 1 connection to each of 2 ISPs
# Dual Multihomed = 2 connections to each of 2 ISPs

## Internet VPNs
# Private WAN services such as leased lines and MPLS provide security because each customer's traffic is separated by using dedicated physical connections (leased line) or by MPLS tags.
# When using the Internet as a WAN to connect sites together, there is no built-in security by default.
# To provide secure communications over the Internet, VPNs are used.
# Two kinds of Internet VPNs:
# 1) Site-to-Site VPNs using IPSec
# 2) Remote-access VPNs using TLS

## Site-to-Site VPNs (IPsec)
# A site-to-site VPN is a VPN between two devices and is used to connect two sites together over the Internet.
# A VPN tunnel is created between the two devices by encapsulating the original IP packet with a VPN header and a new IP header.
# When using IPsec, the original packet is encrypted before being encapsulated with the new header.

# Example:
# A PC at office A wants to send traffic to the PC at office B over an IPsec VPN tunnel, so it first sends the unencrypted data to its default gateway, the router.
# The router encrypts the data, and adds a VPN header and new IP header.
# Then the encrypted data in the new packet is sent over the Internet to the other end of the tunnel.
# The receiving router decrypts the data, and sends it to the destination PC.
# That is a very basic overview of how IPsec VPNs work.

# Summarise the process:
# 1) The sending device combines the original packet and session key (encryption key) and runs them through an encryption formula.
# 2) The sending device encapsulates the encrypted packet with a VPN header and a new IP header.
# 3) The sending device sends the new packet to the device on the other side of the tunnel.
# 4) The receiving device decrypts the data to get the original packet, and then forwards the original packet to its destination.
# In a site-to-site VPN, a tunnel is formed only between two tunnel endpoints (for example, the two rotuers conencted to the Internet).
# All other devices in each site don't need to create a VPN for themselves. They can send unencrypted data to their site's router, which will encrypt it and forward it in the tunnel as described above.

# There are some limitations to standard IPsec:
# 1) IPsec does not support broadcase and multicast traffic, only unicast. This means that routing protocols such as OSPF cannot be used over the tunnels, because they rely on multicast traffic.
# This can be solved with 'GRE over IPsec'.
# 2) Configuring a full mesh of tunnels between many sites is a labor-intensive task.
# This can be solved with Cisco's DMVPN.

## Generic Routing Encapsulation (GRE) over IPsec
# GRE creates tunnels like IPsec, however it does not encrypt the original packet, so it is not secure.
# However, it has the advantage of being able to encapsulate a wide variety of Layer 3 protocols as well as broadcase and multicast messages.
# To get the flexibility of GRE with the security of IPsec, GRE over IPsec can be used.
# The original packet will be encapsulated by a GRE header and a new IP header, and then the GRE packet will be encrypted and encapsulated within an IPsec VPN header and new IP header.

# | Encrypted { | IP Packet | GRE Header | IP Header | } | IPsec VPN Header | IP Header |

## Dynamic Multipoint VPN (DMVPN)
# DMVPN is a Cisco-developed solution that allows routers to dynamically create a full mesh of IPsec tunnels without having to manually configure every single tunnel.
# 1) Configure IPsec tunnels to a hub site.
# 2) The hub router gives each router information about how to form an IPsec tunnel with the other routers.
# DMVPN provides the configuration simplicity of hub-and-spoke (each spoke router only needs one tunnel configured) and the efficiency of direct spoke-to-spoke communication (spoke routers can communicate directly without traffic passing through the hub).

## Remote-access VPNs
# Whereas site-to-site VPNs are used to make a point-to-point connection between two sites over the Internet, remote-access VPNs are used to allow end devices (PCs, mobile phones) to access the company's internal resources securely over the Internet.
# Remote-access VPNs typically use TLS (Transport Layer Security).
# TLS is also what provides security for HTTPS (HTTP Secure)
# TLS was formerly known as SSL (Secure Sockets Layer) and developed by Netscape, but it was renamed to TLS when it was standardised by the IETF.
# VPN client software (for example Cisco AnyConnect) is installed on end devices (for example company-provided laptops that employees use to work from home).
# These end devices then form secure tunnels to one of the company's routers / firewalls acting as a TLS server.
# This allows the end users to securely access resources on the company's internal network without being directly connected to the company network.

## Site-to-Site vs Remote-Access VPN
# Site-to-Site VPNs typically use IPsec.
# Remote-Access VPNs typically use TLS.

# Site-to-Site VPNs provide service to many devices within the sites they are connecting.
# One IPsec tunnel between two routers or firewalls provides traffic security for all hosts within the sites they are connecting.
# Remote-Access VPNs provide service to the one end device the VPN client software is installed on.
# Instead of connecting two sites together, they connect one end device to a site.

# Site-to-Site VPNs are typically used to permanently connect two sites over the Internet.
# Remote-Access VPNs are typically used to provide on-demand access for end devices that want to securely access comapny resources while connected to a network which is not secure.


## Free CCNA | GRE Tunnels | Day 53 Lab | CCNA 200-301 Complete Course

# Topology:
# | R1 |-| SPR1 |-| SPR2 |-| R2 |

# R1
conf t
# Create a virtual tunnel interface
int tunnel 0
# Specify which physical interface on R1 will be used for the tunnel
tunnel source g0/0/0 # preferable remote IP address
# Destination is R2 WAN interface IP
tunnel destination 200.0.0.2
# The tunnel interface itself needs an IP address
ip address 192.168.1.1 255.255.255.252
# Configure a default route to R2
ip route 0.0.0.0 0.0.0.0 100.0.0.1
# Enable OSPF so hosts can communicate between branches
router ospf 1
network 192.168.1.1 0.0.0.0 area 0
network 10.0.1.1 0.0.0.0 area 0
passive-interface g0/0

# R2
conf t
# Create a virtual tunnel interface
int tunnel 0
# Specify which physical interface on R2 will be used for the tunnel
tunnel source g0/0/0 # preferable remote IP address
# Destination is R1 WAN interface IP
tunnel destination 100.0.0.2
# The tunnel interface itself needs an IP address
ip address 192.168.1.2 255.255.255.252
# R2 does not know how to reach the IP address we specified as the tunnel destination 100.0.0.2
# If R2 does not know how to get to 100.0.0.2, it cannot build a GRE tunnel to 100.0.0.2.
# Configure a default route to R1
ip route 0.0.0.0 0.0.0.0 200.0.0.1
# Enable OSPF so hosts can communicate between branches
router ospf 1
network 192.168.1.2 0.0.0.0 area 0
network 10.0.2.1 0.0.0.0 area 0
passive-interface g0/0

do show ip int brief
do show ip route


### Virtualization & Cloud

## Server Hardware
# Although Cisco is more know for their networking devices (routers, switches, firewalls), they also offer hardware servers such as UCS (Unified Computing System).
# The largest vendors of hardware servers include Dell EMC, HPE, and IBM.

## Servers before Virtualization
# Before virtualization, there was a one-to-one relationship between a physical server and an operating system.
# In that operating system, apps providing services such as a web server, email server, etc. would run.
# One physical server would be used for the web server, one for the email server, one for the database server, etc.
# This is inefficient for multiple reasons:
# Each physical server is expensive and takes up space, power, etc.
# The resources on each physical server (CPU, RAM, Storage, NIC) are typically under-used.

## Virtualization (Type 1 Hypervisor)
# Virtualization allows us to break the one-to-one relationship of hardware to OS, allowing multiple OS's to run on a single physical server.
# Each instance is called a VM (Virtual Machine).
# A hypervisor is used to manage and allocate the hardware resources (CPU, RAM, etc) to each VM.
# Another name for a hypervisor is VMM (Virtual Machine Monitor).
# The type of hypervisor which runs directly on top of the hardware is called a Type 1 hypervisor.
# Examples inclide VMware ESXi, Microsoft Hyper-V, etc.
# Type 1 hypervisors are also called bare-metal hypervisors because they run directly on the hardware (metal).
# Another term is native hypervisor.

## Virtualization (Type 2 Hypervisor)
# Type 2 hypervisors run as a program on an OS like a regular computer program.
# Examples include VMware Workstation, Oracle VirtualBox, etc.
# The OS running directly on the hardware is called the Host OS, and the OS running in a VM is called a Guest OS.
# Another name for a Type 2 hypervisor is hosted hypervisor.
# Although Type 2 hypervisors are rarely used in data centre environments, they are common on personal-use devices (for example, if a Mac/Linux user needs to run an app that is only supported on Windows, or vice versa).

## Why Virtualization
# Partitioning:
# - Run multiple operating systems on one physical machine. 
# - Divide system resources between virtual machines.
# Isolation: 
# - Provide fault and security isolation at the hardware level. 
# - Preserve performance with advanced resource controls.
# Encapsulation:
# - Save the entire state of a virtual machine to files.
# - Move and copy virtual machines as easily as moving and copying files.
# Hardware Independence:
# - Provision or migrate any virtual machine to any physical server.

## Connecting VMs to the Network
# VMs are connected to each other and the external network via a virtual switch running on the hypervisor.
# Just like a regular physical switch, the vSwitch's interfaces can operate as access or trunk ports and use VLANs to separate the VMs at Layer 2.
# Interfaces on the vSwitch connect to the physical NIC (or NICs) of the server to communicate with the external network.

## Cloud Services
# Traditional IT infrastucture deployments were some combination of the following:
# On-Premises
# - All servers, network devices, and other infrastucture are located on company property.
# - All equipment is purchased and owned bt the company using it.
# - The company is responsible for the necessary space, power, and cooling.
# Colocation
# - Data centres that rent out space for customers to put their infrastucture (servers, network devices).
# - The data centre provides the space, electricity, and cooling.
# - The servers, network devices, etc are still the responsibility of the end customer, although they are not located on the customer's premises.

# Cloud services provide an alternative that is hugely popular, and it continuing to grow.
# Most people associate cloud with public cloud providers such as AWS.
# Although this is the most common use of cloud services, it is not the only one.

## The Five Essential Characteristics of Cloud
# On-demand self-service
# - The customer is able to use the service (or stop using the service) freely (via a web portal) without direct communication to the service provider.
# Broad network access
# - The service is available through standard network connections (ie. the Internet or provate WAN connections), and can be accessed through many kinds of devices.
# Resource pooling
# - A pool of resources is provided by the service provider, and when a customer requests a service (for example creates a new VM), the resources to fulfill that request are allocated from the shared pool.
# Rapid elasticity
# - Customers can quickly expand the services they use in the cloud (for example, add new VMs, expand storage, etc) from a pool of resources that appreas to be infinite. Likewise, they can quickly reduce their services when not needed.
# Measured service
# - The cloud service provider measures the customer's usage of cloud resources, and the customer can measure their own use as well. Customers are charged based on usage (for example, X dollars per gigabyte of storage per day).

## The Three Service Models of Cloud
# In cloud computing, everything is provided on a service model.
# For example, rather than the end user buying a physical server, mounting it on a rack, installing the hypervisor, creating the VMs, etc, the service provider offers all of this as a service.
# There are a variety of services referred to as 'Something' as a Service.
# The three service models of cloud computing are:
# - Software as a Service (SaaS) ie. Microsoft Office 365
# - Platform as a Service (PaaS) ie. AWS Lambda and Google App Engine
# - Infrastucture as a Service (IaaS) ie. Amazon EC2 and Google Compute Engine

## The Four Deployment Models of Cloud
# Private cloud
# - Generally only used by large enterprises.
# - Although the cloud is private, it may be owned by a third party.
# - Private clouds may be on or off premises.
# - The same kinds of services offered are the same as in public clouds (SaaS, PaaS, Iaas)
# Community cloud
# - This is the least common cloud deployment.
# - Similar to private cloud, but the infrastucture is reserved for use by only a specific group of organisations.
# Public cloud
# - This is the most common cloud deployment.
# - Popular public cloud service providers include: AWS, Microsoft Azure, GCP, OCI, IBM Cloud, Alibaba Cloud
# Hybrid cloud
# - This is basically any combination of the previous three deployment types.
# - For example, a private cloud which can offload to a public cloud when necessary.

## Benefits of Cloud Computing
# Cost
# - CapEx (Capital Expenses) of buying hardware and software, setting up data centres etc. are reduced or eliminated.
# Global Scale
# - Cloud services can scale globally at a rapid pace. Services can be set up and offered to customers from a geographic location close to them.
# Speed/Agility
# - Services are provided on demand, and vast amounts of resources can be provisioned within minutes.
# Productivity
# - Cloud services remove the need for many time-consuming tasks such as procuring physical servers, racking them, cabling, installing and updating operating systems, etc.
# Reliability
# - Backups in the cloud are very easy to perform. Data can be mirrored at multiple sites in different geographic locations to support disaster recovery.

## Connecting to Cloud resources
# 1) Private WAN Service Provider
# 2) Connect via the Internet which is cheap and flexible, but not as secure as a private VPN
# 3) IPsec VPN Tunnel (redundant connections are preferable)


### Wireless Fundamentals

# Wireless networks have some issues that we need to deal with.

# 1) All devices within range receive all frames, like devices connected to an Ethernet hub.
# - Privacy of data within the LAN is a greater concern.
# - CSMA/CA (Carrier Sense Multiple Access with Collision Avoidance) is used to facilitate half-duplex communications.
# CSMA/CD is used in wired networks to detect and recover from collisions.
# CSMA/CA is used in wireless networks to avoid collisions.
# When using CSMA/CA, a device will wait for other devices to stop transmitting before it transmits data itself.

# 2) Wireless communications are regulated by various international and national bodies.

# 3) Wireless signal coverage area must be considered
# - Signal range.
# - Signal absorbtion, reflection, refraction, diffraction, and scattering.

# Absorbtion happens when a wireless signal passes through a material and is converted into heat, weakening the original signal.
# Reflection happens when a signal bounces off of a material, for example metal.
# - This is why Wi-Fi reception is usually poor in elevators. The signal bounces off the metal and very little penetrates into the elevator.
# Refraction happens when a wave is bent when entering a medium where the signal travels at a different speed.
# - For example, glass and water can refract waves.
# Diffraction happens when a wave encounters an obstacle and travels around it.
# - This can result in blind spots behind the obstacle.
# Scattering happens when a material causes a signal to scatter in all directions.
# - Dust, smog, uneven surfaces, etc. can cause scattering.

# 4) Other devices using the same channels can cause interference.
# - For example, a wireless LAN in your neighbour's house.

## Radio Frequency
# To send wireless signals, the sender applies an alternating current to an antenna.
# - This creates electromagnetic fields which propagate out as waves.
# Electromagnetic waves can be measured in multiple ways for example amplitude and frequency.
# Amplitude is the maximum strength of the electric and magnetic fields.

# Frequency measures the number of up/down cycles per a given unit of time.
# The most common measurement of frequency is hertz.

## Radio Frequency Bands
Wi-Fi uses two main bands (frequency ranges)
# - 2.4 GHz band that typically provides further reach in open space and better penetration of obstacles such as walls.
# More devices tend to use the 2.4 GHz band so interference can be a bigger problem compared to the 5 GHz band.
# - 5 GHz band

## Channels
# Each band is divided up into multiple channels.
# Devices are configured to transmit and receive traffic on one (or more) of these channels.
# The 2.4 GHz band is divided into several channels, each with a 22 MHz range.
# In a small wireless LAN with only a single AP, you can use any channel.
# However, in larger WLANs with multiple APs, it is important that adjacent APs don't use overlapping channels.
# This helps avoid interference.
# In the 2.4 GHz band, it is recommended to use channels 1, 6, and 11.
# Outside of North America you could use other combinations.
# The 5 GHz band consist of non-overlapping channels, so it is much easier to avoid interference between adjacent APs.

# Using channels 1, 6, and 11, you can place APs in a honeycomb pattern to provide complete coverage of an area without interference between channels.

## 802.11 Standards

# | Standard | Frequencies | Max Data Rate | Alternate Name |
# | 802.11 | 2.4 GHz | 2 Mbps | |
# | 802.11b | 2.4 GHz | 11 Mbps | |
# | 802.11a | 5 GHz | 54 Mbps | |
# | 802.11g | 2.4 GHz | 54 Mbps | |
# | 802.11n | 2.4 / 5 GHz | 600 Mbps | Wi-Fi 4 |
# | 802.11ac | 5 GHz | 6.93 Gbps | Wi-Fi 5 |
# | 802.11ax | 2.4 / 5 / 6 GHz | 4*802.11ac | Wi-Fi 6 |

## Service Sets (SSID)
# 802.11 devines different kinds of service sets which are groups of wireless network devices.
# There are three main types:
# - Independent
# - Infrastructure
# - Mesh
# All devices in a service set share the same SSID (Service Set Identifier)
# The SSID is a human-readable name which identifies the service set.
# The SSID does not have to be unique.

# Independent Basic Service Set (IBSS)
# It is a wireless network in which two or more wireless devices connect directly without using an AP.
# Also called ad hoc network.
# Can be used for file transfers.
# Not scalable beyond a few devices.

# Basic Service Set (BSS)
# A BSS is a kind of Infrastucture Service Set in which clients connect to each other via an Ap, but not directly to each other.
# A BSSID is used to uniquely identify the AP.
# Other APs can use the same SSID, but not the same BSSID.
# The BSSID is the MAC address of the AP's radio.
# Wireless devices request to assiciate with the BSS.
# Wireless devices that have associated with the BSS are called clients or stations.
# The area around an AP where its signal is usable is called a BSA (Basic Service Area).
# Clients must communicate via the AP, not directly with each other.

# Extended Service Set (ESS)
# To create larget wireless LANs beyond the range of a single AP, we use an ESS.
# APs with their own BSSs are connected by a wired network.
# - Each BSS uses the same SSID, has a unique BSSID, uses a different channel to avoid interference.
# Clients can pass between APs without having to reconnect, providing a seamless Wi-Fi experience when moving between APs.
# This is called roaming.
# The BSAs should overlap bout 10-15%.

# Mesh Basic Service Set (MBSS)
# An MBSS can be used in situations where it's difficult to run an Ethernet connection to every AP.
# Mesh APs use two radios: one to provide a BSS to wireless clients, and one to form a backhaul network which is used to bridge traffic from AP to AP.
# At least one AP is connected to the wired network, and it is called the Root Access Point (RAP).
# The other APs are called Mesh Access Points (MAPs).
# A protocol is used to determine the best path through the mesh (similar to how dynamic routing protocols are used to determine the best path to a destination).

## Distribution System
# Most wireless network aren't standalone networks.
# Rather they are a way for wireless clients to connect to the wired network infrasturcture.
# In 802.11, the upstream wired network is called the DS (Distribution System).
# Each wireless BSS or ESS is mapped to a VLAN in the wired network.
# It is possible for an AP to provide multiple wireless LANs, each with a unique SSID.
# Each WLAN is mapped to a separate VLAN and connected to the wired network via a trunk.
# Each WLAN uses a unique BSSID, usually by incrementing the last digit of the BSSID by one.

## Additional AP Operational Modes
# APs can operate in additional modes.
# An AP in repeater mode can be used to extend the range of a BSS.
# The repeater will simply retransmit any signal it receives from the AP.
# A repeater with a single radio must operate on the same channel as the AP, but this can drastically reduce the overall througput on the channel.
# A repeater with two radios can receive on one channel, and then retransmit on another channel.

# A Workgroup Bridge (WGB) operates as a wireless client of another AP, and can be used to connect wired devices to the wireless network.
# There are two kinds of WGBs:
# - Universal WGB (uWGB) is an 802.11 standard that allows one device to be bridged to the wireless network.
# - WGB is a Cisco-proprietary version of the 802.11 standard that allows multiple wired clients to be bridged to the wireless network.

# An outdoor bridge can be used to connect networks over long distances without a physical cable connecting them.
# The APs will use specialised antennas that focus most of the signal power in one direction, which allows the wireless connection to be made over longer distances than normally possible.
# The connection can be point-to-point as in the diagram below, or point-to-multipoint in which multiple sites connect to one central site.


### Wireless Architectures

## 802.11 Frame Format
# 802.11 frames have a different format than 802.3 Ethenet frames.
# Depending on the 802.11 version and the message type, some of the fields might not be present in the frame.
# For example, not all messages use all 4 address fields.

# Frame Control: Provides information such as the message type and subtype.

# Duration / ID: Depending on the message type, this field can indicate:
# - The time the channel will be dedicated for transmission of the frame
# - The identifier for the association (connection).

# Addresses: Up to four addresses can be present in an 802.11 frame. Which addresses are present, and their order, depends on the message type.
# - Destination Address (DA): Final recipient of the frame
# - Source Address (SA): Original sender of the frame
# - Receiver Address (RA): Immediate recipient of the frame
# - Transmitter Address (TA): Immediate sender of the frame

# Sequence Control: Used to reassemble fragments and elimiate duplicate frames.

# QoS Control: Used in QoS to prioritise certain traffic.

# HT (Hight Throughput) Control: Added in 802.11n to enable High Throughput operations.
# - 802.11n is also known as High Throughput (HT) Wi-Fi
# - 802.11ac is also know as Very High Throughput (VTH) Wi-Fi

# FCS (Frame Check Sequence): Same as in an Ethernet frame, used to check for errors.

## 802.11 Association Process
# Access Points bridge traffic between wireless stations and other devices.
# For a station to send traffic through the AP, it must be associated with the AP.
# There are three 802.11 connection states:
# - Not authenticated, not associated
# - Authenticated, not associated
# - Authenticated and assiciated
# The station must be authenticated and assiciated with the AP to send traffic through it.

# There are two ways a station can scan for a BSS:
# - Active scanning: The station send probe requests and listens for a probe response from an AP.
# - Passive scanning: The station listens for beacon messages from an AP.
# Beacon messages are sent periodically by APs to advertise the BSS.

# There are three 802.11 message types:
# Management: used to manage the BSS.
# - Beacon
# - Probe request, probe response
# - Authentication
# - Association request, association response
# Control: used to control access to the medium (radio frequency). Assists with delivery of management and data frames.
# - RTS (Request to Send)
# - CTS (Clear to Send)
# - ACK
# Data: used to send actual data packets.

## Autonomus APs
# There are three main wireless AP deployment methods:
# - Autonomus
# - Lightweight
# - Cloud-based

# Autonomus APs are self contained systems that do not rely on a WLC and are configured individually.
# - Can be configured by console cable (CLI), telnet / SSH (CLI), or HTTP / HTTPS web connection (GUI).
# - An IP address for remote management should be configured
# - The RF parameters must be manually configured (trasmit power, channel, etc)
# - Security policies are handled individually by each AP.
# - QoS rules etc. are configured individually on each AP.
# There is no central monitoring or management of APs.

# Autonomus APs connect to the wired network with a trunk link.
# Data traffic from wireless clients has a very direct path to the wired network or to other wireless clients associated with the same AP.
# Each VLAN has to stretch across the entire network. This is considered bad practice.
# - Large broadcast domains
# - Spanning tree will disable links
# - Adding/deleting VLANs is very labour-intensive
# Autonomus APs can be used in small networks, but they are not viable in medium to large networks.
# Large networks can have thousands of APs.
# Autonomus APs can also function in the modes: Repeater, Outdoor Bridge, Workgroup Bridge.

## Lightweight APs
# The functions of an AP can be split between the AP and a Wireless LAN Controller (WLC).
# Lightweight APs handle real-time operations like transmitting/receiving RF traffic, encryption/decryption of traffic, sending out beacons/probes, etc.
# Other functions are carried out by a WLC, for example RF management, securit/QoS management, client authentication, client assiciation/roaming management, etc.
# This is called split-MAC architecture.
# The WLC is also used to centrally configure the lightweight APs.
# The WLC can be located in the same subnet/VLAN as the lightweight APs it manages, or in a different subnet/VLAN.
# The WLC and the lightweight APs authenticate each other using digital certificates installed on each device (X.509 standard certificates).
# This ensures that only authorised Aps can join the network.

# The WLC and lightweight APs use a protocol called CAPWAP (Control And Provisioning of Wireless Access Points) to communicate.
# Based on an older protocol called LWAPP (Lightweight Access Point Protocol).
# Two tunnels are created between each AP and the WLC:
# - Control tunnel (UDP port 5246). This tunnel is used to configure the APs, and control/manage the operations. All traffic in this tunnel is encrypted by default.
# - Data tunnel (UDP port 5247). All traffic from wireless clients is sent through this tunnel to the WLC. It does not got directly to the wired network.
# Traffic in this tunnel is not encrypted by default, but you can configure it to be encrypted with DTLS (Datagram Transport Layer Security).
# Because all traffic from wireless cleints is tunneled to the WLC with CAPWAP, APs connect to switch access ports, not trunk ports.

# There are some key benefits to split-MAC architecture:
# - Scalability: With a WLC (or multiple in very large networks) it is much simpler to build and support a network with thousands of APs.
# - Dynamic channel assignment: The WLC can automatically select which channel each AP should use.
# - Transmit power optimisation: The WLC can automatically set the appropriate transmit power for each AP.
# - Self-healing wireless coverage: When an AP stops functioning, the WLC can increase the transmit power of nearby APs to avoid coverage holes.
# - Seamless roaming: Clients can roam between APs with no noticable delay.
# - Client load balancing: If a client is in range of two APs, the WLC can associate the client with the least-used AP, to balance the load among APs.
# - Security/QoS management: Central management of security and QoS policies ensures consistency across the network.

# Lightweight APs can be configured to operate in various modes:
# - Local: This is the default mode where the AP offers a BSS (more multiple BSSs) for clients to associate with.
# - FlexConnect: Like a lightweight AP in Local mode, it offers one or more BSSs for clients to associate with.
# However, FlexConnect allows the AP to locally switch traffic between the wired and wireless networks if the tunnels to the WLC go down.
# - Sniffer: The AP does not offer a BSS for clients. It is dedicated to capturing 802.11 frames and sending them to a device running software such as Wireshark.
# - Monitor: The AP does not offer a BSS for clients. It is dedicated to receiving 802.11 frames to detect rouge devices. If a client is found to be a rouge device, an AP can send de-authentication messages to disassociate the rogue device from the AP.
# - Rogue Detector: The Ap does not even use its radio. It listens to traffic on the wired network only, but it receives a list of suspected rogue clients and AP MAC addresses from the WLC. By listening to ARP messages on the wired network and correlating it with the information it receives from the WLC, it can detect rogue devices.
# - SE-Connect (Spectrum Expert Connect): The AP does not offer a BSS for clients. It is dedicated to RF spectrum analysis on all channels. It can send information to softawre such as Cisco Spectrum Expert on a PC to collect and analyse the data.
# - Bridge/Mesh: Like the autonomus APs Outdoor Bridge mode, the lightweight AP can be a dedicated bridge between sites, even over long distances. A mesh can be made between the access points.
# - Flex plus Bridge: Adds FlexConnect functionality to the Bridge/Mesh mode. Allows wireless access points to locally forward traffic even if connectivity to the WLC is lost.

## Cloud-based APs
# The architecture is in between autonomus Ap and split-MAC architecture.
# - Autonomus APs that are centrally managed in the cloud.
# Cisco Meraki is a popular cloud-based Wi-Fi solution.
# The Meraki dashboard can be used to configure APs, monitor the network, generate performance reports, etc.
# - Meraki Also tells each AP which channel to use, what transmit power, etc.
# However, data traffic is not sent to the cloud. It is sent directly to the wired network like when using autonomus APs.
# - Only management/control traffic is sent to the cloud.

## WLC Deployments
# In a split-MAC architecture, there are four main WLC deployment models:
# - Unified: The WLC is a hardware appliance in a central location of the network.
# A unified WLC can support up to about 6000 APs. If more than 6000 Aps are needed, additional WLCs can be added to the network.
# - Cloud-based: The WLC is a VM running on a server, usually in a provate cloud in a data centre.
# Cloud-based WLCs can typically support up to about 3000 APs. If more than 3000 APs are needed, more WLC VMs can be deployed.
# This is not the same as the cloud-based Ap architecture discussed previously.
# - Embedded: The WLC is integrated within a switch.
# An embedded WLC can support up to about 200 APs. If more than 200 APs are needed, more switches with embedded WLCs can be added. Suitable for smaller campuses.
# - Mobility Express: The WLC is integrated within an AP.
# The Cisco Mobility Express places the WLC within an AP. 
# The AP containing the WLC builds internal CAPWAP tunnels to it, and the other APs do too.
# A mobility express WLC can support up to about 100 APs, and you will have to add more APs with embedded mobility express WLCs.
# This deployment is suitable for a small branch office.


### Wireless Security

# Although security is important in all networks, it is even more essential in wireless networks.
# Because wireless signals are not contained within a wire, any device within range of the signal can receive the traffic.
# In wired networks, traffic is often only encrypted when sent over an untrusted network such as the Internet.
# In wireless networks, it is very important to encrypt traffic sent between the wireless clients and the AP.

## Authentication
# All clients must be authenticated before they can associate with an AP.
# In a corporate setting, only trusted users/devices should be given access to the network.
# - In a corporate settings, a separate SSID which does not have access to the corporate network can be provided for guest users.
# Ideally, clients should also authenticate the AP to avoid associating with a malicious AP.
# There are multiple ways to authenticate:
# - Password
# - Username/password
# - Certificates

## Encryption
# Traffic sent between clients and APs should be encrypted so that it cannot be read by anyone except the AP and the client.
# There are many possible protocols that can be used to encrypt traffic.
# All devices on the WLAN will use the same protocol, however each client will use a unique encryption/decryption key so that other devices cannot read its traffic.
# A group key is used by the AP to encrypt traffic that it wants to send to all of its clients.
# All of the clients associated with the AP keep that key so they can decrypt the traffic.

## Integrity
# Integrity ensures that a message is not modified by a third-party.
# The message that is sent by the soruce host should be the same as the message that is received by the destination host.
# A MIC (Message Integrity Check) is added to messages to help protect their integrity.

## Authentication Methods
# The original 802.11 standard included two options for authentication:

# Open Authentication
# - The client sends an authentication request, and the AP accepts it. No questions asked.
# - This is clearly not a secure authentication method.
# - After the client is authenticated and associated with the AP, it is possible to require the user to authenticate via other methods before access to the network is granted (ie. Starbuck's WiFi).

# WEP (Wired Equivalent Privacy)
# - WEP is used to provide both authentication and encryption of wireless traffic.
# - For encryption, WEP uses the RC4 algorithm.
# - WEP is a shared-key protocol, requiring the sender and receiver to have the same key.
# - WEP keys can be 40 bits or 104 bits in length.
# - The above keys are combined with a 24-bit IV (Initalisation Vector) to bring the total length to 64 bits or 128 bits.
# - WEP encryption is not secure and can easily be cracked.
# - WEP can be used for authentication like this:
# 1) AP sends challenge phrase
# 2) Client encrypts challenge phrase using WEP key and sends it back
# 3) AP compares client's encrypted challenge phrase with AP's encrypted challenge phrase

# EAP (Extensible Authentication Protocol)
# - EAP is an authentication framework.
# - It defines a standard set of authentication functions that are used by the various EAP Methods.
# - EAP is integrated with 802.1X, which provides port-based network access control.
# 802.1x is used to limit network access for clients connected to a LAN or WLAN until they authenticate.
# There are three main entities in 802.1x:
# - Supplicant: The device that wants to connect to the network.
# - Authenticator: The device that provides access to the network.
# - Authentication Server (AS): The device that receives client credentials and permits/denies access.

# LEAP (Lightweight EAP)
# - LEAP was developed by Cisco as an improvement over WEP.
# - Clients must provide a username and password to authenticate.
# - In addition, mutual authentication is provided by both the client and server sending a challenge phrase to each other.

# EAP-FAST (EAP Flexible Authentication via Secure Tunneling)
# - EAP-FAST was also developed by Cisco.
# - Consists of three phrases:
# 1) A PAC (Protected Access Credential) is generated and passed from the server to the client.
# 2) A secure TLS tunnel is established between the client and authentication server.
# 3) Inside of the secure (encrypted) TLS tunnel, the client and server communicate further to authenticate/authorise the client.

# PEAP (Protected EAP)
# - Like EAP-FAST, PEAP involves establishing a secure TLS tunnel between the client and server.
# - Instead of a PAC, the server has a digital certificate.
# - The client uses this digital certificate to authenticate the server.
# - The certificate is also used to establish a TLS tunnel.
# - Because only the server provides a certificate for authentication, the client must still be authenticated within the secure tunnel, for example by using MS-CHAP (Microsoft Challenge-Handshake Authentication Protocol)

# EAP-TLS (EAP Transport Layer Security)
# - Whereas PEAP only requires the AS to have a certificate, EAP-TLS requires a certificate on the AS and on every single client.
# - EAP-TLS is the most secure wireless authentication method, but it is more difficult to implement than PEAP because every client device needs a certificate.
# - Because the client and server authenticate each other with digital certificates, there is no need to authenticate the client within the TLS tunnel.
# - The TLS tunnel is still used to exchange encryption key information.

## Encryption and Integrity Methods

# TKIP (Temporal Key Integrity Protocol)
# WEP was found to be vulnerable, but wireless hardware at the time was built to use WEP.
# A temporary solution was needed until a new standard was created and new hardware was built.
# TKIP adds various security features:
# - A MIC is added to protect the integrity of messages.
# - A Key mixing algorithm is used to create a unique WEP key for every frame.
# - The initialisation vector is doubled in length from 24 bits to 48 bits, making brute-force attacks much more difficult.
# - The MIC includes the sender MAC address to identify the frame's sender.
# - A timestamp is added to the MIC to prevent replay attacks. Replay attacks involve re-resending a frame that has already been transmitted.
# - A TKIP sequence number is used to keep track of frames sent from each source MAC address. This also protects agains replay attacks.

# CCMP (Counter/CBC-MAC Protocol)
# - CCMP was developed after TKIP and is more secure.
# - It is used in WPA2.
# - To use CCMP, it must be supported by the device's hardware. Old hardware built only to use WEP/TKIP cannot use CCMP.
# - CCMP consists of two different algorithms to provide encryption and MIC.
# 1) AES counter mode encryption
# - AES is the most secure encryption protocol currently available. It is widely used all over the world.
# - There are multiple modes of operation for AES. CCMP uses counter mode.
# 2) CBC-MAC (Cipher Block Chaining Message Authentication Code) is used as a MIC to ensure the integrity of messages.

# GCMP (Galois/Counter Mode Protocol)
# - GCMP is more secure and efficient than CCMP.
# - Its increased efficiency allows higher data throughput than CCMP.
# - It is used in WPA3.
# - GCMP consists of two algorithms:
# 1) AES counter mode encryption
# 2) GMAC (Galois Message Authentication Code) is used as a MIC to ensure the integrity of messages.

## WiFi Protected Access

# The Wi-Fi Alliance has developed three WPA certifications for wireless devices:
# - WPA
# - WPA2
# - WPA3
# To be WPA-certified, equipment must be tested in authorised testing labs.
# All of the above support two authentication modes:
# - Personal mode: A pre-shared key (PSK) is used for authentication. When you connect a home Wi-Fi network, enter the password and are authenticated, that is personal mode.
# This is common in small networks.
# The PSK itself is not send over the air. A four-way handshake is used for authentication, and the PSK is used to generate encryption keys.
# - Enterprise mode: 802.1X is used with an authentication server (RADIUS server).
# No specific EAP method is specified, so all are supported (PEAP, EAP-TLS, etc).

# The WPA certification was developed after WEP proven to be vulnerable and includes the following protocols:
# - TKIP (based on WEP) provides encryption/MIC.
# - 802.1X authentication (Enterprise mode) or PSK (Personal mode)

# WPA2 was released in 2004 and includes the following protocols:
# - CCMP provides encryption/MIC.
# - 802.1X authentication (Enterprise mode) or PSK (Personal mode)

# WPA3 was released in 2018 and includes the following protocols:
# - GCMP provides encryption/MIC.
# - 802.1X authentication (Enterprise mode) or PSK (Personal mode)
# - WPA3 also provides several additional security features, for example:
# -- PMF (Protected Management Frames), protecting 802.11 management frames from eavesdropping/forging.
# -- SAE (Simultaneous Authentication of Equals) protects the four-way handshake when using personal mode authentication.
# -- Forward secrecy prevents data from being decrypted after it has been transmitted over the air. So, an attacker cannot capture wireless frames and then try to decrypt them later.


## Free CCNA | Wireless Configuration | Day 58 | CCNA 200-301 Complete Course

# SW1
vlan 10
name Management
vlan 100
name Internal
vlan 200
name Guest
exit

int range f0/6-8
switchport mode access
switchport access vlan 10
spanning-tree portfast

# WLCs only support static LAG, no PAgP or LACP
int range f0/1-2
channel-group 1 mode on

int port-channel 1
switchport mode trunk
switchport trunk allowed vlan 10,100,200
exit

int vlan 10
ip address 192.168.1.1 255.255.255.0
int vlan 100
ip address 10.0.0.1 255.255.255.0
int vlan 200
ip address 10.1.0.1 255.255.255.0

ip dhcp pool VLAN100
network 10.0.0.0 255.255.255.0
default-router 10.0.0.1
# Option 43 can be used to tell the APs the IP address of their WLC
option 43 ip 192.168.1.100
exit

ip dhcp pool VLAN200
network 10.1.0.0 255.255.255.0
default-router 10.1.0.1
exit

ntp master


### Network Automation

# In the traditional model, engineers manage devices one at a time by connecting to their CLI via SSH.
# Network automation provides many key benefits:
# - Human error (typos etc.) is reduced.
# - Networks become much more scalable. New deployments, network-wide changes, and troubleshooting can be implemented in a fraction of the time.
# - Netowk-wide policy compliance can be assured (standard configurations, software versions, etc).
# - The improved efficiency of network operations reduces the opex (operating expenses) of the network. Each task requires fewer man-hours.

# There are various tools/methods that can be used to automate tasks in the network:
# - SDN (Software-Defined Networking)
# - Ansible
# - Puppet
# - Python scripts
# - etc

## SDN Logical planes
# What does a router do?
# - It forwards messages between networks by examining information in the Layer 3 header.
# - It uses a routing protocol like OSPF to share route information with other routers and build a routing table.
# - It uses ARP to build an ARP table, mapping IP addresses to MAC addresses.
# - It uses Syslog to keep logs of events that occur.
# - It allows a user to connect to it via SSH and manage it.
# What does a switch do?
# - It forwards messages within a LAN by examining information in the Layer 2 header.
# - It uses STP to ensure there are no Layer 2 loops in the network.
# - It builds a MAC address table by examining the source MAC address of frames.
# - It uses Syslog to keep logs of events that occur.
# - It allows a user to connect to it via SSH and manage it.

# The various functions of network devices can be logically divided up (categorised) into planes:
# - Data plane
# - Control plane
# - Management plane

# Data Plane
# All tasks involved in forwarding user data/traffic from one interface to another are part of the data plane.
# A router receives a message, looks for the most specific matching route in its routing table, and forwards it out of the appropriate interface to the next hop.
# - It also de-encapsulates the original Layer 2 header, and re-encapsulates with a new header destined for the next hop's MAC address.
# A switch receives a message, looks at the destination MAC address, andforwards it out of the appropriate interface (or floods it).
# - This includes functions like adding or removing 802.1q VLAN tags.
# NAT (changing the src/dst addresses before forwarding) is part of the data plane.
# Deciding to forward or discard messages due to ACLs, port security, etc. is part of the data plane.
# The data plane is also called the forwarding plane.

# Control Plane
# How does a device's data plane make its forwarding decisions?
# - Routing table, MAC address table, ARP table, STP, etc.
# Functions that build these tables (and other functions that influence the data plane) are part of the control plane.
# The control plane controls what the data plane does, for example by building the router's routing table.
# The control plane performs overhead work.
# - OSPF itself does not forward user data packets, but it informs the data plane about how packets should be forwarded.
# - STP itself is not directly involved in the process of forwarding frames, but it informs the data plane about which interfaces should and should not be used to forward frames.
# - ARP messages are not user data, but they are used to build an ARP table which is used in the process of forwarding data.

# In traditional networking, the data plane and control plane are both distributed. Each device has its own data plane and its own control plane.
# The planes are distributed throughout the network.

# Management Plane
# Like the control plane, the management plane performs overhead work.
# - However, the management plane does not directly affect the forwarding of messages in the data plane.
# The management plane consists of protocols that are used to manage devices.
# - SSH/Telnet, used to connect tot the CLI of a device to configure/manage it.
# - Syslog, used to keep logs of events that occur on the device.
# - SNMP, used to monitor the operations of the device.
# - NTP, used to maintain accurate time on the device.

## Logical Planes
# The operations of the Management plane are usually managed by the CPU.
# However, this is not desirable for the data plane operations because CPU processing is slow (relatively speaking).
# Instead, a specialised hardware ASIC (Application-Specific Integrated Circuit) is used.
# ASICs are chips built for specific purposes.
# Using a switch as an example:
# - When a frame is received, the ASIC (not the CPU) is responsible for the switching logic.
# - The MAC address table is stored in a kind of memory called TCAM (Ternary Content-Addressable Memory).
# - Another common name for the MAC address table is CAM (Content Addressable Memory) table.
# - The ASIC feeds the destination MAC address of the frame into the TCAM, which returns the matching MAC address table entry.
# - The frame is then forwarded out of the appropriate interface.
# Modern routers also use a similar hardware data plane: an ASIC designed for forwarding logic, and tables stored in TCAM.
# A simple summary:
# - When a device receives control/management traffic (destined for itself), it will be processed in the CPU.
# - When a device receives data traffic which should pass through the device, it is processed by the ASIC for maximum speed.

## Software-Defined Networking (SDN)
# SDN is an approach to networking that centralises the control plane into an application called a controller.
# SDN is also called Software-Defined Architecture (SDA) or Controller-Based Networking.
# Traditional control planes use a distributed architecture.
# - For example, each router in the network runs OSPF and the routers share routing information and the calculate their preferred routes to each destination.
# An SDN controller centralises control plane finctions like calculating routes.
# - That is just an example, and how much of the control plane is centralised varies greatly.
# The controller can interact programatically with the network devices using APIs (Application Programming Interfaces).

## Southbound Interface (SBI)
# The SBI is used for communications between the controller and the network devices it controls.
# It typically consists of a communication protocol and API.
# APIs facilitate data exchanges between programs.
# - Data is exchanged between the controller and the network devices.
# - An API on the network devices aloows the controller to access information on the devices, control their data plane tables, etc.
# Some examples of SBIs:
# - OpenFlow
# - Cisco OpFlex
# - Cisco onePK (Open Network Environment Platform Kit)
# - NETCONF

# Using the SBI, the controller communicates with the managed devices and gathers information about them:
# - The devices in the network
# - The topology (how the devices are connected together)
# - The available interfaces on each device
# - Their configurations

## Northbound Interface (NBI)
# The NBI is what allows us to interact with the controller, access the data it gathers about the network, program it, and make changes in the network via the SBI.
# A REST (Representational State Transfer) API is used on the controller as an interface for apps to interact with it.
# Data is sent in a structured (serialised) format such as JSON or XML.
# - This makes it much easier for programs it use the data.

## Automation in Traditional Networks vs SDN
# Networking tasks can be automated in traditional network architectures too:
# - Scripts can be written (ie. using Python) to push commands to many devices at once.
# - Python with good use of Regular Expressions can parse through slow commands to gather information about the network devices.
# However, the robuste and centralised data collected by SDN controllers greatly facilitates these functions.
# - The controller collects information about all devices in the network.
# - Northbound APIs allow apps to access information in a format that is easy for programs to understand (ie. JSON, XML).
# - The centralised data facilitates network-wide analytics.
# SDN tools can provide the benefits of automation without the requirement of third-party scripts and apps.
# - You do not need expertise in automation to make use of SDN tools.
# - However, APIs allow third-party applications to interact with the controller, which can be very powerful.
# Although SDN and automation are not the same thing, the SDN architecture greatly facilitates the automation of various tasks in the network via the SDN controller and APIs.


### JSON, XML, & YAML 

## Data Serialisation
# It is the process of converting data into a standarised format/structure that can be stored (in a file) or transmitted (over a network) and reconstructed later (ie. by a different application).
# This allows the data to be communicated between applications in a way both applications understand.
# Data serialisation languages allow us to represent variables with text.

## JSON
# JavaScript Object Notation (JSON) is an open standard file format and data interchange format that uses human-readable text to store and transmit data objects.
# It is standarised in RFC 8259
# It was delivered from JavaScript, but it is language-independent and many modern programming languages are able to generate and read JSON data.
# - REST APIs often use JSON.
# Whitespace is not significant.
# JSON can represent four primitive data types:
# - string
# - number
# - boolean
# - null
# JSON also has two structured data types:
# - object
# - array

## JSON primitive data types:
# A string is a text value. It is surrounded by double quotes "".
# - "Hello"
# - "five"
# - "5"
# - "true"
# - "null"

# A number is a numeric value. It is not surrounded by quotes.
# - 5
# - 100

# A boolean is a data type that has only two possible values, not surrounded by quotes.
# - true
# - false

# A null value represents the intentional absence of any object value. It is not surrounded by quotes.
# - null

# An object is an unordered list of key-value pairs (variables).
# - Objects are surrounded by curly brackets {}.
# - The key is a string.
# - The value is any valid JSON data type (string, number, boolean, null, object, array).
# - The key and value are separated by a colon : .
# - If there are multiple key-value pairs, each pair is separated by a comma.

{
    "interface": "GigabitEthernet1/1",
    "is_up": true,
    "ipaddress": "192.168.1.1",
    "netmask": "255.255.255.0",
    "speed": 1000
}

# An array is a series of values separated by commas.
# - not key-value pairs
# - the values do not have to be the same data type

## XML
# Extensible Markup Langiage (XML) was developed as a markup language, but is now used as a general data serialisation language.
# - Markup languages (ie. HTML) are used to format text (font, size, color, headings, etc.)
# XML is generally less human-readable than JSON.
# Whitespace is not significant.
# Often used by REST APIs.
# <key>value</key>

## YAML
# YAML originally meant Yet Another Markup Language, but to distinguish its purpose as a data-serialisation language rather than a markup language, it was repurposed to YAML Aint Markup Language.
# YAML is used by the network automation tool Ansible.
# YAML is very human-readable.
# Whitespace is significant (unlike JSON and XML).
# - Indentation is very important.
# YAML files start with --- .
# - is used to indicate a list.
# Keys and values are represented as key:value.


### REST APIs

# An API (Application Programming Interface) is a software interface that allows two applications to communicate with each other.
# APIs are essential nut just for network automation, but for all kings of applications.
# In SDN architecture, APIs are used to communicate between apps and the SDN controller (via the NBI), and between the SDN controller and the network devices (via the SBI).
# The NBI typically used REST APIs.
# NETCONF and RESTCONF are popular southbound APIs.

## CRUD
# CRUD (Create, Read, Update, Delete) refers to the operations we perform using REST APIs.
# Create operations are used to create new variables and set their initial values.
# - ie. create variable "ip_address" and set the value to "10.1.1.1".
# Read operations are used to retrieve the value of a variable.
# - ie. what is the value of variable "ip_address"?
# Update operations are used to change the value of a variable.
# - ie. change the value of variable "ip_address" to "10.2.3.4".
# Delete operations are used to delete variables.
# - ie. delete variable "ip_address".
# HTTP used verbs (aka. methods) that map to these CRUD operations.
# REST APIs typically use HTTP.

# | Purpose | CRUD Operation | HTTP Verb |
# | Create new variable | Create | POST |
# | Retrieve value of variable | Read | GET |
# | Change the value of variable | Update | PUT,PATCH |
# | Delete variable | Delete | DELETE |

## HTTP Request
# When a HTTP client sends a request to a HTTP server, the HTTP header includes information like this:]
# An HTTP Verb (ie. GET)
# A URI (Uniform Resource Identifier), indicating the resource it is trying to access.

# The HTTP request can include additional headers which pass additional information to the server.
# - Check the list at https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers
# An example would be an Accept header, which informs the server about the types of data that can be sent back to the client.
# - ie. Accept: application/json or Accept: application/xml

# You can also view the standard HTTP header fields with some examples at https://en.wikipedia.org/wiki/List_of_HTTP_header_fields
# When a REST client makes an API call (request) to a REST server, it will send an HTTP request like the one above.
# REST APIs do not have to use HTTP for communication, although HTTP is the most common choice.

## HTTPS Response
# The server's response will include a status code indicating if the request succeeded or failed, as well as other details.
# The first digit indicates the class of the response:
# - 1xx informational - the request was received, continuing process
# - 2xx successful - the request was successfully received, understood, and accepted
# - 3xx redirection - further action needs to be taken in order to complete the request
# - 4xx client error - the request contains bad syntax or cannot be fulfilled

# Here are some examples of each HTTP Response class:
# 1xx Informational
# - 102 Processing indicates that the server has received the request and it processing it, but the response is not yet available.
# 2xx Successful
# - 200 OK indicates that the request succeeded.
# - 201 Created indicates that the request succeeded and a new resource was created (ie. response to POST)
# 3xx Redirection
# - 301 Moved Permanently incidates that hte requested resource has been moved, and the server indicates its new location.
# 4xx Client Error
# - 403 Unauthorised means the client must authenticate to get a reponse.
# - 404 Not Found means the requested resource was not found.
# 5xx Server Error
# - 500 Internal Server Error means the server encountered something unexpected that it does not know how to handle.

## REST: Client-server
# REST APIs use a client-server architecture.
# The client uses API calls (HTTP requests) to access the resources on the server.
# The separation between the client and server means they can both change and evolve independently of each other.
# - When the client application chnages or the server application changes, the interface between them must not break.

## REST: Stateless
# REST API exchanges are stateless.
# This means that each API exchange is a separate event, independent of all past exchanges between the client and server.
# - The server does not store information about previous requests from the client to determine how it should respond to new requests.
# If authentication is required, this means that the client must authenticate with the server for each request it makes.
# TCP is an example of a stateful protocol.
# UDP is an example if a stateless protocol.
# Although REST APIs use HTTP, which uses TCP (stateful) as its Layer 4 protocol, HTTP and REST APIs themselves are not stateful. The functions of each layer are separate.

## REST: Cacheable or Non-Cacheable
# REST APIs must support caching of data.
# Caching refers to storing data for future use.
# - For example, your computer might cache many elements of a web page so that it does not have to retrieve the entire page every time you visit it.
# - This imporves performance for the client and reduces the load on the server.
# Not all resources have to be cacheable, but cacheable resources MUST be declared as cacheable.

# REST is not a specific API. Instead, it describes a set of rules about how the API should work.
# The six constraints of RESTful architecture are:
# - Uniform Interface
# - Client-server
# - Stateless
# - Cacheable or non-cacheable
# - Layered system
# - Code-on-demand (optional)

## Cisco DevNet
# Cisco DevNet is Cisco's developer program to help developers and IT professionals who want to write applications and develop integrations with Cisco products, platforms, and APIs.
# DevNet offers lots of free resources such as courses, tutorials, labs, sandboxes, documentation, etc. to learn about automation and develop your skills.
# There is also a DevNet certification track that you can pursue if you are interested in automation.
# We will use their Cisco DNA Center Sandbox to send a REST API call using Postman.
# - DNA Center is one of Cisco's SDN controllers.
# - Postman is a platform for building and using APIs.
# To start:
# - Make an account on developer.cisco.com
# - Make an account on postman.com and download the deskto app (https://postman.com/downloads).
# Will be following this tutorial on DevNet: https://developer.cisco.com/docs/dna-center/#!getting-started


### Software-Defined Networking (SDN)

## SDN Review
# SDN is an approach to networking that centralises the control plane into an application called a controller.
# Traditional control planes use a distributed architecture.
# An SDN controller centralises contol plane functions like calculating routes.
# The controller can interact programmatically with the network devices using APIs.
# The SBI is used for communications between the controller and the network devices it controls.
# The NBI is what allows us to interact with the controller with our scripts and applications.

## SDN Architecture
# 1) Application Layer
# Contains scripts/applications that tell the SDN controller what network behaviors are desired.
# 2) Control Layer
# Contains the SDN controller that receives and processes instructions from the application layer.
# 3) Infrastructure Layer
# Contains the network devices that are responsible for forwarding messages across the network.

## SD-Access
# Cisco SD-Access is Cisco's SDN solution for automating campus LANs.
# - ACI (Application Centric Infrastructure) is their SDN solution for automating data center networks.
# - SD-WAN is their SDN solution for automating WANs.
# Cisco DNA (Digital Network Architecture) Center is the controller at the center of SD-Access.

# The underlay is the underlying physical network devices and connections (including wired and wireless) which provide IP connectivity (ie. using IS-IS)
# - Multiplayer switches and their connections.
# The overlay is the virtual network built on top of the physical underlay network.
# - SD-Access uses VXLAN (Virtual Extensible LAN) to build tunnels.
# The fabric is the combination of the overlay and underlay; the physical and virtual network as a whole.

## SD-Access Underlay
# The underlay's purpose is to support the VXLAN tunnels of the overlay.
# There are three different roles for switches in SD-Access:
# - Edge nodes: Connect to end hosts
# - Border nodes: Connect to devices outside of the SD-Access domain, ie. WAN routers.
# - Control nodes: Use LISP (Locator ID Separation Protocol) to perform various control plane functions.

# You can add SD-Access on top of an existing network (brownfield deployment) if your network hardware and software supports it.
# - Google 'Cisco SD-Access compatibility matrix' if you are curious.
# - In this case DNA Center will not configure the underlay.

# A new deployment (greenfield deployment) will be configured by DNA Center to use the optimal SD-Access uderlay:
# - All switches are Layer 3 and use IS-IS as their routing protocol.
# - All links between switches are routed ports. This means STP is not needed.
# - Edge nodes (access switches) act as the default gateway of end hosts (routed access layer).

## SD-Access Overlay
# LISP provides the control plane of SD-Access.
# - A list of mappings of EIDs (endpoint identifiers) to RLOCs (routing locators) is kept.
# - EIDs identify end hosts connected to edge switches, and RLOCs identify the edge switch which can be used to reach the end host.
# - There is a LOT more detail to cover about LISP, but I think you can see how it differs from the traditional control plane.

# Cisco TrustSec (CTS) provides policy control (QoS, security policy, etc).

# VXLAN provides the data plane of SD-Access.

## Cisco DNA Center
# Cisco DNA Center has two main roles:
# - The SDN controller in SD-Access
# - A network manager in a traditional network (non-SD-Access)

# DNA Center is an application installed on Cisco UCS server hardware.
# It has a REST API which can be used to interact with DNA Center.
# The SBI supports protocols such as NETCONF and RESTCONF (as well as traditional protocols like Telnet, SSH, SNMP).
# DNA Center enables Intent-Based Networking (IBN).
# - The goal is to allow the engineer to communicate their intent for network behaviour to DNA Center, and the DNA Center will take care of the details of the actual configurations and policies on devices.
# It simplifies the process and allows engineers to spend time on more important things than analysing and configuring policies on devices one at a time.

# Traditional security policies using ACLs can become very cumbersome.
# - ACLs can have thousands of entries.
# - The intent of entries is forgotten with time and as engineers leave and new engineers take over.
# - Configuring and applying the ACLs correctly across a network is cumbersome and leaves room for error.

# DNA Center allows the engineer to specify the intent of the policy (this group of users cannot communicate with this group, this group can access this server but not that server, etc).
# DNA Center will take care of the exact details of implementing the policy.

## DNA Center vs Traditional Network Management

# Traditional network management:
# - Devices are configured one-by-one via SSH or console connection.
# - Devices are manually configured via console connection before being deployed.
# - Configurations and policies are managed per-device. (distributed)
# - New network deployments can take a long time due to the manual labour required.
# - Errors and failures are more likely due to increased manual effort.

# DNA Center-based network management:
# - Devices are centrally managed and monitored from the DNA Center GUI or other applications using its REST API.
# - The administrator communicates their intended network behaviour to the DNA Center, which changes those intentions into configurations on the managed network devices.
# - Configurations and policies are centrally managed.
# - Software versions are also centrally managed. DNA Center can monitor cloud servers for new versions and then update the managed devices.
# - New network deployments are much quicker. New devices can automatically receive their configurations from DNA Center without manual configuration.


### Configuration Management Tools: Ansible, Puppet, & Chef

## Configuration Drift
# Configuration drift is when individual changes made over time cause a device's configuration to deviate from the standard/correct configurations as defined by the company.
# - Although each device will have unique parts if its configuration (IP addresses, host name, etc), most of a device's configuration is usually defined in standard templates designed by the network architects/engineers of the company.
# - As individual engineers make changes to devices (for example to troubleshoot and fix network issues, test configurations, etc.), the configuration of a device can drift away from the standard.
# - Records of these individual changes and their reasons are not kept.
# - This can lead to future issues.

# Even without automation tools, it is best to have standard configuration management practices.
# - When a change is made, save the config as a text file and place it in a shared folder.
# - A standard naming system like 'hostname_yyyymmdd' might be used.
# - There are flaws to this system, as an engineer might forget to place the new config in the folder after making changes. Which one should be considered the correct config?
# - Even if configurations are properly saved like this, it does not guarantee that the configurations actually match the standard.

## Configuration Provisioning
# Configuration provisioning refers to how configuration changes are applied to devices.
# - This includes configuring new devices, too.
# Traditionally, configuration provisioning is done by connecting to devices one-by-one via SSH.
# - This is not practical in large networks.
# Configuration management tools like Ansible, Puppet, and Chef allow us to make changes to devices on a mass scale with a fraction of the time/effort.
# Two essential components: templates and variables

## Configuration Management Tools
# Configuration management tools are network automation tools that facilitate the centralised control of large numbers of network devices.
# Ansible, Puppet, and Chef were originally developed after the rise of VMs, to enable server system admins to automate the process of creating, configuring, and removing VMs.
# - However, they are also widely used to manage network devices.
# These tools can be used to perform tasks such as:
# - Generate configurations for new devices on a large scale.
# - Perform configuration changes on devices (all devices in your network, or certain subnet of devices).
# - Check device configurations between devices, and between different versions of configurations on the same device.

## Ansible
# Ansible is a configuration management framework owned by Red Hat.
# Ansible itself is written in Python.
# Ansible is agentless.
# - It does not require any special software to run on the managed devices.
# Ansible uses SSH to connect to devices, make configuration changes, extract information, etc.
# Ansible uses a push model. The Ansible server (control node) uses SSH to connect to managed devices and push configuration changes to them.
# After installing Ansible itself, you must create several text files:
# - Playbooks: These files are blueprints of automation tasks. They outline the logic and actions of the tasks that Ansible should do. Written in YAML.
# - Inventory: These files list the devices that will be managed by Ansible, as well as characteristics of each device such as their device rile (access switch, core switch, WAN router, firewall, etc). Writtent in INI, YAML, or other formats.
# - Templates: These files represent a device's configuration file, but specific values for variables are not provided. Written in Jinja2 format.
# - Variables: These files list variables and their values. These values are substituted into the templates to create complete configuration files. Writtent in YAML.

## Puppet
# Puppet is a configuration management tool written in Ruby.
# Puppet is typically agent-based.
# - Specific software must be installed on the managed devices.
# - Not all Cisco devices support a Puppet agent.
# It can be run agentless, in which a proxy agent runs on an external host, and the proxy agent uses SSH to connect to the managed devices and communicate with them.
# The Puppet server is called the Puppet master.
# Puppet uses a pull model (clients pull configurations from the Puppet master).
# - Clients use TCP 8140 to communicate with the Puppet master.
# Instead of YAML, it uses a proprietary language for files.
# Text files required on the Puppet master include:
# - Manifest: This file defines the desired configuration state of a network device.
# - Templates: Similar to Ansible templates. Used to generate Manifests.

## Chef
# Chef is a configuration management tool written in Ruby.
# Chef is agent-based.
# - Specific software must be installed on the managed devices.
# - Not all Cisco devices support a Chef agent.
# Chef uses a pull model.
# The server uses TCP 10002 to send configurations to clients.
# Files use a DSL (Domain-Specific Language) based on Ruby.
# Text files used by Chef include:
# - Resources: The ingredients in a recipe. Configuration objects managed by Chef.
# - Recipes: The recipes in a cookbook. Outline the logic and actions of the tasks performed on the resources.
# - Cookbooks: A set of related recipes grouped together.
# - Run-list: An ordered list of recipes that are run to bring a device to the desired configuration state.

## Ansible, Puppet, Chef Comparison

# |                           | Ansible | Puppet | Chef |
# | Key files defining actions| Playbook | Manifest | Recipe, Run-list |
# | Communication Protocol | SSH | HTTPS (via REST API) | HTTPS (via REST API) |
# | Key Port | 22 (SSH port) | 8140 | 10002 |
# | Agent-based or Agentless | Agentless | Agent-based (or Agentless) | Agent-based |
# | Push or Pull Model | Push | Pull | Pull |


### IP Routing: BGP Configuration Guide

## How to Configure BGP 4 Soft Configuration
# https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/iproute_bgp/configuration/xe-16/irg-xe-16-book/bgp-4-soft-configuration.html

# SUMMARY STEPS

enable
configure terminal
router bgp autonomous-system-number
bgp log-neighbor-changes
bgp soft-reconfig-backup
neighbor {ip-address | peer-group-name } remote-as autonomous-system-number
neighbor {ip-address | peer-group-name } soft-reconfiguration [inbound ]
neighbor {ip-address | peer-group-name } route-map map-name {in | out }
Repeat Steps 6 through 8 for every peer that is to be configured with inbound soft reconfiguration.
exit
route-map map-name [permit | deny ] [sequence-number ]
set ip next-hop ip-address
end
show ip bgp neighbors [neighbor-address ]
show ip bgp [network ] [network-mask ]



### BGP Configuration on Cisco IOS
# https://www.youtube.com/watch?v=zqTFyuiq9bg&t=25s

# | R5 |<--- 10.56.0.0/24 --->| R6 |<--- 192.168.68.0 --->| R8 |

# R6
router bgp 3
neighbor 192.168.68.8 remote-as 89
neighbor 5.5.5.5 remote-as 3
neighbor 5.5.5.5 next-hop-self
# Advertise routes into the BGP routing table
network 1.1.1.1 mask 255.255.255.255
# do show ip bgp summary
# Reconfig outbound updates without clearing the entire BGP session
# clear ip bgp 5.5.5.5 soft out

# R5
router bgp 3
neighbor 6.6.6.6 remote-as 3
# do ping 6.6.6.6 source lo0
neighbor 6.6.6.6 update-source lo0
neighbor 5.5.5.5 update-source lo0
# Advertise routes into the BGP routing table
network 1.1.1.1 mask 255.255.255.255
# show ip bgp summary
# show ip route bgp
