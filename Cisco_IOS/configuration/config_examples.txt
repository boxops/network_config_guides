### Configure Hostname

configure terminal
hostname R1
do sh run | inc hostname


### Configure an IP address on an Interface

interface FastEthernet0/0
ip address 10.1.1.1 255.255.255.0
no shutdown


### Configure a Management IP on a Layer 2 Switch

# 1. Enter the VLAN 1 configuration mode with the interface vlan 1 global configuration command and assign an IP address with the ip address IP_ADDRESS SUBNET_MASK interface subcommand, then enable the VLAN 1 interface with the no shutdown interface subcommand.
conf t
int vlan 1
ip add 192.168.111.100 255.255.255.0
no sh
exit
# 2. Use the ip default-gateway IP_ADDRESS global configuration command to configure the default gateway.
ip default-gateway 192.168.111.1
# 3. Add the ip name-server IP_ADDRESS global configuration command to configure the DNS server.
ip name-server 192.168.111.1


### Configure SSH on IOS Router or Switch

# There are four steps required to enable SSH support on a Cisco IOS:
# 1. Configure the hostname.
configure terminal
hostname R1
# 2. Configure the DNS domain.
ip domain name cisco.com
# 3. Generate the SSH key to be used.
crypto key generate rsa modulus 1024
# 4. Enable SSH transport support for the virtual type terminal (vtys).
line vty 0 15
transport input ssh
login local
exit
# 5. Enable SSH version 2.
ip ssh version 2
# 6. Create a user and password for SSH access.
username admin privilege 15 password Cisco123
end

## (Optional SSH Security): Add an ACL to allow incoming SSH connections.
# Apply a Standard ALC:
conf t
access-list 1 permit host 192.168.111.1
access-list 1 permit host 192.168.111.2
line vty 0 15
access-class 1 in
end
# OR Apply an Extended Named ACL:
ip access-list extended SSH_ACCESS_CONTROL
permit udp 192.168.111.1 0.0.0.255 any eq 22
permit tcp 192.168.111.1 0.0.0.255 any eq 22
deny udp any any eq 22
deny tcp any any eq 22
permit ip any any
line vty 0 15
access-class SSH_ACCESS_CONTROL in
end

## Note: Older IOS supports the kind of RSA with SHA-1, and SHA-1 is considered very weak. This essentially means that there are no secure ways to connect to it over SSH.
# Workaround on client (However, be aware that this is a workaround and it's known to be insecure.):
sudo tee -a ~/.ssh/config > /dev/null <<EOT
Host 192.168.111.1
    KexAlgorithms +diffie-hellman-group14-sha1
    PubkeyAcceptedAlgorithms +ssh-rsa
    HostkeyAlgorithms +ssh-rsa
EOT


### SSH Public Key Authentication
# Reference: https://networklessons.com/uncategorized/ssh-public-key-authentication-cisco-ios
# 1.1 Windows Configuration
# Create a .ssh directory in your home directory if it does not already exist:
mkdir /Users/username/.ssh
# Go to the .ssh folder:
cd /Users/username/.ssh
# Run ssh-keygen to generate an SSH key-pair:
ssh-keygen -t rsa
# 1.2 Linux Configuration
# Generate an RSA keypair:
ssh-keygen -b 1024 -t rsa
# 2. Enable SSH on Cisco IOS (refer to configuration above).
# Optionally, you can configure the router to disable SSH password authentication:
no ip ssh server authenticate user password
no ip ssh server authenticate user keyboard
# 3.1 Windows Public Key
# You can open the public key file (windows_user.pub) in your favorite text editor.
# Remove the “begin”, “end” and “comment” so that we only have the public key left.
# On the Cisco device, add the public key for a username we choose. we will call this user “WINDOWS_USER”. Once you enter the key-string command, you can keep adding lines until you type exit:
R1(config)#ip ssh pubkey-chain 
R1(conf-ssh-pubkey)#username WINDOWS_USER
R1(conf-ssh-pubkey-user)#key-string
R1(conf-ssh-pubkey-data)#AAAAB3NzaC1yc2EAAAABJQAAAQEAijoMF9oBwyQxwYbVlFprz+fG8oe5uAcCxwMw       
R1(conf-ssh-pubkey-data)#eIR1lyAnDJIsYbTbcdm+n5KiQnCt2561MpN4yOFpajFNM/dqH7/jYaqaicHCSV2F       
R1(conf-ssh-pubkey-data)#RGauEp7FzN/uXxsX7mii6qOuxovl9OflLpXcvH5QH6551ycmL8nIv8UCY8uayiGI        
R1(conf-ssh-pubkey-data)#INsC0LyKEctWDW6qWp43T7rhcP0y4JoMraTCZLIPNE0Bo0bHgnGLg6fEvJmyB3sX       
R1(conf-ssh-pubkey-data)#H+7BaxHdYKg2OcIgVqYzclWhDwxj32kqd1BCq089iBMrb4QppDU2eM/t22iK29mn      
R1(conf-ssh-pubkey-data)#eqOGTiCkxB80ix+KULT9okmqkj3TbhCpunTfuPCCRNrjqndBsw==
R1(conf-ssh-pubkey-data)#exit
R1(conf-ssh-pubkey-user)#exit
R1(conf-ssh-pubkey)#exit
# The router now knows the public key of our windows users.
# 3.2 Linux Public Key
# Take a look at the public key:
cat /home/ubuntu/.ssh/id_rsa.pub
# The key is printed on a single line, that’s fine but Cisco IOS only supports a maximum of 254 characters on a single line so you won’t be able to paste this in one go. 
# There is a useful Linux command you can use to break the public key in multiple parts:
fold -b -w 72 /home/ubuntu/.ssh/id_rsa.pub
# Remove the “ssh-rsa” part at the beginning and the comment at the end.
# Add the key to the router, we will use the username “LINUX_USER”:
R1(config)#ip ssh pubkey-chain 
R1(conf-ssh-pubkey)#username LINUX_USER
R1(conf-ssh-pubkey-user)#key-string
R1(conf-ssh-pubkey-data)#AAAAB3NzaC1yc2EAAAADAQABAAABAQC80DsOF4nkk15V0V2U7r4Q2MyAwIbgQX/7    
R1(conf-ssh-pubkey-data)#rqdUyNCTulliYZWdxnQHaI0WpvcEHQTrSXCauFOBqUrLZglI2VExOgu0TmmWCajW/vnp8J5b
R1(conf-ssh-pubkey-data)#ArzwIk83ct35IHFozPtl3Rj79U58HwMlJ2JhBTkyTrZYRmsP+r9VF7pYMVcuKgFS+gDvhbux
R1(conf-ssh-pubkey-data)#M8DNLmS1+eHDw9DNHYBA+dIaEIC+ozxDV7kF6wKOx59E/Ni2/dT9TJ5Qge+Rw7zn+O0i1Ib9
R1(conf-ssh-pubkey-data)#5djzNfVdHq+174mchGx3zV6l/6EXvc7G7MyXj89ffLdXIp/Xy/wdWkc1P9Ei8feFBVLTWijX
R1(conf-ssh-pubkey-data)#iilbYWwdLhrk7L2EQv5x
R1(conf-ssh-pubkey-data)#exit
R1(conf-ssh-pubkey-user)#exit
R1(conf-ssh-pubkey)#exit
# 4. Verification
# Once you added the public key to the router, Cisco IOS will calculate a key hash:
show running-config | begin pubkey
# SSH to the Cisco device from both Windows and Linux:
ssh -l admin 192.168.111.1


### IPv6 Address with RIPng Configuration

ipv6 unicast-routing
ipv6 router rip [process-id-string]

interface g0/0
ipv6 address 2001:0:1:0::1/64
ipv6 rip [process-id-string] enable
no sh
exit

ping ipv6 2001:0:1:0::2


### Configuring VTP Client Mode on Switches

# SW1 VTP Server
int range f0/11 - 12
switchport trunk encapsulation dot1q
switchport mode trunk
exit
vtp domain cisco

# SW2 VTP Client
int range f0/11 - 12
switchport trunk encapsulation dot1q
switchport mode trunk
exit
vtp domain cisco
vtp mode client

# SW1 VTP Server - Create VLANs
vlan 10
vlan 100

# Verify that VLAN 10 and VLAN 100 were created on SW2
sh vtp status


### Switchport Commands

# Access mode
switchport mode access
switchport access vlan [vlan-id]
# Trunk mode
switchport mode trunk
switchport trunk encapsulation dot1q
# Allow VLANs on the trunk port
switchport trunk allowed vlan [vlan-list]
# Verify trunk configuration
sh interfaces trunk
# Configure the VLAN membership mode of a port (DTP)
switchport mode {access | dynamic {auto | desirable} | trunk}
# Disable DTP
switchport nonegotiate
# Set switchport trunk characteristics
switchport trunk {allowed vlan [vlan-list] | native vlan [vlan-id]}


### ROAS (Router On a Stick) Configuration

# R1
int g0/0
no sh
int g0/0.10
encapsulation dot1q 10
ip address 192.168.100.1 255.255.255.128
int g0/0.20
encapsulation dot1q 20
ip address 192.168.100.129 255.255.255.128
# Verify the Configuration
do sh run | section Gig

## At a workstation level, interVLAN routing problems can be caused by:
# - incorrect IP addresses
# - incorrect subnet masks
# - incorrect default gateways

## At the Layer 2 switching level, VLAN routing can be caused by:
# - incorrect VLAN port configurations
# - incorrect trunk configurations
# - mismatched native VLANs

# Verify switchport problems:
sh run | section Fast
sh vlan brief
sh int trunk
sh int status
sh int [interface-id] switchport
# Find and filter specific MAC address entries of end hosts on a switch
sh mac | section 000C.6066.7031

## InterVLAN routing problems on routers can be caused by:
# - misconfigured IP addresses
# - misconfigured trunk ports
# - misconfigured routing protocols

# Verify InterVLAN routing problems:
sh int G0/0
sh protocols
sh ip route
sh run int G0/0.20
sh int G0/0.20


### CDP

# Cisco Discovery Protocol allows devices to share basic configuration information and will operate without any IP addresses or protocol-specific information being configured.
# CDP, which is enabled by default on all interfaces, is a Data Link protocol at Layer 2 of the OSI model.
# CDP is not routable, it can travel only to directly connected devices.

# Disable/Enable CDP on an interface
[no] cdp enable
# Disable/Enable CDP globally
[no] cdp run
# Specify or modify the amount of time the receiving device should hold a CDP packet before disdarding it
cdp holdtime [seconds]
# Specify how often the Cisco IOS software sends CDP packets
cdp timer [seconds]
# Display global CDP information including timer and hold-time information
show cdp
# Display information about a specific neighboring device using CDP
show cdp entry {* | entry-name [protocol | version]}
# Display information about the interfaces on which CDP is enabled
show cdp interface [type number]
# Display information about directly connected neighbors
show cdp neighbors
# Display directly connected neighbor devices and their device types, interface names, and IP addresses
show cdp neighbor detail
# Display information about traffic between devices gathered by using CDP
show cdp traffic


### LLDP

# Specify the amoun of time a receiving device should hold the information sent by a device before descarding it
lldp holdtime [seconds]
# Enable LLDP globally on all interfaces (disabled by default on Cisco devices)
lldp run
# Set the transmission frequency of LLDP updates in seconds
lldp timer
# Disable/Enable LLDP packets to be sent from an interface
[no] lldp transmit
# Disable/Enable LLDP packets to be received from an interface
[no] lldp receive
# Display global information, such as frequency of transmissions, the holdtime for packets being sent, delay time for LLDP to initialise on an interface
show lldp
# Display information about interfaces where LLDP is enabled
show lldp interface [type number]
# Display information about neighbors, including device type, interface type and number, holdtime settings, capabilities, and port ID
show lldp neighbors [interface-id] [detail]


### EtherChannel

# Assign an Ethernet interface to an EtherChannel group
channel-group [port-channel-number] mode {auto [non-silent] | desirable [non-silent] on | active | passive}
# Configure the EtherChannel negotiation protocol for the interface
channel-protocol {lacp | pagp}
# Configure the LACP priority for the interface
lacp port-priority [priority-value]
# Configure the LACP priority for the system
lacp system-priority [priority-value]
# Display EtherChannel information for the channel
show etherchannel [channel-group-number] {detail | load-balance | port | port-channel | summary | protocol}

## EtherChannel Configuration
# ASW1
int r f0/1 - 10
channel-protocol lacp
channel-group 1 mode passive
# DSW1
int r f0/1 - 10
channel-protocol lacp
channel-group 1 mode active
# Verify portchannel configuration
show interfaces port-channel
# Determine the administrative mode of the switchport
show interfaces port-channel switchport
# Change the administrative mode to form a trunk unconditionally on the portchannel
# ASW1
int port-channel 1
switchport trunk encapsulation dot1q
switchport mode trunk
# DSW1
int port-channel 1
switchport trunk encapsulation dot1q
switchport mode trunk
# Verify the etherchannel operation
show etherchannel summary
# Determine port priorities
show etherchannel port
# Increase the port priority of an interface (lower number is higher priority)
int f0/9
lacp port-prioirty 100
# Note: Lower device ID will decide which interfaces are active for EtherChannel regardless of the port priority configurations on the device with a higher device ID.
# LACP allows only one switch to make decisions about which interfaces are actively participating in the EtherChannel.
# The LACP system priority and the device ID (switch MAC address) are used to determine which switch is the decision maker.
# Change the LACP system priority value to make it the decision maker about active ports in the EtherChannel
lacp system-priority 100
